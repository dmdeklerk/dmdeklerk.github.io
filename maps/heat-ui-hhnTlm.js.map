{"version":3,"sources":["app/src/loader.ts","app/src/config.ts","app/src/decorators.ts","app/src/components/AbstractBatchViewerComponent.ts","app/src/components/ArdorTransactionsProviderFactory.ts","app/src/components/BtcTransactionsProviderFactory.ts","app/src/components/EthTransactionsProvider.ts","app/src/components/ExplorerTradesProviderFactory.ts","app/src/components/FimkTransactionsPovideFactory.ts","app/src/components/IotaTransactionsProviderFactory.ts","app/src/components/LatestBlocksProvider.ts","app/src/components/NxtTransactionsProviderFactory.ts","app/src/components/TransactionsProvider.ts","app/src/components/VirtualRepeatComponent.ts","app/src/components/application-system-time.ts","app/src/components/copy-text.ts","app/src/components/downloading-blockchain.ts","app/src/components/elipses-loading.ts","app/src/components/timestamp.ts","app/src/services/transactions/lib/AbstractTransaction.ts","app/src/services/transactions/lib/GenericDialog.ts","app/src/services/transactions/AssetIssueService.ts","app/src/services/transactions/SendmoneyService.ts","app/src/components/toolbar.ts","app/src/components/user-balance.ts","app/src/components/user-contacts.ts","app/src/components/virtual-repeat-ardr-transactions.ts","app/src/components/virtual-repeat-btc-transactions.ts","app/src/components/virtual-repeat-eth-transactions.ts","app/src/components/virtual-repeat-fimk-transactions.ts","app/src/components/virtual-repeat-iota-transactions.ts","app/src/components/virtual-repeat-nxt-transactions.ts","app/src/components/virtual-repeat-trades.ts","app/src/components/virtual-repeat-transactions.ts","app/src/dialogs/about.ts","app/src/dialogs/assetInfo.ts","app/src/dialogs/blockchainDetails.ts","app/src/dialogs/depositAsset.ts","app/src/dialogs/depositEtherDialog.ts","app/src/dialogs/dialogs.ts","app/src/dialogs/download.ts","app/src/dialogs/etherTransactionReceipt.ts","app/src/dialogs/jsonDetails.ts","app/src/dialogs/prompt.ts","app/src/dialogs/shutdown.ts","app/src/dialogs/textEditor.ts","app/src/dialogs/transactionDetails.ts","app/src/dialogs/withdrawEther.ts","app/src/lib/EventEmitter.ts","app/src/lib/converters.ts","app/src/lib/crypto.ts","app/src/lib/easing.ts","app/src/lib/input-clear.ts","app/src/lib/iterator.ts","app/src/lib/lang.ts","app/src/lib/utils.ts","app/src/services/ARDORCryptoService.ts","app/src/services/AbiDecoderService.ts","app/src/services/AbstractDataProvider.ts","app/src/services/ArdorAssetInfoService.ts","app/src/services/ArdorBlockExplorerService.ts","app/src/services/ArdorPendingTransactionsService.ts","app/src/services/AssetInfoService.ts","app/src/services/AssetVerificationService.ts","app/src/services/BitcoinBlockExplorerService.ts","app/src/services/BitcoinMessagesService.ts","app/src/services/BitcoinPendingTransactionsService.ts","app/src/services/BitcoreService.ts","app/src/services/BtcBlockExplorer3rdPartyService.ts","app/src/services/BtcBlockExplorerHeatNodeService.ts","app/src/services/ClipboardService.ts","app/src/services/ElectronService.ts","app/src/services/EnvService.ts","app/src/services/EthTransactionParserService.ts","app/src/services/EthereumPendingTransactionsService.ts","app/src/services/EthplorerService.ts","app/src/services/FIMKCryptoService.ts","app/src/services/FimkPendingTransactions.ts","app/src/services/HttpService.ts","app/src/services/IotaBlockExplorerService.ts","app/src/services/IotaCoreService.ts","app/src/services/IotaPendingTransactions.ts","app/src/services/LightwalletService.ts","app/src/services/LocalKeyStoreService.ts","app/src/services/NXTCryptoService.ts","app/src/services/NxtBlockExplorerService.ts","app/src/services/NxtPendingTransactionService.ts","app/src/services/PanelService.ts","app/src/services/RenderService.ts","app/src/services/SecretGeneratorService.ts","app/src/services/ServerService.ts","app/src/services/SettingsService.ts","app/src/services/StatusService.ts","app/src/services/StorageService.ts","app/src/services/TrollboxService.ts","app/src/services/UpdateThirdPartyAPIResponsesUtil.ts","app/src/services/UserService.ts","app/src/services/WalletFileService.ts","app/src/services/Web3Service.ts","app/src/services/mofoSocketService.ts","app/src/components/routes/login.ts","app/src/components/routes/new.ts","app/src/services/currencies/ARDRCurrency.ts","app/src/services/currencies/BTCCurrency.ts","app/src/services/currencies/ETHCurrency.ts","app/src/services/currencies/FIMKCurrency.ts","app/src/services/currencies/HEATCurrency.ts","app/src/services/currencies/IOTACurrency.ts","app/src/services/currencies/NXTCurrency.ts","app/src/services/heat/HeatAPI.ts","app/src/services/heat/HeatService.ts","app/src/services/heat/HeatSubscriber.ts","app/src/services/heat/HeatSubscriberTopic.ts","app/src/services/heat/bundles.ts","app/src/services/p2pmessaging/CallDialog.ts","app/src/services/p2pmessaging/MessageHistory.ts","app/src/services/p2pmessaging/P2PConnector.ts","app/src/services/p2pmessaging/P2PMessaging.ts","app/src/services/p2pmessaging/P2pContactUtils.ts","app/src/services/p2pmessaging/Room.ts","app/src/services/renderers/ControlCharRender.ts","app/src/services/renderers/EmojiiRender.ts","app/src/services/transactions/AssetTransferService.ts","app/src/services/transactions/AssetWithdrawService.ts","app/src/services/transactions/BalanceLeaseService.ts","app/src/services/transactions/CancelAskOrderService.ts","app/src/services/transactions/CancelBidOrderService.ts","app/src/services/transactions/MasternodeService.ts","app/src/services/transactions/PlaceAskOrderService.ts","app/src/services/transactions/PlaceBidOrderService.ts","app/src/services/transactions/SendmessageService.ts","app/src/services/transactions/WhitelistMarketService.ts","app/src/components/routes/ardor/ardor-account.ts","app/src/components/routes/bitcoin/bitcoin-account.ts","app/src/components/routes/ethereum/ethereum-account.ts","app/src/components/routes/explorer/RewardsProvider.ts","app/src/components/routes/explorer/SearchAccountsProvider.ts","app/src/components/routes/explorer/explorer-account.ts","app/src/components/routes/explorer/explorer-block.ts","app/src/components/routes/explorer/explorer-latest-blocks.ts","app/src/components/routes/explorer/explorer-results-accounts.ts","app/src/components/routes/explorer/explorer-results.ts","app/src/components/routes/explorer/explorer-rewards.ts","app/src/components/routes/explorer/explorer-search.ts","app/src/components/routes/explorer/explorer.ts","app/src/components/routes/fimk/fimk-account.ts","app/src/components/routes/home/home.ts","app/src/components/routes/iota/iota-account.ts","app/src/components/routes/messenger/edit-message.ts","app/src/components/routes/messenger/message-batch-entry.ts","app/src/components/routes/messenger/message-batch-viewer.ts","app/src/components/routes/messenger/messenger.ts","app/src/components/routes/messenger/msg-viewer.ts","app/src/components/routes/messenger/p2p-messages-viewer.ts","app/src/components/routes/messenger/p2p-messaging-probe.ts","app/src/components/routes/server/server.ts","app/src/components/routes/nxt/nxt-account.ts","app/src/components/routes/trader/OrdersProvider.ts","app/src/components/routes/trader/TradesProvider.ts","app/src/components/routes/trader/trader-balances.ts","app/src/components/routes/trader/trader-chart.ts","app/src/components/routes/trader/trader-info-asset-description.ts","app/src/components/routes/trader/trader-info.ts","app/src/components/routes/trader/trader-list-item-loading.ts","app/src/components/routes/trader/trader-markets.ts","app/src/components/routes/trader/trader-orders-buy.ts","app/src/components/routes/trader/trader-orders-my.ts","app/src/components/routes/trader/trader-orders-sell.ts","app/src/components/routes/trader/trader-quick-buy-sell.ts","app/src/components/routes/trader/trader-trade-history.ts","app/src/components/routes/trader/trader-trollbox.ts","app/src/components/routes/trader/trader-volume.ts","app/src/components/routes/trader/trader.ts","app/src/components/routes/wallet/wallet.ts","app/src/services/transactions/lib/AbstractDialogField.ts","app/src/services/transactions/lib/DialogFieldAccount.ts","app/src/services/transactions/lib/DialogFieldAsset.ts","app/src/services/transactions/lib/DialogFieldHidden.ts","app/src/services/transactions/lib/DialogFieldMoney.ts","app/src/services/transactions/lib/DialogFieldStatic.ts","app/src/services/transactions/lib/DialogFieldText.ts","app/src/services/transactions/lib/TransactionBuilder.ts","app/src/components/routes/trader/ardor/ArdorTradesProvider.ts","app/src/components/routes/trader/ardor/ardor-trade-quick-buy-sell.ts","app/src/components/routes/trader/ardor/ardor-trader-balances.ts","app/src/components/routes/trader/ardor/ardor-trader-info-asset-description.ts","app/src/components/routes/trader/ardor/ardor-trader-info.ts","app/src/components/routes/trader/ardor/ardor-trader-markets.ts","app/src/components/routes/trader/ardor/ardor-trader-orders-buy.ts","app/src/components/routes/trader/ardor/ardor-trader-orders-my.ts","app/src/components/routes/trader/ardor/ardor-trader-orders-sell.ts","app/src/components/routes/trader/ardor/ardor-trader-trade-history.ts","app/src/components/routes/trader/ardor/ardor-trader.ts","app/src/components/routes/trader/ardor/ardorOrdersProvider.ts"],"names":[],"mappings":"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","file":"heat-ui-hhnTlm.js","sourcesContent":["/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule heat {\n\n  export var isTestnet = window.localStorage.getItem('testnet')=='true';\n  export var isBetanet = window.localStorage.getItem('betanet')=='true';\n\n  export var $inject: angular.auto.IInjectorService;\n\n  /* Allows us to fully reload all components that make up the app while leaving\n     intact all initialized services, call this method after switching to the\n     desired location path. */\n  export function fullApplicationScopeReload() {}\n\n  export class Loader {\n\n    static app: angular.IModule;\n    private static config_fn = [];\n    private static run_fn = [];\n    private static controller_fn = [];\n    private static factory_fn = [];\n    private static directive_fn = [];\n\n    constructor() {\n      Loader.controller('AppController', ['$router','user','$location','$scope','$rootScope',\n      function ($router, user: UserService, $location: angular.ILocationService, $scope: angular.IScope, $rootScope: angular.IScope) {\n\n        heat.$inject = angular.element(document).injector();\n\n        $router.config({ path: '/', redirectTo: '/login' });\n\n        function isUnlocked() {\n          if (!user.unlocked) {\n            if (!/\\/p2pmessagingprobe.*/.test($location.path()) &&\n                !/\\/trader.*/.test($location.path()) &&\n                !/\\/explorer.*/.test($location.path()) &&\n                !/\\/explore-account.*/.test($location.path())) {\n              if (!/\\/login\\/\\w+/.test($location.path())) {\n                $location.path('login');\n              }\n            }\n          }\n          // Live agent show-hide contact button.\n          // var el = angular.element(document.documentElement);\n          // if (/\\/claim/.test($location.path()) || /\\/claim2\\/\\w+/.test($location.path())) {\n          //   if (el.hasClass('hide-live-agent')) {\n          //     el.removeClass('hide-live-agent');\n          //   }\n          // }\n          // else {\n          //   if (!el.hasClass('hide-live-agent')) {\n          //     el.addClass('hide-live-agent');\n          //   }\n          // }\n        }\n\n        isUnlocked();\n\n        $scope['userUnlocked'] = user.unlocked;\n        $rootScope['isTestnet'] = heat.isTestnet;\n\n        $rootScope.$on('$locationChangeSuccess', isUnlocked);\n\n        user.on(UserService.EVENT_UNLOCKED, () => {\n          $scope.$evalAsync(() => { $scope['userUnlocked'] = true })\n        });\n\n        user.on(UserService.EVENT_LOCKED, () => {\n          $scope.$evalAsync(() => { $scope['userUnlocked'] = false })\n        });\n\n        /* Enable full application scope reload */\n        $scope['showApp'] = true\n        heat.fullApplicationScopeReload = function () {\n          $scope.$evalAsync(() => {\n            $scope['showApp'] = false\n            setTimeout(function () {\n              $scope.$evalAsync(() => {\n                $scope['showApp'] = true\n              })\n            }, 250)\n          })\n        }\n\n      }]);\n\n      this.init('heatApp', [\n        'ngNewRouter',\n        'ngAnimate',\n        'ngMaterial',\n        'ngMessages',\n        'noCAPTCHA',\n        'ngSanitize',\n        'duScroll',\n        'dc.inputAddOn',\n        'jsonFormatter',\n        'luegg.directives',\n        'angular-popover',\n        'ui.scroll', 'ui.scroll.grid'\n      ]);\n    }\n\n    init(appName: string, externalModules: string[]) {\n      var app = Loader.app = angular.module(appName, externalModules);\n\n      angular.forEach(Loader.config_fn, (v) => { app.config(v) });\n      angular.forEach(Loader.factory_fn, (v) => { app.factory(v.name, v.factory) });\n      angular.forEach(Loader.directive_fn, (v) => { app.directive(v.name, v.factory) });\n      angular.forEach(Loader.controller_fn, (v) => { app.controller(v.name, v.factory) });\n      angular.forEach(Loader.run_fn, (v) => { app.run(v) });\n\n      Loader.config_fn = null;\n      Loader.run_fn = null;\n      Loader.controller_fn = null;\n      Loader.factory_fn = null;\n\n      angular.bootstrap(document, [appName]);\n    }\n\n    static config(array: any) { Loader.config_fn.push(array) }\n    static run(array: any) { Loader.run_fn.push(array) }\n    static controller(name:string, factory: any) {\n      if (Loader.controller_fn)\n        Loader.controller_fn.push({name:name, factory:factory})\n      else\n        Loader.app.controller(name, factory);\n    }\n    static factory(name:string, factory: any) {\n      if (Loader.factory_fn)\n        Loader.factory_fn.push({name:name, factory:factory})\n      else\n        Loader.app.factory(name, factory);\n    }\n    static directive(name:string, factory: any) {\n      if (Loader.directive_fn)\n        Loader.directive_fn.push({name:name, factory:factory})\n      else\n        Loader.app.directive(name, factory);\n    }\n  }\n}\n","/// <reference path='loader.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nheat.Loader.config(['$mdThemingProvider', 'noCAPTCHAProvider', /*'$locationProvider',*/\n                      ($mdThemingProvider, noCAPTCHAProvider /*, $locationProvider*/) => {\n\n  $mdThemingProvider.theme('default')\n\n  noCAPTCHAProvider.setSiteKey(\"6Le7pBITAAAAANPHWrIsoP_ZvlxWr0bSjOPrlszc\");\n  noCAPTCHAProvider.setTheme('light');\n\n  // $locationProvider.hashPrefix('');\n\n}]);\n\n/*\n\nConfigure ngSantize, look into allowing html content in messages\n\nheat.Loader.config(['$compileProvider', ($compileProvider) => {\n  $compileProvider.aHrefSanitizationWhitelist(null);\n  $compileProvider.imgSrcSanitizationWhitelist(null);\n}]);\n*/","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nfunction Inject(...args: string[]) {\n  return (target: any, key?: string, index?: number): void => {\n    if (angular.isNumber(index)) {\n      target.$inject = target.$inject || [];\n      target.$inject[index] = args[0];\n    } else {\n      target.$inject = args;\n    }\n  };\n}\n\nfunction Component(options) {\n  return (target: any): void => {\n    var d = {\n      controller: target,\n      controllerAs: 'vm',\n      scope: {}\n    };\n    target.$$selector = options.selector;\n\n    if (angular.isArray(options.styles)) {\n      angular.forEach(options.styles, (s) => {\n        angular.element(document).find('head').append(`<style type=\"text/css\">${s}</style>`);\n      });\n    }\n    if (angular.isString(options.style)) {\n      angular.element(document).find('head').append(`<style type=\"text/css\">${options.style}</style>`);\n    }\n    if (angular.isString(options.template)) {\n      d['template'] = options.template;\n    }\n    /* Prepend an input with @ to make it an attribute binding */\n    if (angular.isArray(options.inputs)) {\n      d['bindToController'] = {};\n      options.inputs.forEach((input) => {\n        var bind = input.charAt(0) == '@' ? '@' : '=';\n        if (bind == '@') {\n          input = input.substring(1);\n        }\n        d['bindToController'][input] = bind;\n      });\n      target.$$inputs = options.inputs;\n    }\n    if (angular.isArray(options.outputs)) {\n      d['bindToController'] = d['bindToController'] || {};\n      options.outputs.forEach((output) => d['bindToController'][output] = '&');\n    }\n    if (angular.isFunction (options.link)) {\n      d['link'] = options.link;\n    }\n    if (angular.isDefined(options.transclude)) {\n      d['transclude'] = !!options.transclude;\n    }\n    if (angular.isDefined(options.replace)) {\n      d['replace'] = !!options.replace;\n    }\n    heat.Loader.directive(options.selector, () => (d));\n  };\n}\n\nfunction Service(name) {\n  return (target: any): void => {\n    var arr = target.$inject ? [].concat(target.$inject) : [];\n    function F(args): void {\n      return target.apply(this, args);\n    }\n    F.prototype = target.prototype;\n    arr.push(function() {\n      return new F(arguments);\n    });\n    heat.Loader.factory(name, arr);\n  }\n}\n\n/* @RouteConfig */\n\n/* Copied from router.es5.js */\nfunction dashCase(str) {\n  return str.replace(/([A-Z])/g, ($1) => '-' + $1.toLowerCase());\n}\n\n/* Takes a dash-case or lower case component selector name and returns a matching\n   controller for use in $router.\n   foo-bar -> FooBarController\n   foo -> FooController */\nfunction controllerNameFromPath(str) {\n  return str.split('/')[1].split('-').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join('') + 'Controller';\n}\n\n/* Generates a controller template hosting just a single component, the component inputs\n   are mapped against the expected controller routeParams (which are in $$inputs) by\n   referencing those routeParams on the component element attributes\n   Returns something like <selector name=\"fooBar.$$routeParams.name\"></selector> */\nfunction createControllerTemplate(selector: string, inputs: any) {\n  var dashName = dashCase(selector);\n  var t = [];\n  /* Must provide ng-if=\"1\" here so our child component can access its route params from the constructor */\n  t.push('<',dashName, ' ng-if=\"1\" flex layout=\"column\" layout-fill');\n  angular.forEach(inputs, (name) => {\n    t.push(' ',name,'=\"',selector,'.$$routeParams.',name,'\"')\n  });\n  t.push('></',dashName,'>');\n  return t.join('');\n}\n\n/* Anonymous route controller component, looks at the component inputs to\n   deteremine what routeParams must be made available on the $$routeParams\n   scope variable.\n   The data in the $$routeParams variable is later made available to the\n   component so it can access them as normal inputs. */\nfunction createController(inputs: any) {\n  Controller.$inject = ['$routeParams'];\n  function Controller($routeParams) {\n    this.$$routeParams = {};\n    if (angular.isArray(inputs)) {\n      for (var i=0; i<inputs.length; i++) {\n        this.$$routeParams[inputs[i]] = $routeParams[inputs[i]];\n      }\n    }\n  }\n  return Controller;\n}\n\n/**\n * To use @RouteConfig create a component and add a @RouteConfig annotation,\n * the RouteConfig will dynamically create a miniature wrapper controller\n * and template and registers that with the templatecache.\n *\n * The @path argument is the route DSL path. The individual parameters are\n * made available on the component controller itself.\n *\n * The @path can be either a string or an array of strings. NOTE that if you\n * use an array only the first entry is used to determine the controller name\n * so make sure all entries in the array have the same value for /name/***\n */\nfunction RouteConfig(...paths: string[]) {\n  return (target: any): void => {\n    heat.Loader.controller(controllerNameFromPath(paths[0]), createController(target.$$inputs));\n\n    heat.Loader.run(['$templateCache','$router', function ($templateCache, $router) {\n\n      var dashName = dashCase(target.$$selector);\n      $templateCache.put('./components/' + dashName + '/' + dashName + '.html',\n                          createControllerTemplate(target.$$selector, target.$$inputs));\n\n      angular.forEach(paths, (p) => $router.config({ path: p, component: target.$$selector }));\n    }]);\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nabstract class AbstractBatchViewerComponent {\n\n  public batches : Array<Batch> = [];\n  public batchSize: number = 10;\n\n  constructor(public $scope: angular.IScope,\n              public $q: angular.IQService,\n              public $timeout: angular.ITimeoutService) {}\n\n  abstract getCount() : angular.IPromise<number>;\n\n  abstract getItems(firstIndex: number, lastIndex: number) : angular.IPromise<Array<any>>;\n\n  abstract getScrollContainer() : duScroll.IDocumentService;\n\n  public clear() {\n    this.batches = [];\n  }\n\n  public getFirst() : Batch {\n    return this.batches[0];\n  }\n\n  public getLast() : Batch {\n    return this.batches[this.batches.length -1]\n  }\n\n  /* Get the firstIndex from the lastly added batch */\n  public getFirstIndex() : number {\n    return this.getLast().firstIndex\n  }\n\n  protected getParentScope() {\n    return this.$scope.$parent['vm'];\n  }\n\n  public getBatch(index: number) : angular.IPromise<Batch> {\n    let deferred = this.$q.defer<Batch>();\n    if (angular.isDefined(this.batches[index])) {\n      deferred.resolve(this.batches[index]);\n    }\n    else {\n      this.getBatchInternal(index).then(deferred.resolve, deferred.reject);\n    }\n    return deferred.promise;\n  }\n\n  private getBatchInternal(index: number): angular.IPromise<Batch> {\n    let deferred = this.$q.defer<Batch>();\n    // get any batch but the first one\n    if (angular.isDefined(this.batches[index-1])) {\n      var previousFirstIndex = this.batches[index-1].firstIndex;\n      var firstIndex = Math.max(0, previousFirstIndex-this.batchSize);\n      var lastIndex = previousFirstIndex-1;\n      this.getItems(firstIndex, lastIndex).then(\n        (items) => {\n          this.batches[index] = new Batch(this, items, firstIndex, lastIndex)\n          deferred.resolve(this.batches[index]);\n        },\n        deferred.reject\n      );\n    }\n    // get the first batch\n    else {\n      this.getCount().then(\n        (count) => {\n          var batchIndex = Math.floor(count / this.batchSize);\n          var firstIndex = batchIndex * this.batchSize;\n          var lastIndex = count;\n          firstIndex = Math.max(0, firstIndex - this.batchSize);\n          this.getItems(firstIndex, lastIndex).then(\n            (items) => {\n              this.batches[index] = new Batch(this, items, firstIndex, lastIndex);\n              deferred.resolve(this.batches[index]);\n            },\n            deferred.reject\n          );\n        },\n        deferred.reject\n      );\n    }\n    return deferred.promise;\n  }\n\n  protected scrollUp() {\n    if (this.getFirstIndex() > 0) {\n      var batchIndex = this.batches.length -1;\n      var topBatch = this.batches[batchIndex];\n      var topEntryId = topBatch.getFirst().__id;\n      var topEntryElement = angular.element(document.getElementById(topEntryId));\n\n      // 1. set ui to display as loading, this reveals the progress indicator and hides the\n      //    load more button (automatically bringing the top entry to the top)\n      this.$scope.$evalAsync(() => { this.getParentScope().loading = true });\n\n      // 2. load the next batch\n      this.getBatch(batchIndex +1).then(() => {\n        this.$scope.$evalAsync(() => {\n          // flush ui updates by leaving the event loop\n          this.$timeout(0).then(() => {\n            // the new entries have been added to the ui which auto-scrolls the container\n            // to the top. we however want to instantly have the previously 'at the top'\n            // element back at the top.\n            this.getScrollContainer().duScrollToElement(topEntryElement, 0, 0, null).then(() => {\n              this.$scope.$evalAsync(() => {\n                this.getParentScope().loading = false\n                this.$timeout(0).then(() => {\n                  var offset = this.getScrollContainer()[0].clientHeight -\n                              topEntryElement[0].offsetHeight;\n                  this.getScrollContainer().duScrollToElement(topEntryElement, offset, 1200, heat.easing.easeOutCubic);\n                })\n              });\n            });\n          });\n        });\n      });\n    }\n  }\n}\n\nclass Batch {\n  static COUNTER = 0;\n\n  constructor(private viewer: AbstractBatchViewerComponent,\n              public entries: Array<any>,\n              public firstIndex: number,\n              public lastIndex: number) {\n    entries.forEach((e) => { e[\"__id\"] = e[\"__id\"] || `batch-entry-${Batch.COUNTER++}` });\n  }\n\n  public loadMore() : angular.IPromise<any> {\n    var batch = this; // Some weirdness going on here which is causing the window var to be\n                      // assigned to typescript this inside the first getCount.\n                      // This will do for now.\n    var deferred = this.viewer.$q.defer();\n    this.viewer.getCount().then(\n      (count) => {\n        if (count > batch.lastIndex) {\n          batch.viewer.getItems(batch.lastIndex, count).then(\n            (items) => {\n              items.forEach((item) => {\n                item[\"__id\"] = `batch-entry-${Batch.COUNTER++}`;\n                batch.entries.push(item);\n                batch.lastIndex++;\n              });\n              deferred.resolve(items);\n            },\n            deferred.reject\n          )\n        }\n      },\n      deferred.reject\n    );\n    return deferred.promise;\n  }\n\n  public getFirst() : any {\n    return this.entries[0];\n  }\n\n  public getLast() : any {\n    return this.entries[this.entries.length-1];\n  }\n}","@Service('ardorTransactionsProviderFactory')\n@Inject('http','$q', 'ardorBlockExplorerService')\nclass ArdorTransactionsProviderFactory  {\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {}\n\n  public createProvider(account: string): IPaginatedDataProvider {\n    return new ArdorTransactionsProvider(this.http, this.$q, this.ardorBlockExplorerService, account);\n  }\n}\n\nclass ArdorTransactionsProvider implements IPaginatedDataProvider {\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private ardorBlockExplorerService: ArdorBlockExplorerService,\n              private account: string) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>()\n    this.ardorBlockExplorerService.getTransactionsCount(this.account).then(result => {\n      deferred.resolve(result)\n    }, () => {\n      deferred.reject()\n    })\n\n    return <angular.IPromise<number>>deferred.promise;\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\n    return this.ardorBlockExplorerService.getTransactions(this.account, firstIndex, lastIndex)\n  }\n\n}\n","@Service('btcTransactionsProviderFactory')\n@Inject('http','$q', 'btcBlockExplorerService')\nclass BtcTransactionsProviderFactory  {\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private btcBlockExplorerService: BtcBlockExplorerService) {}\n\n  public createProvider(account: string): IPaginatedDataProvider {\n    return new BtcTransactionsProvider(this.http, this.$q, this.btcBlockExplorerService, account);\n  }\n}\n\nclass BtcTransactionsProvider implements IPaginatedDataProvider {\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private btcBlockExplorerService: BtcBlockExplorerService,\n              private account: string) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>()\n    this.btcBlockExplorerService.getAddressInfo(this.account).then(result => {\n      deferred.resolve(result.transactions.length)\n    }, () => {\n      deferred.reject()\n    })\n\n    return <angular.IPromise<number>>deferred.promise;\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\n    return this.btcBlockExplorerService.getTransactions(this.account, firstIndex, lastIndex)\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('ethTransactionsProviderFactory')\n@Inject('http','$q','ethplorer','ethTransactionParser')\nclass EthTransactionsProviderFactory  {\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private ethplorer: EthplorerService,\n              private ethTransactionParser: EthTransactionParserService) {}\n\n  public createProvider(account: string): IPaginatedDataProvider {\n    return new EthTransactionsProvider(this.http, this.$q, this.ethplorer, this.ethTransactionParser, account);\n  }\n}\n\nclass EthTransactionsProvider implements IPaginatedDataProvider {\n\n  private paginator: EthplorerTransactionPaginator\n  private lastIndex: number = 0\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private ethplorer: EthplorerService,\n              private ethTransactionParser: EthTransactionParserService,\n              private account: string) {\n    this.paginator = ethplorer.createPaginator(account)\n  }\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>()\n    this.paginator.getCount().then(count => {\n      deferred.resolve(Math.min(this.lastIndex + 40, count))\n    }, deferred.reject)\n    return deferred.promise\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<EthplorerAddressTransactionExtended>> {\n    let deferred = this.$q.defer<Array<EthplorerAddressTransaction>>()\n    if (lastIndex > this.lastIndex) {\n      this.lastIndex = lastIndex\n    }\n    this.paginator.getItems(firstIndex, lastIndex).then(\n      transactions => {\n        deferred.resolve(this.ethTransactionParser.parse(transactions))\n      },\n      deferred.reject\n    )\n    return deferred.promise\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('explorerTradesProviderFactory')\n@Inject('heat','$q')\nclass ExplorerTradesProviderFactory  {\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\n\n  public createProvider(account: string): IPaginatedDataProvider {\n    return new TraProvider(this.heat, this.$q, account);\n  }\n}\n\nclass TraProvider implements IPaginatedDataProvider {\n  constructor(private heat: HeatService,\n              private $q: angular.IQService,\n              private account: string) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    return this.heat.api.getAllAccountTradesCount(this.account);\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTrade>> {\n    return this.heat.api.getAllAccountTrades(this.account, \"0\", 0, firstIndex, lastIndex);\n  }\n}\n","@Service('fimkTransactionsProviderFactory')\n@Inject('http','$q', 'mofoSocketService')\nclass FimkTransactionsProviderFactory  {\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private mofoSocketService: MofoSocketService) {}\n\n  public createProvider(account: string): IPaginatedDataProvider {\n    return new FimkTransactionsProvider(this.http, this.$q, this.mofoSocketService, account);\n  }\n}\n\nclass FimkTransactionsProvider implements IPaginatedDataProvider {\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private mofoSocketService: MofoSocketService,\n              private account: string) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>()\n    this.mofoSocketService.getTransactionsCount(this.account).then(result => {\n      deferred.resolve(result)\n    }, () => {\n      deferred.reject()\n    })\n\n    return <angular.IPromise<number>>deferred.promise;\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\n    let pageNum = 0;\n    pageNum = (lastIndex / 15) - 1;\n    return this.mofoSocketService.getTransactions(this.account, pageNum)\n  }\n\n}\n","@Service('iotaTransactionsProviderFactory')\n@Inject('http','$q', 'iotaBlockExplorerService')\nclass IotaTransactionsProviderFactory  {\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private iotaBlockExplorerService: IotaBlockExplorerService) {}\n\n  public createProvider(seed: string): IPaginatedDataProvider {\n    return new iotaTransactionsProvider(this.http, this.$q, this.iotaBlockExplorerService, seed);\n  }\n}\n\nclass iotaTransactionsProvider implements IPaginatedDataProvider {\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private iotaBlockExplorerService: IotaBlockExplorerService,\n              private seed: string) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>()\n    this.iotaBlockExplorerService.getAccountInfo(this.seed).then(result => {\n      deferred.resolve(result.transfers.length)\n    }, () => {\n      deferred.reject()\n    })\n\n    return <angular.IPromise<number>>deferred.promise;\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): any {\n    return new Promise((resolve, reject) => {\n      this.iotaBlockExplorerService.getAccountInfo(this.seed).then(result => resolve(result.transfers))\n    })\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('latestBlocksProviderFactory')\n@Inject('heat','$q')\nclass LatestBlocksProviderFactory  {\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\n\n  /* Optionally pass a single block object which will be displayed as its single result */\n  public createProvider(blockObject?: IHeatBlock, account?:string): IPaginatedDataProvider {\n    return new LatestBlocksProvider(this.heat, this.$q, blockObject, account);\n  }\n}\n\nclass LatestBlocksProvider implements IPaginatedDataProvider {\n  constructor(private heat: HeatService,\n              private $q: angular.IQService,\n              private blockObject: IHeatBlock,\n              private account: string) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    if (angular.isDefined(this.blockObject)) {\n      deferred.resolve(1);\n    }\n    else {\n      if (this.account) {\n        this.heat.api.getAccountBlocksCount(this.account).then(count=>{\n          deferred.resolve(count);\n        },deferred.reject)\n      }\n      else {\n        this.heat.api.getBlockchainStatus().then((status) => {\n          deferred.resolve(status.numberOfBlocks);\n        },deferred.reject);\n      }\n    }\n    return <angular.IPromise<number>>deferred.promise;\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatBlock>> {\n    if (angular.isDefined(this.blockObject)) {\n      let deferred = this.$q.defer<Array<IHeatBlock>>();\n      deferred.resolve([this.blockObject]);\n      return <angular.IPromise<Array<IHeatBlock>>> deferred.promise;\n    }\n    else {\n      if (this.account) {\n        return <angular.IPromise<Array<IHeatBlock>>> this.heat.api.getAccountBlocks(this.account, firstIndex, lastIndex);\n      }\n      else {\n        return <angular.IPromise<Array<IHeatBlock>>> this.heat.api.getBlocks(firstIndex, lastIndex);\n      }\n    }\n  }\n}\n","@Service('nxtTransactionsProviderFactory')\n@Inject('http','$q', 'nxtBlockExplorerService')\nclass NxtTransactionsProviderFactory  {\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private nxtBlockExplorerService: NxtBlockExplorerService) {}\n\n  public createProvider(account: string): IPaginatedDataProvider {\n    return new NxtTransactionsProvider(this.http, this.$q, this.nxtBlockExplorerService, account);\n  }\n}\n\nclass NxtTransactionsProvider implements IPaginatedDataProvider {\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private nxtBlockExplorerService: NxtBlockExplorerService,\n              private account: string) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>()\n    this.nxtBlockExplorerService.getTransactionsCount(this.account).then(result => {\n      deferred.resolve(result)\n    }, () => {\n      deferred.reject()\n    })\n\n    return <angular.IPromise<number>>deferred.promise;\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\n    return this.nxtBlockExplorerService.getTransactions(this.account, firstIndex, lastIndex)\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('transactionsProviderFactory')\n@Inject('heat','$q')\nclass TransactionsProviderFactory  {\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\n\n  public createProvider(account: string, block: string, transactionObject: IHeatTransaction): IPaginatedDataProvider {\n    return new TransactionsProvider(this.heat, this.$q, account, block, transactionObject);\n  }\n}\n\nclass TransactionsProvider implements IPaginatedDataProvider {\n  constructor(private heat: HeatService,\n              private $q: angular.IQService,\n              private account: string,\n              private block: string,\n              private transactionObject: IHeatTransaction) {}\n\n  /* Be notified this provider got destroyed */\n  public destroy() {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    if (angular.isString(this.account)) {\n      return this.heat.api.getTransactionsForAccountCount(this.account);\n    }\n    else if (angular.isString(this.block)) {\n      return this.heat.api.getTransactionsForBlockCount(this.block);\n    }\n    else if (angular.isDefined(this.transactionObject)) {\n      let deferred = this.$q.defer<number>();\n      deferred.resolve(1);\n      return deferred.promise;\n    }\n    return this.heat.api.getTransactionsForAllCount();\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTransaction>> {\n    if (angular.isString(this.account)) {\n      return this.heat.api.getTransactionsForAccount(this.account, firstIndex, lastIndex);\n    } else if (angular.isString(this.block)) {\n      return this.heat.api.getTransactionsForBlock(this.block, firstIndex, lastIndex);\n    }\n    else if (angular.isDefined(this.transactionObject)) {\n      let deferred = this.$q.defer<Array<IHeatTransaction>>();\n      deferred.resolve([this.transactionObject]);\n      return deferred.promise;\n    }\n    return this.heat.api.getTransactionsForAll(firstIndex, lastIndex);\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n/* Add this to each md-virtual-repeat-container to have it populated with data\n   when no fixed height was given */\nheat.Loader.directive(\"virtualRepeatFlexHelper\", () => {\n  return {\n    restrict: 'A',\n    require: '^mdVirtualRepeatContainer',\n    link: function(scope, element, attributes, mdVirtualRepeatContainer) {\n      var delay = 100;\n      var maxDuration = 10 * 1000; // 10 seconds\n      var maxTries = maxDuration / delay;\n      var tries = 0;\n      var destroyed = false;\n      scope.$on('$destroy', () => { destroyed = true });\n      utils.repeatWhile(100, () => {\n        if (destroyed || (tries++) > maxTries)\n          return false;\n        if (mdVirtualRepeatContainer.size > 0)\n          return true;\n        mdVirtualRepeatContainer.updateSize();\n        return false;\n      });\n    }\n  }\n});\n\nabstract class VirtualRepeatComponent {\n\n  protected provider: IPaginatedDataProvider;\n  protected decorator: (item:any,context:any)=>void;\n  protected preprocessor: (firstIndex:number, lastIndex:number, items: Array<any>)=>void;\n  protected PAGE_SIZE = 20; // number of items per page\n  protected loadedPages = {};\n  protected numItems = -1;\n  public topIndex = 0;\n  public selected = null;\n  public loading: boolean = true;\n\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService) {}\n\n  /* Extending classes call this from their constructor */\n  protected initializeVirtualRepeat(provider: IPaginatedDataProvider,\n                decorator?: (item:any,context:any)=>void,\n                preprocessor?: (firstIndex:number, lastIndex:number, items: Array<any>)=>void): angular.IPromise<number> {\n    this.provider = provider;\n    this.decorator = decorator;\n    this.preprocessor = preprocessor;\n    return this.determineLength();\n  }\n\n  /* md-virtual-repeat */\n  public getItemAtIndex(index: number) {\n    var pageNumber = Math.floor(index / this.PAGE_SIZE);\n    var page = this.loadedPages[pageNumber];\n    if (page) {\n        var item = page[index % this.PAGE_SIZE];\n        if (!this.selected) {\n          this.selected = item;\n        }\n        return item;\n    }\n    else if (page !== null) {\n        this.fetchPage(pageNumber);\n    }\n  }\n\n  /* md-virtual-repeat */\n  public getLength(): number {\n    return this.numItems;\n  }\n\n  protected determineLength(retain?: boolean): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    if (this.provider) {\n      this.loadedPages = {};\n      this.provider.getPaginatedLength().then((length) => {\n        this.numItems = length;\n        if (length == 0) {\n          this.$scope.$evalAsync(() => { this.loading = false })\n        }\n        deferred.resolve(length);\n      }, deferred.reject);\n    } else {\n      deferred.reject();\n    }\n    return deferred.promise;\n  }\n\n  protected fetchPage(pageNumber:number) {\n    this.loadedPages[pageNumber] = null;\n    var firstIndex = pageNumber * this.PAGE_SIZE;\n    var lastIndex = firstIndex + this.PAGE_SIZE;\n    this.provider.getPaginatedResults(firstIndex, lastIndex).then((items) => {\n      this.$scope.$evalAsync(() => { this.loading = false });\n      if (this.preprocessor) {\n        if (angular.isArray(items)) {\n          this.preprocessor(firstIndex,lastIndex,items);\n        }\n      }\n      if (this.decorator) {\n        if (angular.isArray(items)) {\n          items.forEach((item) => { this.decorator(item, this.loadedPages) });\n        }\n      }\n      this.loadedPages[pageNumber] = items;\n    });\n  }\n\n  public select(item) {\n    this.selected = item;\n    this.onSelect(item);\n  }\n\n  public abstract onSelect(item);\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'applicationSystemTime',\n  template: `\n  <span>{{vm.time}}</span>\n  `\n})\n@Inject('settings','$scope','$interval')\nclass ApplicationSystemTimeComponent {\n  time: string = '           ';\n\n  constructor(private settings: SettingsService,\n              private $scope: angular.IScope,\n              $interval: angular.IIntervalService) {\n\n    var interval = $interval(() => this.update(), 1000, 0, false);\n    $scope.$on('$destroy', () => { $interval.cancel(interval) });\n    this.update();\n  }\n\n  update() {\n    this.$scope.$evalAsync(() => {\n      this.time = dateFormat(new Date(), this.settings.get(SettingsService.DATEFORMAT_DEFAULT))\n    });\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'copyText',\n  inputs: ['@elementId','@message'],\n  styles: [`\n    copy-text .clickable-icon {\n      cursor: pointer;\n    }\n  `],\n  template: `\n    <md-icon md-font-library=\"material-icons\" ng-click=\"vm.copy(vm.elementId, vm.message)\" class=\"clickable-icon\">content_copy</md-icon>\n  `\n})\n@Inject('clipboard')\nclass CopyText {\n\n  private elementId: string;\n  private message: string;\n\n  constructor(private clipboard: ClipboardService) {}\n\n  copy(element: string, successMsg: string) {\n    this.clipboard.copyWithUI(document.getElementById(element), successMsg);\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'downloadingBlockchain',\n  template: `\n    <div layout=\"column\" flex layout-fill ng-show=\"vm.showComponent\">\n      <md-progress-linear md-mode=\"indeterminate\"></md-progress-linear>\n      <center><div><b>Attention!!</b></div>\n      <div>Downloading blockchain last block height: {{vm.lastBlockHeight}}, time {{vm.lastBlockTime}}</div></center>\n    </div>\n  `\n})\n@Inject('$rootScope', '$scope','heat','$interval','settings', '$router')\nclass DownloadingBlockchainComponent {\n  showComponent = false;\n  lastBlockHeight = 0;\n  lastBlockTime = 0;\n  heatServerLocation;\n  constructor(private $rootScope: angular.IScope,\n              private $scope: angular.IScope,\n              private heat: HeatService,\n              private $interval: angular.IIntervalService,\n              private settings: SettingsService,\n              private router) {\n    this.refresh();\n\n    let interval = $interval(()=>{ this.refresh() }, 60*1000, 0, false);\n    let checkServerHealthInterval = $interval(()=>{ this.checkServerHealth(this.settings) }, 33*1000, 0, false);\n\n    $scope.$on('$destroy',()=>{\n      $interval.cancel(interval);\n      $interval.cancel(checkServerHealthInterval);\n    });\n\n    //Check servers health to choose the right\n    //wait for loading  failover-config.json\n    setTimeout(() => {\n      if (SettingsService.getFailoverDescriptor())\n        this.checkServerHealth(this.settings, true);\n      else\n        setTimeout(() => {\n          this.checkServerHealth(this.settings, true);\n        }, 500)\n    }, 200);\n  }\n\n  refresh() {\n    this.heat.api.getBlockchainStatus().then(status=>{\n      this.$scope.$evalAsync(()=>{\n        let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n        let date = utils.timestampToDate(status.lastBlockTimestamp);\n        this.lastBlockTime = dateFormat(date, format);\n        this.lastBlockHeight = status.numberOfBlocks;\n        if ((Date.now() - date.getTime()) > 1000 * 60 * 60) {\n          this.showComponent = true;\n        }\n        else {\n          this.showComponent = false;\n        }\n      })\n    }, ()=>{\n      this.$scope.$evalAsync(()=>{\n        this.showComponent = false;\n      })\n    })\n  }\n\n  /**\n   * Failover procedure.\n   * Compares health of known servers with current server.\n   * If other health is significantly over current server health then switches to other server.\n   */\n  checkServerHealth(settings: SettingsService, firstTime?: boolean) {\n    let knownServers: ServerDescriptor[] = SettingsService.getFailoverDescriptor().knownServers || [];\n\n    let currentServerHealth: IHeatServerHealth;\n    let promises = [];\n    knownServers.forEach(server => {\n      promises.push(\n        this.heat.api.getServerHealth(server.host, server.port).then(health=> {\n          server.health = health;\n          server.statusError = null;\n        }).catch(function (err) {\n          server.health = null;\n          server.statusError = err;\n          return err;\n        })\n      )\n    });\n\n    let minEqualityServersNumber = heat.isTestnet ? 3 : 10;\n\n    Promise.all(promises).then(() => {\n      let currentServerIsAlive = false;\n      let currentServer = null;\n\n      //find the health of the current server\n      knownServers.forEach(server => {\n        let health: IHeatServerHealth = server.health;\n        server.statusScore = null;\n        if (health)\n          server.statusScore = 0; // has health means has min score\n        if (server.host == settings.get(SettingsService.HEAT_HOST) && server.port == settings.get(SettingsService.HEAT_PORT)) {\n          currentServerHealth = health;\n          currentServer = server;\n          if (!this.heatServerLocation)\n            this.notifyOnServerLocationUpdating(currentServer);\n          //if the server response is nothing then server is down\n          currentServerIsAlive = !server.statusError;\n          server.statusScore = currentServerIsAlive ? 0 : null;\n        }\n      });\n\n      if (!currentServer)\n        return;\n\n      if (currentServerIsAlive && ! currentServerHealth)\n        return;  //has no health (old version or monitoring API is disabled) so nothing to compare\n\n      //compare health of other servers with health of the current server\n      knownServers.forEach(server => {\n        let health: IHeatServerHealth = server.health;\n        if (!health || !currentServerHealth || !(health.balancesEquality[1] >= minEqualityServersNumber))\n          return;\n\n        let blocksEstimation = this.calculateBlockchainEstimation(currentServerHealth, health);\n        let balancesEqualityEstimation = this.calculateBalancesEqualityEstimation(currentServerHealth, health);\n        let peerEstimation = this.calculatePeerEstimation(currentServerHealth, health);\n\n        server.statusScore = (blocksEstimation == 1 && balancesEqualityEstimation >= 0 && peerEstimation >= 0)\n          ? blocksEstimation + balancesEqualityEstimation + peerEstimation\n          : 0;\n      });\n\n      let best: ServerDescriptor = currentServer;\n      let causeToSelectBest;\n      knownServers.forEach(server => {\n        if (best == currentServer && !currentServerIsAlive) {\n          best = server; //if current server is not alive switch to other server in any case\n          let se = currentServer.statusError;\n          causeToSelectBest = \"Сurrent server is not alive\"\n            + (se.code ? \". Code: \" + se.code : \"\") + (se.description ? \". Description: \" + se.description : \"\");\n        }\n        if (server.statusScore >= 0 || !currentServerIsAlive) {\n          if ((server.statusScore != null && best.statusScore == null) || server.statusScore > best.statusScore) {\n            best = server;\n            causeToSelectBest = \"Status score is better\";\n          }\n          if (server.statusScore == best.statusScore && server.priority < best.priority && best != currentServer) {\n            best = server;\n            causeToSelectBest = \"Server priority\";\n          }\n        }\n      });\n      if (best && best != currentServer) {\n        let bestIsAlive = !best.statusError;\n        if (bestIsAlive) {\n          settings.setCurrentServer(best);\n          this.notifyOnServerLocationUpdating(best);\n          this.heat.resetSubscriber();\n          if (firstTime) {\n            //on initializing (first time) switched silently and starts from login page\n            this.router.navigate('/login');\n          } else {\n            let message = currentServer\n              ? \"Client API address switched from \\n\" + currentServer.host + \":\" + currentServer.port\n                + \"\\nto\\n\" + best.host + \":\" + best.port\n              : \"Client API address switched to\\n\" + best.host + \":\" + best.port;\n            if (causeToSelectBest)\n              message = message + \" \\n\\n\" + \"Reason: \" + causeToSelectBest;\n            alert(message);\n          }\n        }\n      }\n    })\n  }\n\n  /**\n   * If returned value is greater 0 it means the blockchain from health is \"better\" than blockchain from currentServerHealth.\n   */\n  calculateBlockchainEstimation(currentServerHealth: IHeatServerHealth, health: IHeatServerHealth): number {\n    let cumulativeDifficulty = new BigInteger(health.cumulativeDifficulty);\n    let difficultyDelta = cumulativeDifficulty.compareTo(new BigInteger(currentServerHealth.cumulativeDifficulty));\n    let threshold = SettingsService.getFailoverDescriptor().heightDeltaThreshold;\n    if (Math.abs(health.lastBlockHeight - currentServerHealth.lastBlockHeight) > threshold) {\n      if (difficultyDelta > 0)\n        return 1;\n      if (difficultyDelta < 0)\n        return -1;\n    }\n    return 0;\n  }\n\n  calculateBalancesEqualityEstimation(currentServerHealth: IHeatServerHealth, health: IHeatServerHealth): number {\n    let mismatches = health.balancesEquality[0] / health.balancesEquality[1];\n    let currentServerMismatches = currentServerHealth.balancesEquality[0] / currentServerHealth.balancesEquality[1];\n    let mismatchesThreshold = SettingsService.getFailoverDescriptor().balancesMismatchesThreshold;\n    let equalityThreshold = SettingsService.getFailoverDescriptor().balancesEqualityThreshold;\n    return (mismatches < mismatchesThreshold * currentServerMismatches\n      && health.balancesEquality[2] > equalityThreshold * currentServerHealth.balancesEquality[2])\n      ? 1\n      : (mismatches > currentServerMismatches || health.balancesEquality[2] < 0.7 * currentServerHealth.balancesEquality[2])\n        ? -1\n        : 0;\n  }\n\n  calculatePeerEstimation(currentServerHealth: IHeatServerHealth, health: IHeatServerHealth): number {\n    let connected = health.peersIndicator.connected / health.peersIndicator.all;\n    let currentServerConnected = currentServerHealth.peersIndicator.connected / currentServerHealth.peersIndicator.all;\n    let threshold = SettingsService.getFailoverDescriptor().connectedPeersThreshold;\n    return (threshold * connected > currentServerConnected)\n      ? 1\n      : (connected < 0.8 * currentServerConnected)\n        ? -1\n        : 0;\n  }\n\n  private notifyOnServerLocationUpdating(sd: ServerDescriptor) {\n    this.heatServerLocation = sd.host + \":\" + sd.port;\n    this.$rootScope.$emit('HEAT_SERVER_LOCATION', this.heatServerLocation);\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'elipsesLoading',\n  styles: [`\n    .elipses-loading-one {\n        opacity: 0;\n        -webkit-animation: elipses-loading-dot 1.3s infinite;\n        -webkit-animation-delay: 0.0s;\n        animation: elipses-loading-dot 1.3s infinite;\n        animation-delay: 0.0s;\n    }\n\n    .elipses-loading-two {\n        opacity: 0;\n        -webkit-animation: elipses-loading-dot 1.3s infinite;\n        -webkit-animation-delay: 0.2s;\n          animation: elipses-loading-dot 1.3s infinite;\n          animation-delay: 0.2s;\n    }\n\n    .elipses-loading-three {\n        opacity: 0;\n        -webkit-animation: elipses-loading-dot 1.3s infinite;\n        -webkit-animation-delay: 0.3s;\n        animation: elipses-loading-dot 1.3s infinite;\n        animation-delay: 0.3s;\n    }\n\n    @-webkit-keyframes elipses-loading-dot {\n          0% { opacity: 0; }\n        50% { opacity: 0; }\n        100% { opacity: 1; }\n    }\n\n    @keyframes elipses-loading-dot {\n          0% { opacity: 0; }\n        50% { opacity: 0; }\n        100% { opacity: 1; }\n    }\n  `],\n  template: `\n  <span class=\"elipses-loading-one\">.</span><span class=\"elipses-loading-two\">.</span><span class=\"elipses-loading-three\">.</span>\n  `\n})\nclass ElipsesLoadingComponent {}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare var dateFormat: any;\n@Component({\n  selector: 'timestamp',\n  inputs: ['timestampValue'],\n  template: `\n    <span>{{ vm.timestampFormatted }}</span>\n  `\n})\n@Inject('settings','$scope')\nclass Timestamp {\n\n  /* @inputs */\n  timestampValue: string;\n\n  private timestampFormatted: string;\n\n  constructor(private settings: SettingsService,$scope) {\n    $scope.$watch(() => this.timestampValue, () => { this.update() });\n    this.update();\n  }\n\n  update() {\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    var date = utils.timestampToDate(parseInt(this.timestampValue));\n    this.timestampFormatted = this.timestampValue != \"0\" ? dateFormat(date, format) : \"GENESIS\";\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass TransactionVerificationError {\n  constructor(public name: string, public expected: any, public actual: any){}\n}\n\nclass Appendix {\n  protected version: number;\n  constructor(bytes: IByteArrayWithPosition) {\n    this.version = bytes.byteArray[bytes.pos];\n    bytes.pos++;\n  }\n}\nclass AppendixMessage extends Appendix {\n  public message: string;\n  public isText: boolean;\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes);\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\n    bytes.pos += 4;\n    this.isText = length < 0;\n    if (length < 0) {\n      length &= 2147483647;\n    }\n    if (this.isText) {\n      this.message = converters.byteArrayToString(bytes.byteArray, bytes.pos, length);\n    }\n    else {\n      var slice = bytes.byteArray.slice(bytes.pos, bytes.pos + length);\n      this.message = converters.byteArrayToHexString(slice);\n    }\n    bytes.pos += length;\n  }\n}\nclass AbstractEncryptedMessage extends Appendix {\n  public encryptedMessageData: string;\n  public encryptedMessageNonce: string;\n  public isText: boolean;\n  constructor(bytes: IByteArrayWithPosition,data: IHeatCreateTransactionInput) {\n    super(bytes);\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\n    bytes.pos += 4;\n    this.isText = length < 0;\n    if (length < 0) {\n      length &= 2147483647;\n    }\n    this.encryptedMessageData = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + length));\n    bytes.pos += length;\n    this.encryptedMessageNonce = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 32));\n    bytes.pos += 32;\n  }\n}\nclass AppendixEncryptedMessage extends AbstractEncryptedMessage {\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes, null);\n  }\n}\nclass AppendixPublicKeyAnnouncement extends Appendix {\n  public publicKey: string;\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes);\n    this.publicKey = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 32));\n    bytes.pos += 32;\n  }\n}\nclass AppendixEncryptToSelfMessage extends AbstractEncryptedMessage {\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes, null);\n  }\n}\nclass AppendixPrivateNameAnnouncement extends Appendix {\n  public privateNameAnnouncement: string; // unsignedLong\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes);\n    this.privateNameAnnouncement = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n  }\n}\nclass AppendixPrivateNameAssignment extends Appendix {\n  public privateNameAssignment: string;\n  public signature: string;\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes);\n    this.privateNameAssignment = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    this.signature = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 64));\n    bytes.pos += 64;\n  }\n}\nclass AppendixPublicNameAnnouncement extends Appendix {\n  public publicNameAnnouncement: string;\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes);\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\n    bytes.pos += 4;\n    this.publicNameAnnouncement = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + length));\n    bytes.pos += length;\n  }\n}\nclass AppendixPublicNameAssignment extends Appendix {\n  public publicNameAssignment: string;\n  public signature: string;\n  constructor(bytes: IByteArrayWithPosition) {\n    super(bytes);\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\n    bytes.pos += 4;\n    this.publicNameAssignment = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + length));\n    bytes.pos += length;\n    this.signature = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 64));\n    bytes.pos += 64;\n  }\n}\n\nabstract class AbstractTransaction {\n\n  abstract verify(transaction: any, bytes: IByteArrayWithPosition, data?: any): boolean;\n\n  confirm(name: string, expected: any, actual: any) {\n    if (expected != actual) {\n      throw new TransactionVerificationError(name, expected, actual);\n    }\n  }\n\n  /**\n   * Verify and sign transaction bytes as returned from API createTransaction.\n   *\n   * @param transactionBytes String unsigned bytes as HEX string\n   * @param signature\n   * @param data Object user provided data, this was send to createTransaction\n   *\n   * @returns string or undefined in case of error\n   */\n  verifyAndSignTransactionBytes(transactionBytes: string, signature, data: IHeatCreateTransactionInput): string {\n    var transaction: any = {};\n    var byteArray = converters.hexStringToByteArray(transactionBytes);\n    transaction.type = byteArray[0]; // 1\n    transaction.version = (byteArray[1] & 0xF0) >> 4;\n    transaction.subtype = byteArray[1] & 0x0F;  // 1\n    transaction.timestamp = converters.byteArrayToSignedInt32(byteArray, 2); // 4\n\n    transaction.deadline = converters.byteArrayToSignedShort(byteArray, 6); // 2\n    this.confirm(\"deadline\", data.deadline, transaction.deadline);\n\n    transaction.senderPublicKey = converters.byteArrayToHexString(byteArray.slice(8, 40)); // 32\n    this.confirm(\"senderPublicKey\", data.publicKey, transaction.senderPublicKey);\n\n    transaction.recipient = String(converters.byteArrayToBigInteger(byteArray, 40)); // 8\n    if (data.recipient)\n      this.confirm(\"recipient\", data.recipient, transaction.recipient);\n    else {\n      if (data.recipientPublicKey)\n        this.confirm(\"recipientPublicKey\", heat.crypto.getAccountIdFromPublicKey(data.recipientPublicKey), transaction.recipient);\n      else\n        this.confirm(\"recipient\", \"8150091319858025343\", transaction.recipient);\n    }\n\n    transaction.amount = String(converters.byteArrayToBigInteger(byteArray, 48)); // 8\n    if (data.OrdinaryPayment)\n      this.confirm(\"amount\", data.OrdinaryPayment.amountHQT, transaction.amount);\n    else\n      this.confirm(\"amount\", \"0\", transaction.amount);\n\n    transaction.fee = String(converters.byteArrayToBigInteger(byteArray, 56)); // 8\n    this.confirm(\"fee\", data.fee, transaction.fee);\n\n    transaction.signature = converters.byteArrayToHexString(byteArray.slice(64, 128)); // 64\n    transaction.flags = converters.byteArrayToSignedInt32(byteArray, 128); // 4\n    transaction.ecBlockHeight = converters.byteArrayToSignedInt32(byteArray, 132); // 4\n    transaction.ecBlockId = String(converters.byteArrayToBigInteger(byteArray, 136)); // 8\n\n    var pos: number = 144;\n    pos++; // skip the attachmentVersion byte\n\n    var bytes: IByteArrayWithPosition = {\n      byteArray: byteArray,\n      pos: pos\n    };\n    if (!this.verify(transaction, bytes, data)) {\n      return;\n    }\n\n    var position = 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixMessage(bytes);\n      this.confirm(\"Message.message\", data.message, appendix.message);\n      this.confirm(\"Message.messageIsText\", data.messageIsText, appendix.isText);\n    }\n    position <<= 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixEncryptedMessage(bytes);\n      this.confirm(\"EncryptedMessage.encryptedMessageData\",data.encryptedMessageData, appendix.encryptedMessageData);\n      this.confirm(\"EncryptedMessage.encryptedMessageNonce\",data.encryptedMessageNonce, appendix.encryptedMessageNonce);\n      this.confirm(\"EncryptedMessage.messageToEncryptIsText\",data.messageToEncryptIsText, appendix.isText);\n    }\n    position <<= 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixPublicKeyAnnouncement(bytes);\n      this.confirm(\"PublicKeyAnnouncement.recipientPublicKey\",data.recipientPublicKey, appendix.publicKey);\n    }\n    position <<= 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixEncryptToSelfMessage(bytes);\n      this.confirm(\"EncryptToSelfMessage.encryptedMessageData\",data.encryptToSelfMessageData, appendix.encryptedMessageData);\n      this.confirm(\"EncryptToSelfMessage.encryptedMessageNonce\",data.encryptToSelfMessageNonce, appendix.encryptedMessageNonce);\n      this.confirm(\"EncryptToSelfMessage.messageToEncryptIsText\",data.messageToEncryptToSelfIsText, appendix.isText);\n    }\n    position <<= 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixPrivateNameAnnouncement(bytes);\n      this.confirm(\"PrivateNameAnnouncement.privateNameAnnouncement\",data.privateNameAnnouncement, appendix.privateNameAnnouncement);\n    }\n    position <<= 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixPrivateNameAssignment(bytes);\n      this.confirm(\"PrivateNameAssignment.privateNameAssignment\",data.privateNameAssignment, appendix.privateNameAssignment);\n      this.confirm(\"PrivateNameAssignment.privateNameAssignmentSignature\",data.privateNameAssignmentSignature, appendix.signature);\n    }\n    position <<= 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixPublicNameAnnouncement(bytes);\n      this.confirm(\"PublicNameAnnouncement.privateNameAssignment\",data.publicNameAnnouncement, appendix.publicNameAnnouncement);\n    }\n    position <<= 1;\n    if ((transaction.flags & position) != 0) {\n      let appendix = new AppendixPublicNameAssignment(bytes);\n      this.confirm(\"PublicNameAssignment.publicNameAssignment\",data.publicNameAssignment, appendix.publicNameAssignment);\n      this.confirm(\"PublicNameAssignment.publicNameAssignmentSignature\",data.publicNameAssignmentSignature, appendix.signature);\n    }\n\n    var tmp1 = converters.hexStringToByteArray(transactionBytes);\n    var tmp2 = converters.hexStringToByteArray(signature);\n    Array.prototype.splice.apply(tmp1, [64,64].concat(tmp2));\n    return converters.byteArrayToHexString(tmp1);\n  }\n\n  protected static checkType(transaction: any, type: number, subtype: number) {\n    return transaction.type === type && transaction.subtype === subtype;\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ninterface IGenericDialog extends angular.material.IDialogOptions {\n\n  /**\n   * Instantly send the transaction but do show the progress dialog, all the user has to\n   * do is click the success button to close the dialog.\n   * In case the transaction fails clicking the error button will close the dialog.\n   *\n   * @returns angular.IPromise<string> returns broadcasted transaction id\n   * */\n  send(): angular.IPromise<string>;\n\n  /**\n   * Shows the dialog, user has to click send button\n   *\n   * @returns angular.IPromise<string> returns broadcasted transaction id\n   * */\n  show(): angular.IPromise<string>;\n}\n\nenum GenericDialogState {\n  EDIT, CREATE, SIGN, BROADCAST\n}\n\nenum GenericDialogBroadcastState {\n  INTERNAL_TIMEOUT, INTERNAL_ERROR, SERVER_ERROR\n}\n\nabstract class GenericDialog implements angular.material.IDialogOptions {\n\n  /* Implemented by extending class */\n  abstract getTransactionBuilder(): TransactionBuilder;\n  abstract getFields($scope: angular.IScope): Array<AbstractDialogField>;\n  public fieldsReady($scope: angular.IScope): void {}\n\n  /* Providedd by extending classs */\n  protected dialogClass: string;\n  protected dialogTitle: string;\n  protected feeFormatted: string;\n  protected dialogDescription: string;\n  protected okBtnTitle: string = 'OK';\n  protected customFeeTitle: string;\n\n  /* Available for extending class - set from dialog controller */\n  public fields: IStringHashMap<AbstractDialogField> = {};\n\n  /* The dialog state determines what section is visible */\n  public state: GenericDialogState = GenericDialogState.EDIT;\n\n  /* Per state there are two sub states: BUSY and ERROR\n     BUSY shows a progress indicator.\n     ERROR shows an error indicator which you can click to go back to EDIT state\n     or in case of BROADCAST to retry. */\n  public busy: boolean = false;\n  public error: boolean = false;\n\n  /* Communicate error messages to user */\n  public message: string;\n  public secondaryMessage: string;\n\n  /* Broadcast specific error state */\n  public broadcastState: GenericDialogBroadcastState;\n\n  /* Cancelled by user */\n  public cancelled: boolean = false;\n\n  /* Set to true when this dialog was activated through `send`, tells the dialog\n     to close on pressing the error indicator. */\n  public instantSend: boolean = false;\n\n  public targetEvent;\n  public bindToController = true;\n  public controllerAs = 'vm';\n  public controller = GenericDialogCreateController(this);\n  public parent = angular.element(document.body);\n\n  constructor($event?) {\n    this.targetEvent = $event;\n  }\n\n  public send(): angular.IPromise<string> {\n    this.instantSend = true;\n    return this.show();\n  }\n\n  public show(): angular.IPromise<string> {\n    var $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog');\n    return $mdDialog.show(this);\n  }\n\n  public template = `\n    <md-dialog class=\"{{ vm.dialogClass }}\">\n      <form name=\"dialogForm\">\n        <md-toolbar>\n          <div class=\"md-toolbar-tools\">\n            <h2>{{ vm.dialogTitle }}</h2>\n            <div class=\"wrapper\">&nbsp;</div>\n            <h2>\n              <span ng-if=\"vm.fields.recipient && vm.fields.recipient.value && vm.fields.recipient.accountExists && vm.fields.recipientPublicKey.value\">\n                {{vm.fields.recipient.value}}\n              </span>\n              <span ng-if=\"vm.fields.recipient && vm.fields.recipient.value && vm.fields.recipient.accountExists && !vm.fields.recipientPublicKey.value\"\n                    style=\"color: red\">NO PUBLIC KEY</span>\n              <span ng-if=\"vm.fields.recipient && vm.fields.recipient.value && vm.fields.recipient.accountExists === false\"\n                    style=\"color: red\">UNKNOWN DESTINATION</span>\n            </h2>\n          </div>\n        </md-toolbar>\n        <md-dialog-content style=\"min-width:500px\" layout=\"column\" layout-padding ng-switch=\"vm.state\">\n\n          <!-- EDIT -->\n          <div ng-switch-when=\"0\">\n            <div ng-repeat=\"field in vm.fields\">\n              <field selector=\"{{field._selector}}\" f=\"field\" label=\"field._label\" value=\"field.value\" changed=\"field.changed()\"></field>\n            </div>\n          </div>\n\n          <!-- CREATE -->\n          <div layout=\"column\" layout-align=\"center center\" ng-switch-when=\"1\" layout-padding>\n            <div layout=\"column\" layout-align=\"center center\">\n              <md-progress-circular md-mode=\"indeterminate\" ng-show=\"vm.busy\"></md-progress-circular>\n              <md-button class=\"md-fab md-warn\" ng-click=\"vm.state=0;vm.error=false;vm.maybeClose()\" ng-show=\"vm.error\">\n                <md-icon md-font-library=\"material-icons\">warning</md-icon>\n              </md-button>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\">\n              <div ng-show=\"vm.busy\">Creating transaction</div>\n              <div ng-show=\"vm.error\">{{vm.message}}</div>\n            </div>\n          </div>\n\n          <!-- SIGN -->\n          <div layout=\"column\" layout-align=\"center center\" ng-switch-when=\"2\" layout-padding>\n            <div layout=\"column\" layout-align=\"center center\">\n              <md-progress-circular md-mode=\"indeterminate\" ng-show=\"vm.busy\"></md-progress-circular>\n              <md-button class=\"md-fab md-warn\" ng-show=\"vm.error\" ng-click=\"vm.cancelBtn()\">\n                <md-icon md-font-library=\"material-icons\">warning</md-icon>\n              </md-button>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\">\n              <div ng-show=\"vm.busy\">Signing transaction</div>\n              <div ng-show=\"vm.error\">{{vm.message}}</div>\n            </div>\n          </div>\n\n          <!-- BROADCAST -->\n          <div layout=\"column\" layout-align=\"center center\" ng-switch-when=\"3\" layout-padding>\n            <div layout=\"column\" layout-align=\"center center\">\n              <md-progress-circular md-mode=\"indeterminate\" ng-show=\"vm.busy\"></md-progress-circular>\n              <md-button class=\"md-fab md-warn\" ng-show=\"vm.error && vm.broadcastState == 0\" ng-click=\"vm.broadcast()\">\n                <md-icon md-font-library=\"material-icons\">refresh</md-icon>\n              </md-button>\n              <md-button class=\"md-fab md-warn\" ng-show=\"vm.error && (vm.broadcastState == 1 || vm.broadcastState == 2)\"\n                    ng-click=\"vm.state=0;vm.error=false;vm.maybeClose()\">\n                <md-icon md-font-library=\"material-icons\">warning</md-icon>\n              </md-button>\n              <md-button class=\"md-fab md-primary\" ng-show=\"!vm.broadcastState && !vm.error && !vm.busy\" ng-click=\"vm.dialogHide()\">\n                <md-icon md-font-library=\"material-icons\">check</md-icon>\n              </md-button>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\">\n              <div ng-show=\"vm.busy\">Broadcasting transaction</div>\n              <div ng-show=\"vm.error\" layout=\"column\" layout-align=\"center center\">\n                <div>{{ vm.message }}</div>\n                <div>{{ vm.secondaryMessage }}</div>\n              </div>\n              <div ng-show=\"!vm.broadcastState && !vm.error && !vm.busy\" layout=\"column\" layout-align=\"center center\">\n                <!-- <div>Succesully broadcasted transaction</div> -->\n                <div>Transaction completed</div>\n              </div>\n            </div>\n          </div>\n        </md-dialog-content>\n        <md-dialog-actions layout=\"row\" ng-switch=\"vm.state\">\n          <md-button ng-if=\"!vm.customFeeTitle\" ng-click=\"0\" ng-disabled=\"true\" class=\"fee\" style=\"max-width:140px !important\">Fee {{vm.feeFormatted}} HEAT</md-button>\n          <md-button ng-if=\"vm.customFeeTitle\" ng-click=\"0\" ng-disabled=\"true\" class=\"fee\" style=\"max-width:140px !important\">{{vm.customFeeTitle}}</md-button>\n          <span flex></span>\n\n          <!-- EDIT -->\n          <div ng-switch-when=\"0\">\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\">Cancel</md-button>\n            <!--<md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.okBtn['processing']\"></md-progress-circular>-->\n            <span class=\"text-center\" ng-hide=\"!vm.okBtn['processing']\"><i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contacting...&nbsp;</i></span>\n            <md-button class=\"md-primary\" ng-hide=\"vm.okBtn['processing']\" ng-click=\"vm.okBtn()\" ng-disabled=\"!dialogForm.$valid || vm.okBtn['processing'] || vm.okBtn['disabled']\">\n              {{vm.okBtnTitle}}\n            </md-button>\n          </div>\n\n          <!-- CREATE -->\n          <div ng-switch-when=\"1\" ng-show=\"vm.busy\">\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\">Cancel</md-button>\n          </div>\n\n          <!-- SIGN -->\n          <div ng-switch-when=\"2\">\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\" ng-show=\"vm.busy\">Cancel</md-button>\n            <md-button class=\"md-primary\" ng-click=\"vm.cancelBtn()\" ng-show=\"vm.error\">Close</md-button>\n          </div>\n\n          <!-- BROADCAST -->\n          <div ng-switch-when=\"3\">\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\" ng-show=\"vm.broadcastState==1 || vm.broadcastState==2\">Cancel</md-button>\n            <!-- <md-button class=\"md-primary\" ng-click=\"vm.reset()\" ng-show=\"!vm.broadcastState && !vm.error && !vm.busy\">More</md-button> -->\n          </div>\n        </md-dialog-actions>\n      </form>\n    </md-dialog>\n  `\n}\n\nfunction GenericDialogCreateController(dialog: GenericDialog) {\n\n  return function ($scope: angular.IScope,\n                   $mdDialog: angular.material.IDialogService,\n                   settings: SettingsService) {\n    this.fields = dialog.getFields($scope);\n    this.fields.forEach((field: AbstractDialogField) => {\n      dialog.fields[field.name] = field\n      this.fields[field.name] = field\n    });\n    dialog.fieldsReady($scope);\n    this.builder = null; /* HeatTransactionBuilder */\n\n    this.visualization_delay = settings.get(SettingsService.TRANSACTION_PROCESSING_VISUALIZATION);\n\n    /* Recipient exists check */\n    this.stateRecipient = null\n    this.stateRecipientExists = false\n    this.stateRecipientNoPublicKey = false\n\n    this.dialogCancel = function () {\n      $mdDialog.cancel();\n    }\n    this.dialogHide = function () {\n      $mdDialog.hide(this.builder.transactionId);\n    }\n\n    /* Indicates if all fields are valid and the form can submit */\n    this.reset = function () {\n      this.state = GenericDialogState.EDIT;\n      this.error = null;\n      this.message = null;\n      this.broadcastState = null;\n      this.secondaryMessage = null;\n      for (var i=0; i<this.fields.length; i++) {\n        this.fields[i].value = undefined;\n      }\n    }\n    this.maybeClose = function () {\n      if (dialog.instantSend) {\n        this.dialogCancel();\n      }\n    };\n    let overridedOkBtn = dialog['okBtn'];\n    if (overridedOkBtn) {\n      overridedOkBtn['mdDialog'] = $mdDialog;  //todo rework the hack with overridedOkBtn\n      overridedOkBtn['scope'] = $scope;\n    }\n    this.okBtn = overridedOkBtn ? overridedOkBtn : function () {\n      this.builder = dialog.getTransactionBuilder();\n\n      this.state = GenericDialogState.CREATE;\n      this.busy = true;\n      this.error = false;\n      this.message = null;\n      var promise = utils.delayPromise(this.builder.create(), this.visualization_delay);\n\n      promise.then(\n        () => {\n          if (this.cancelled) return;\n\n          promise = utils.delayPromise(this.builder.sign(), this.visualization_delay);\n          $scope.$evalAsync(() => {\n            this.state = GenericDialogState.SIGN;\n\n            promise.then(\n              () => {\n                if (this.cancelled) return;\n                this.broadcast();\n              },\n              (error: ITransactionBuilderSignError) => {\n                $scope.$evalAsync(() => {\n                  this.busy = false;\n                  this.error = true;\n                  this.message = error.description;\n                });\n              }\n            );\n          });\n        },\n        (error: ServerEngineError) => {\n          $scope.$evalAsync(() => {\n            this.busy = false;\n            this.error = true;\n            this.message = error.description;\n          });\n        }\n      );\n    }\n    this.cancelBtn = function () {\n      this.cancelled = true;\n      this.dialogCancel();\n    }\n    this.broadcast = function () {\n      var promise = utils.delayPromise(this.builder.broadcast(), this.visualization_delay);\n      $scope.$evalAsync(() => {\n        this.busy = true;\n        this.error = false;\n        this.state = GenericDialogState.BROADCAST;\n        this.broadcastState = null;\n\n        promise.then(\n          (response: ITransactionBuilderBroadcastResponse) => {\n            if (this.cancelled) return;\n\n            $scope.$evalAsync(() => {\n              this.busy = false;\n\n              /* API response took longer than SettingsService.SOCKET_RPC_TIMEOUT */\n              if (response.internalTimeout) {\n                this.error = true;\n                this.broadcastState = GenericDialogBroadcastState.INTERNAL_TIMEOUT;\n                this.message = 'Internal timeout';\n                this.secondaryMessage = 'Click to retry';\n              }\n\n              /* Either returned fullHash or transaction id did not match, not sure if ever posible\n                but might well be a detection mechanism for when someone is intercepting and/or\n                changing transaction broadcasts */\n              else if (response.internalError) {\n                this.error = true;\n                this.broadcastState = GenericDialogBroadcastState.INTERNAL_ERROR;\n                this.message = 'Internal error';\n                this.secondaryMessage = 'Unable to confirm broadcast succeeded';\n              }\n\n              /* Socket service received a standard API error, message contains error description */\n              else if (response.serverError) {\n                this.error = true;\n                this.broadcastState = GenericDialogBroadcastState.SERVER_ERROR;\n                this.message = 'Server error';\n                this.secondaryMessage = response.serverError;\n              }\n\n              /* Close by itself on instant send */\n              else /* if (this.instantSend) */ {\n                setTimeout(() => { this.dialogHide() }, 666);\n              }\n            });\n          }\n        );\n      });\n    }\n    /* Instant send enabled */\n    if (this.instantSend) {\n      this.okBtn();\n    }\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('assetIssue')\n@Inject('$q','user','assetInfo','heat')\nclass AssetIssueService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService,\n              private assetInfo: AssetInfoService,\n              private heat: HeatService) {\n    super();\n  }\n\n  dialog(currency: string, readonly?: boolean, $event?): IGenericDialog {\n    return new AssetIssueDialog($event, this, this.$q, this.user, this.assetInfo, this.heat, readonly);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 0) return false;\n\n    var descriptionUrlLen = bytes.byteArray[bytes.pos]\n    bytes.pos += 1;\n\n    transaction.descriptionUrl = converters.byteArrayToString(bytes.byteArray, bytes.pos, descriptionUrlLen);\n    bytes.pos += descriptionUrlLen;\n\n    transaction.descriptionHash = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 32));\n    bytes.pos += 32;\n\n    transaction.quantity = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n\n    transaction.decimals = bytes.byteArray[bytes.pos];\n    bytes.pos += 1;\n\n    transaction.dillutable = bytes.byteArray[bytes.pos] == 1;\n    bytes.pos += 1;\n\n    return transaction.descriptionUrl === data.AssetIssuance.descriptionUrl &&\n           transaction.descriptionHash === data.AssetIssuance.descriptionHash &&\n           transaction.quantity === data.AssetIssuance.quantityQNT &&\n           transaction.decimals === data.AssetIssuance.decimals &&\n           transaction.dillutable === data.AssetIssuance.dillutable;\n  }\n}\n\nclass AssetIssueDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private assetInfo: AssetInfoService,\n              private heat: HeatService,\n              private readonly: boolean) {\n    super($event);\n    this.dialogTitle = 'Issue asset';\n    this.dialogDescription = 'Description on how to issue an asset';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.assetIssue, 8).replace(/000000$/,'');\n    this.okBtnTitle = 'SEND';\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.text('symbol').\n              label('Asset symbol (3-4 chars)').\n              validate(\"Symbol must have 3 to 4 chars\", (symbol:string) => {\n                var len = angular.isString(symbol) ? symbol.trim().length : 0;\n                return  len >= 3 && len <= 4;\n              }).\n              asyncValidate(\"Symbol name already in use\", (symbol)=> {\n                let deferred = this.$q.defer<boolean>();\n                this.heat.api.getAssetProtocol1(symbol).then((asset) => {\n                  deferred.reject();\n                }, (response) => {\n                  if (response && response.code == 3 && response.description == \"Unknown asset\")\n                    deferred.resolve();\n                  else\n                    deferred.reject();\n                });\n                return deferred.promise;\n              }).\n              required(),\n      builder.text('name').\n              label('Asset name').\n              validate(\"Name can be at most 100 characters long\", (name:string) => {\n                var len = angular.isString(name) ? name.trim().length : 0;\n                return  len <= 100;\n              }).\n              required(),\n      builder.text('quantity').\n              label('Quantity').\n              required(),\n      builder.text('decimals').\n              label('Decimals').\n              required().\n              validate(\"Allowed range 0 .. 8\", (decimals) => {\n                var num = parseInt(decimals);\n                if (isNaN(num))\n                  return false;\n                return num >= 0 && num <= 8;\n              }),\n      builder.text('dillutable', 'false').\n              label('Dillutable').\n              required().\n              validate(\"Either type true or false\", (dillutable) => {\n                return dillutable == 'true' || dillutable == 'false';\n              }),\n      builder.text('descriptionUrl', 'http://').\n              label('Description URL (http:// or https://) (can be changed later)').\n              validate(\"Either leave blank or has to start with http:// or https://\", (value) => {\n                return !value || value.indexOf('http://') == 0 || value.indexOf('https://') == 0;\n              }).\n              required(false),\n      builder.text('descriptionHash').\n              label('Description hash (SHA256) of the description url contents (can be changed later)').\n              validate(\"Either leave blank or provide SHA256 hash in hex encoding\", (value) => {\n                if (value) {\n                  if (!/[0-9A-Fa-f]{6}/g.test(value))\n                    return false;\n                  var bytes = converters.hexStringToByteArray(value);\n                  if (bytes.length != 32)\n                    return false;\n                }\n                return true;\n              }).\n              required(false),\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.assetIssue)\n           .attachment('AssetIssuance', <IHeatCreateAssetIssuance> {\n              decimals: parseInt(this.fields['decimals'].value),\n              dillutable: this.fields['dillutable'].value == 'true',\n              quantityQNT: utils.convertToQNT(this.fields['quantity'].value),\n              descriptionHash: this.fields['descriptionHash'].value || \"0\".repeat(64),\n              descriptionUrl: this.fields['descriptionUrl'].value || 'http://'\n            });\n\n    // generate a protocol 1 asset properties description\n    var properties =  this.assetInfo.stringifyProperties(<AssetPropertiesProtocol1>{\n      symbol: this.fields['symbol'].value,\n      name: this.fields['name'].value\n    });\n\n    // create a asset properties bundle, pass asset=0 to have the bundle replicator\n    // take the asset id from the current transaction (since the asset does not exist yet)\n    var messageHex = heat.bundle.createAssetProperties({\n      asset: \"0\",\n      protocol: 1,\n      value: properties\n    });\n\n    // bundle messages are public and binary\n    builder.message(messageHex, TransactionMessageType.PUBLIC, true);\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('sendmoney')\n@Inject('$q','user','heat')\nclass SendmoneyService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService) {\n    super();\n  }\n\n  dialog($event?, recipient?: string, recipientPublicKey?: string, amount?: string, userMessage?: string): IGenericDialog {\n    return new SendmoneyDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey, amount, userMessage);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition): boolean {\n    return transaction.type === 0 && transaction.subtype === 0;\n  }\n}\n\nclass SendmoneyDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService,\n              private recipient: string,\n              private recipientPublicKey: string,\n              private amount: string,\n              private userMessage: string) {\n    super($event);\n    this.dialogTitle = 'Send HEAT';\n    this.dialogDescription = 'Description on how to send money';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n    this.recipient = this.recipient || '';\n    this.amount = this.amount || '0';\n    this.recipientPublicKey = this.recipientPublicKey || null;\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.account('recipient', this.recipient).\n              label('Recipient').\n              onchange(() => {\n                this.fields['recipientPublicKey'].value = null;\n                this.fields['message'].changed();\n                this.heat.api.getPublicKeyOrEmptyString(this.fields['recipient'].value).then(\n                  (publicKey) => {\n                    /* account exists but has no public key */\n                    if (publicKey == '') {\n                      $scope.$evalAsync(()=>{\n                        this.fields['recipient']['accountExists'] = true;\n                        // this.fields['message'].visible(false);\n                      });\n                    }\n                    else {\n                      this.fields['recipientPublicKey'].value = publicKey;\n                      $scope.$evalAsync(()=>{\n                        this.fields['recipient']['accountExists'] = true;\n                        // this.fields['message'].visible(true);\n                      });\n                    }\n                  },()=>{\n                    $scope.$evalAsync(()=>{\n                      this.fields['recipient']['accountExists'] = false\n                      // this.fields['message'].visible(false);\n                    });\n                  }\n                );\n              }).\n              required(),\n      builder.money('amount', this.amount).\n              label('Amount').\n              required().\n              precision(8).\n              symbol('HEAT').\n              asyncValidate(\"Not enough funds\", (amount) => {\n                let deferred = this.$q.defer<boolean>();\n                this.heat.api.getAccountBalance(this.user.account, '0').then(\n                  (balance: IHeatAccountBalance) => {\n                    try {\n                      var avail = new Big(balance.unconfirmedBalance);\n                      var total = new Big(amount).add(new Big(HeatAPI.fee.standard));\n                      if (avail.gte(total) > 0) {\n                        deferred.resolve();\n                      }\n                      else {\n                        deferred.reject();\n                      }\n                    } catch (e) {\n                      deferred.reject();\n                    }\n                  }, deferred.reject);\n                return deferred.promise;\n              }),\n      builder.text('message', this.userMessage).\n              rows(2).\n              // visible(false).\n              asyncValidate(\"No recipient public key\", (message) => {\n                let deferred = this.$q.defer<boolean>();\n                if (String(message).trim().length == 0) {\n                  deferred.resolve();\n                }\n                else {\n                  if (this.fields['recipientPublicKey'].value) {\n                    deferred.resolve();\n                  }\n                  else {\n                    this.heat.api.getPublicKey(this.fields['recipient'].value).then(\n                      (publicKey) => {\n                        this.fields['recipientPublicKey'].value = publicKey;\n                        deferred.resolve();\n                      },\n                      deferred.reject\n                    );\n                  }\n                }\n                return deferred.promise;\n              }).\n              label('Message'),\n      builder.hidden('recipientPublicKey', this.recipientPublicKey)\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('OrdinaryPayment', <IHeatCreateOrdinaryPayment>{\n              amountHQT: this.fields['amount'].value\n            });\n    builder.recipient(this.fields['recipient'].value);\n    builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\n    if (this.fields['message'].value) {\n      builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\n    }\n    return builder;\n  }\n}\n","/// <reference path='../services/transactions/AssetIssueService.ts'/>\n/// <reference path='../services/transactions/SendmoneyService.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'toolbar',\n  styles: [`\n  toolbar .admin-menu .md-button:not(.active) {\n    background-color: #FFA726;\n  }\n  toolbar .admin-selected-user .md-button {\n    margin-right: 18px;\n    margin-left: 0px;\n  }\n  toolbar .test-net {\n    font-size: 22px !important;\n    font-weight: bold !important;\n    line-height: 0.6;\n  }\n  toolbar .test-net-color {\n    background-color: #4CAF50 !important;\n  }\n  toolbar .beta-net-color {\n    background-color: #bf112f !important;\n  }\n  .unread-message-mark {\n    position: absolute;\n    top: 22px;\n    left: 32px;\n    color: green;\n    font-size: 35px;\n  }\n  `],\n  template: `\n    <md-toolbar class=\"main-toolbar\" ng-class=\"{'test-net-color':vm.isTestnet,'beta-net-color':vm.isBetanet}\">\n      <div class=\"md-toolbar-tools\">\n        <h2 ng-if=\"vm.isTestnet\" class=\"test-net\">\n          <md-tooltip md-direction=\"bottom\">See About dialog to switch to main net</md-tooltip>\n          TEST-NET&nbsp;&nbsp;&nbsp;&nbsp;\n          <br/><span style=\"font-size: 9px; font-weight: normal;\">{{vm.heatServerLocation}}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        </h2>\n        <h2 ng-if=\"vm.isBetanet\" class=\"test-net\">\n          <md-tooltip md-direction=\"bottom\">See About dialog to switch to main net</md-tooltip>\n          B E T A N E T &nbsp;\n        </h2>\n\n        <div class=\"wrapper\">\n          <div>\n            <div class=\"user\">\n              <div class=\"small-logo\" ng-if=\"!vm.isBetanet\"></div>\n              <h2 ng-if=\"vm.user.unlocked\">\n                <div class=\"account-name\">{{vm.user.accountName}}</div>\n                <div>\n                  <user-balance ng-if=\"vm.user.unlocked\"></user-balance>\n                </div>\n              </h2>\n            </div>\n\n            <div ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"home\" class=\"md-icon-button\" ng-click=\"vm.goToHome()\">\n                <md-tooltip md-direction=\"bottom\">Your {{vm.user.currency.symbol}} Home</md-tooltip>\n                <i><img src=\"assets/homeIcon.png\"></i>\n              </md-button>\n            </div>\n\n            <div>\n              <md-button aria-label=\"explorer\" class=\"md-icon-button\" href=\"#/explorer\">\n                <md-tooltip md-direction=\"bottom\">Blockchain explorer</md-tooltip>\n                <i><img src=\"assets/exploreIcon.png\"></i>\n              </md-button>\n              <md-button aria-label=\"trader\" class=\"md-icon-button\" ng-click=\"vm.goToExchange()\">\n                <md-tooltip md-direction=\"bottom\">Exchange</md-tooltip>\n                <i><img src=\"assets/exchangeIcon.png\"></i>\n              </md-button>\n              <md-button aria-label=\"server\" class=\"md-icon-button\" href=\"#/server\" ng-show=\"vm.isNodeEnv\">\n                <md-tooltip md-direction=\"bottom\">App Server</md-tooltip>\n                <i><img src=\"assets/serverIcon.png\"></i>\n              </md-button>\n              <md-button aria-label=\"home\" class=\"md-icon-button\" href=\"#/wallet\" ng-if=\"!vm.user.unlocked\">\n                <md-tooltip md-direction=\"bottom\">Wallet</md-tooltip>\n                <i><img src=\"assets/walletIcon.png\"></i>\n              </md-button>\n\n              <!--\n              <md-button aria-label=\"home\" class=\"md-icon-button\" ng-click=\"vm.$mdToast.show(vm.$mdToast.simple().textContent('Incorrect Password (or Pin)').hideDelay(15000))\">\n                <i><img src=\"assets/walletIcon.png\"></i>\n              </md-button>\n              -->\n\n\n            </div>\n\n            <div hide show-gt-sm ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"send heat\" class=\"md-icon-button\" ng-click=\"vm.showSendmoneyDialog($event);\">\n                <md-tooltip md-direction=\"bottom\">Send {{vm.user.currency.symbol}}</md-tooltip>\n                <i><img src=\"assets/sendHeatIcon.png\"></i>\n              </md-button>\n              <md-button aria-label=\"messages\" class=\"md-icon-button\" ng-click=\"vm.goToMessenger()\">\n                <md-tooltip md-direction=\"bottom\">Messages</md-tooltip>\n                <i>\n                  <img src=\"assets/messageIcon.png\">\n                </i>\n                <div class=\"unread-message-mark\" ng-if=\"vm.hasUnreadP2PMessage\">*</div>\n              </md-button>\n              <md-button aria-label=\"home\" class=\"md-icon-button\" href=\"#/wallet\">\n                <md-tooltip md-direction=\"bottom\">Wallet</md-tooltip>\n                <i><img src=\"assets/walletIcon.png\"></i>\n              </md-button>\n            </div>\n\n            <md-menu md-position-mode=\"target-right target\" md-offset=\"34px 34px\" hide-gt-sm ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"user menu\" class=\"md-icon-button\" ng-click=\"$mdOpenMenu($event)\" md-menu-origin >\n                <md-icon md-font-library=\"material-icons\">more_vert</md-icon>\n              </md-button>\n              <md-menu-content width=\"4\">\n                <md-menu-item ng-if=\"vm.user.unlocked\">\n                  <md-button aria-label=\"home\" ng-click=\"vm.goToHome()\">\n                    <md-icon md-font-library=\"material-icons\">home</md-icon>\n                    Your {{vm.user.currency.symbol}} Home\n                  </md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button aria-label=\"explorer\" href=\"#/explorer\">\n                    <md-icon md-font-library=\"material-icons\">explore</md-icon>\n                    Blockchain explorer\n                  </md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button aria-label=\"trader\" ng-click=\"vm.goToExchange()\">\n                    <md-icon md-font-library=\"material-icons\">bar_chart</md-icon>\n                    Exchange\n                  </md-button>\n                </md-menu-item>\n                <md-menu-item ng-show=\"vm.isNodeEnv\">\n                  <md-button aria-label=\"server\" href=\"#/server\">\n                    <md-icon md-font-library=\"material-icons\">settings</md-icon>\n                    App Server\n                  </md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button aria-label=\"wallet\" href=\"#/wallet\">\n                    <md-icon md-font-library=\"material-icons\">account_balance_wallet</md-icon>\n                    Wallet\n                  </md-button>\n                </md-menu-item>\n                <md-menu-item ng-if=\"vm.user.unlocked\">\n                  <md-button aria-label=\"send heat\" ng-click=\"vm.showSendmoneyDialog($event);\">\n                    <md-icon md-font-library=\"material-icons\">send</md-icon>\n                    Send {{vm.user.currency.symbol}}\n                  </md-button>\n                </md-menu-item>\n                <md-menu-item ng-if=\"vm.user.unlocked\">\n                  <md-button aria-label=\"messages\" ng-click=\"vm.goToMessenger()\">\n                    <md-icon md-font-library=\"material-icons\">chat</md-icon>\n                    Messages\n                  </md-button>\n                </md-menu-item>\n                <!--\n                <md-menu-item>\n                  <md-button aria-label=\"home\" ng-click=\"vm.openTestPage()\">\n                    <md-icon md-font-library=\"material-icons\">check</md-icon>\n                  </md-button>\n                </md-menu-item>\n                -->\n              </md-menu-content>\n            </md-menu>\n\n            <span flex></span>\n\n            <div class=\"selected-address\" ng-if=\"vm.user.unlocked\">\n              <div>Currently using <b>{{vm.user.currency.symbol}}</b></div>\n              <div layout=\"row\">\n                <div class=\"address wrapped\">\n                  <a href=\"#{{vm.user.currency.homePath}}\" id=\"toolbar-user-address\">{{vm.user.currency.address}}</a>\n                </div>\n                &nbsp;<a ng-click=\"vm.copyAddress()\">[copy]</a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <md-menu ng-if=\"vm.user.unlocked\" style=\"margin-right: -12px;\">\n          <md-button aria-label=\"signout\" class=\"md-icon-button\" ng-click=\"$mdOpenMenu($event)\" md-menu-origin >\n            <md-icon md-font-library=\"material-icons\">face</md-icon>\n          </md-button>\n          <md-menu-content width=\"4\">\n            <md-menu-item ng-repeat=\"item in vm.localHeatMasterAccounts\">\n              <md-button ng-click=\"vm.selectWalletAccount($event, item)\">\n                <span>{{item.identifier}}</span>\n              </md-button>\n            </md-menu-item>\n          </md-menu>\n        </md-menu>\n\n        <md-menu md-position-mode=\"target-right target\" md-offset=\"34px 0px\">\n          <md-button aria-label=\"signout\" class=\"md-icon-button\" ng-click=\"$mdOpenMenu($event)\" md-menu-origin >\n            <i><img src=\"assets/sandwich.png\"></i>\n          </md-button>\n          <md-menu-content width=\"4\">\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"transfer asset\" ng-click=\"vm.showAssetTransferDialog($event)\">\n                <md-icon md-font-library=\"material-icons\">swap_horiz</md-icon>\n                <span>Transfer Asset</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"issue asset\" ng-click=\"vm.showIssueAssetDialog($event)\">\n                <md-icon md-font-library=\"material-icons\">library_add</md-icon>\n                <span>Issue Asset</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"whitelits market\" ng-click=\"vm.showWhitelistMarketDialog($event)\">\n                <md-icon md-font-library=\"material-icons\">insert_chart</md-icon>\n                <span>Create Market</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"lease balance\" ng-click=\"vm.showLeaseBalanceDialog($event)\">\n                <md-icon md-font-library=\"material-icons\">update</md-icon>\n                <span>Lease Balance</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"register internet address\" ng-click=\"vm.registerInternetAddress($event)\">\n                <md-icon md-font-library=\"material-icons\">spellcheck</md-icon>\n                <span>Register Masternode Address</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item ng-show=\"vm.isNodeEnv\">\n              <md-button aria-label=\"dev-tools\" ng-click=\"vm.opendevTools($event)\">\n                <md-icon md-font-library=\"material-icons\">developer_board</md-icon>\n                Developer tools\n              </md-button>\n            </md-menu-item>\n            <md-menu-item>\n              <md-button aria-label=\"about\" ng-click=\"vm.about($event)\">\n                <md-icon md-font-library=\"material-icons\">info_outline</md-icon>\n                About HEAT\n              </md-button>\n            </md-menu-item>\n            <md-menu-item>\n              <md-button aria-label=\"about\" href=\"https://heatwallet.com/api\" target=\"_blank\">\n                <md-icon md-font-library=\"material-icons\">find_in_page</md-icon>\n                <span>Heat API (external)</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"Show copy\" ng-click=\"vm.showSecretPhrase()\">\n                <md-icon md-font-library=\"material-icons\">content_copy</md-icon>\n                <span>Show private key</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item>\n              <md-button aria-label=\"backup\" ng-click=\"vm.backupWallet()\">\n                <md-icon md-font-library=\"material-icons\">save</md-icon>\n                <span>Backup Wallet</span>\n              </md-button>\n            </md-menu-item>\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\n              <md-button aria-label=\"signout\" ng-click=\"vm.signout()\">\n                <md-icon md-font-library=\"material-icons\">close</md-icon>\n                Sign out\n              </md-button>\n            </md-menu-item>\n            <md-menu-item  ng-if=\"!vm.user.unlocked\">\n              <md-button aria-label=\"signin\" href=\"#/login\">\n                <md-icon md-font-library=\"material-icons\">lock_open</md-icon>\n                Sign in\n              </md-button>\n            </md-menu-item>\n            <md-menu-item ng-if=\"vm.isNodeEnv\">\n              <md-button aria-label=\"exit\" ng-click=\"vm.exit()\">\n                <md-icon md-font-library=\"material-icons\">exit_to_app</md-icon>\n                Exit\n              </md-button>\n            </md-menu-item>\n          </md-menu-content>\n        </md-menu>\n      </div>\n    </md-toolbar>\n  `\n})\n@Inject('$rootScope', '$scope', '$mdSidenav', 'user', 'sendmoney', 'electron', 'env', 'assetTransfer',\n  'assetIssue', 'whitelistMarket', 'balanceLease', 'masternode', 'storage', '$window', '$mdToast',\n  'walletFile', 'localKeyStore', 'panel', '$location', 'clipboard', 'P2PMessaging')\nclass ToolbarComponent {\n\n  isNodeEnv = false;\n  isTestnet = heat.isTestnet;\n  isBetanet = heat.isBetanet;\n  heatServerLocation;\n  hasUnreadP2PMessage = false;\n\n  localHeatMasterAccounts: Array<{ account: string, locked: boolean, identifier: string }> = []\n\n  constructor(private $rootScope: angular.IScope,\n              private $scope: angular.IScope,\n              private $mdSidenav,\n              public user: UserService,\n              private sendmoney: SendmoneyService,\n              private electron: ElectronService,\n              public env: EnvService,\n              private assetTransfer: AssetTransferService,\n              private assetIssue: AssetIssueService,\n              private whitelistMarket: WhitelistMarketService,\n              private balanceLease: BalanceLeaseService,\n              private masternodeService: MasternodeService,\n              private storage: StorageService,\n              private $window: angular.IWindowService,\n              private $mdToast: angular.material.IToastService,\n              private walletFile: WalletFileService,\n              private localKeyStore: LocalKeyStoreService,\n              private panel: PanelService,\n              private $location: angular.ILocationService,\n              private clipboard: ClipboardService,\n              private p2pMessaging: P2PMessaging) {\n    this.isNodeEnv = env.type == EnvType.NODEJS;\n\n    var refresh = utils.debounce(this.refreshLocalWallet.bind(this), 1000, false)\n    this.user.on(UserService.EVENT_UNLOCKED, refresh)\n    this.refreshLocalWallet()\n\n    $rootScope.$on('HEAT_SERVER_LOCATION', (event, location) => {\n      this.heatServerLocation = location;\n    });\n\n    let unreadChangedListener = (rooms: p2p.Room[]) => {\n      this.$scope.$evalAsync(() => {\n        this.hasUnreadP2PMessage = rooms.length > 0;\n      });\n    };\n    this.p2pMessaging.on(P2PMessaging.EVENT_HAS_UNREAD_CHANGED, unreadChangedListener);\n    $scope.$on('$destroy', () => this.p2pMessaging.removeListener(P2PMessaging.EVENT_HAS_UNREAD_CHANGED, unreadChangedListener));\n  }\n\n  copyAddress() {\n    this.clipboard.copyWithUI(document.getElementById('toolbar-user-address'), 'Copied address to clipboard');\n  }\n\n  goToHome() {\n    this.$location.path(this.user.currency.homePath)\n  }\n\n  goToExchange() {\n    if (this.user.currency && this.user.currency.symbol === 'ARDR') {\n      this.$location.path('/ardor-trader/15307894944226771409/ardor')\n    } else {\n      this.isTestnet ? this.$location.path('/trader/2949625650944850605/0') : this.$location.path('/trader/5592059897546023466/0')\n    }\n  }\n\n  goToMessenger() {\n    this.$location.path('messenger/0')\n  }\n\n  openTestPage() {\n    let address = '0x98d84343b9b98bb15a2ba3d6867c42a89c37a067'// '0x0102768bf0f0901689357262401b031e83900b4c'\n    let ethplorer: EthplorerService = heat.$inject.get('ethplorer')\n    ethplorer.getAddressInfo(address).then(() => {\n      this.$location.path('ethereum-account/' + address)\n    })\n  }\n\n  refreshLocalWallet() {\n    this.localHeatMasterAccounts = [];\n    this.localKeyStore.list().map((account: string) => {\n      let name = this.localKeyStore.keyName(account);\n      this.localHeatMasterAccounts.push({\n        account: account,\n        locked: true,\n        identifier: name || account\n      })\n    });\n    this.localHeatMasterAccounts.forEach(acc => {\n      let password = this.localKeyStore.getPasswordForAccount(acc.account)\n      if (password) {\n        acc.locked = false\n      }\n    })\n  }\n\n  unlock(secretPhrase: string) {\n    this.user.unlock(secretPhrase, null).then(\n      () => {\n        let currentPath = this.$location.path();\n        if (currentPath.indexOf(\"/explorer-account/\") > -1) {\n          this.$location.path(`/explorer-account/${this.user.account}/transactions`);\n        } else {\n          heat.fullApplicationScopeReload();\n        }\n      }\n    )\n  }\n\n  selectWalletAccount($event, item) {\n    let password = this.localKeyStore.getPasswordForAccount(item.account)\n    if (password) {\n      let key = this.localKeyStore.load(item.account, password);\n      if (key) {\n        this.unlock(key.secretPhrase)\n      }\n    }\n    else {\n      dialogs.prompt($event, 'Enter Password (or Pin)', 'Please enter your Password (or Pin) to unlock', '').then(\n        password => {\n          try {\n            let key = this.localKeyStore.load(item.account, password);\n            if (key) {\n              this.unlock(key.secretPhrase)\n              return\n            }\n          } catch (e) { console.log(e) }\n          this.$mdToast.show(this.$mdToast.simple().textContent(\"Incorrect Password (or Pin)\").hideDelay(5000));\n        }\n      )\n    }\n  }\n\n  showSendmoneyDialog($event) {\n    this.user.currency.invokeSendDialog($event)\n  }\n\n  showAssetTransferDialog($event) {\n    this.assetTransfer.dialog($event).show();\n  }\n\n  showIssueAssetDialog($event) {\n    this.assetIssue.dialog($event).show();\n  }\n\n  showWhitelistMarketDialog($event) {\n    var dialog = <WhitelistMarketferDialog>this.whitelistMarket.dialog($event);\n    dialog.show().then(() => {\n\n      /* PATCHUP IN AWAITING OF SERVER FUNCTIONALITY - also cleanup trader-markets.ts */\n\n      var currency = dialog.fields['currency'].value;\n      var asset = dialog.fields['asset'].value;\n      var currencyAvailableAssets = <Array<DialogFieldAssetAssetInfo>>dialog.fields['currency']['availableAssets'];\n      var assetAvailableAssets = <Array<DialogFieldAssetAssetInfo>>dialog.fields['asset']['availableAssets'];\n      var currencySymbol, assetSymbol;\n\n      for (var i = 0; i < currencyAvailableAssets.length; i++) {\n        var available = currencyAvailableAssets[i];\n        if (available.id == currency) {\n          currencySymbol = available.symbol;\n          break;\n        }\n      }\n      for (var i = 0; i < assetAvailableAssets.length; i++) {\n        var available = assetAvailableAssets[i];\n        if (available.id == asset) {\n          assetSymbol = available.symbol;\n          break;\n        }\n      }\n      var mymarkets = this.storage.namespace('trader').get('my-markets');\n      if (!mymarkets) {\n        mymarkets = [];\n      }\n      mymarkets.push({\n        currency: { id: currency, symbol: currencySymbol },\n        asset: { id: asset, symbol: assetSymbol }\n      });\n      this.storage.namespace('trader').put('my-markets', mymarkets);\n    });\n  }\n\n  showLeaseBalanceDialog($event) {\n    this.balanceLease.dialog(1440, null).show();\n  }\n\n  registerInternetAddress($event) {\n    this.masternodeService.dialog(null).show();\n  }\n\n  signout() {\n    this.user.lock();\n  }\n\n  exit() {\n    this.$window.close();\n  }\n\n  about($event) {\n    dialogs.about($event);\n  }\n\n  opendevTools() {\n    this.electron.openDevTools(OpenDevToolsMode.detach);\n  }\n\n  showSecretPhrase() {\n    this.panel.show(`\n      <div layout=\"column\" flex class=\"toolbar-copy-passphrase\">\n        <md-input-container flex>\n          <textarea rows=\"2\" flex ng-bind=\"vm.secretPhrase\" readonly ng-trim=\"false\"></textarea>\n        </md-input-container>\n      </div>\n    `, {\n      secretPhrase: this.user.currency.secretPhrase\n    })\n  }\n\n  backupWallet() {\n    let exported = this.localKeyStore.export();\n    let encoded = this.walletFile.encode(exported);\n    var blob = new Blob([encoded], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, 'heat.wallet');\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'userBalance',\n  template: `\n    <div layout=\"column\">\n      <span>\n        <md-tooltip ng-if=\"vm.showError\" md-direction=\"bottom\">{{vm.errorDescription}}</md-tooltip>\n        <span class=\"balance\">{{vm.formattedBalance}}</span>\n        <span class=\"fraction\">{{vm.formattedFraction}}</span>&nbsp;\n        <span class=\"currencyName\">{{vm.user.currency.symbol}}</span>\n        <md-icon ng-if=\"vm.showError\" md-font-library=\"material-icons\">error</md-icon>\n      </span>\n    </div>\n  `\n})\n@Inject('$scope','user','heat','$q','$interval')\nclass UserBalanceComponent {\n\n  private formattedBalance: string = \"0\";\n  private formattedFraction: string = \".00\";\n  private loading: boolean = true;\n  private showError: boolean = false;\n  private errorDescription: string;\n\n  constructor(private $scope: angular.IScope,\n              public user: UserService,\n              private heat: HeatService,\n              private $q: angular.IQService,\n              private $interval: angular.IIntervalService) {\n\n    /* subscribe to websocket balance changed events */\n    var refresh = utils.debounce((angular.bind(this, this.refresh)), 1*1000, false);\n\n    let unsubscribe = this.user.currency.subscribeBalanceChanged(()=>refresh())\n    $scope.$on('$destroy', unsubscribe)\n\n    this.user.on(UserService.EVENT_UNLOCKED, refresh)\n    $scope.$on('$destroy', () => {\n      this.user.removeListener(UserService.EVENT_UNLOCKED, refresh)\n    })\n\n    let interval = $interval(refresh, 10*1000)\n    $scope.$on('$destroy', () => { $interval.cancel(interval) })\n\n    this.refresh();\n\n  }\n\n  // REFACTOR..\n  refresh() {\n    this.$scope.$evalAsync(() => {\n      this.loading = true;\n    });\n    let address = this.user.currency.address\n    this.user.currency.getBalance().then(balance => {\n      this.$scope.$evalAsync(() => {\n        var formatted = balance.split(\".\");\n        this.formattedBalance = formatted[0];\n        this.formattedFraction = \".\" + (formatted[1]||\"00\");\n        this.showError = false;\n        this.loading = false;\n      });\n    }, (error: ServerEngineError) => {\n      this.$scope.$evalAsync(() => {\n        this.formattedBalance = \"0\";\n        this.formattedFraction = \".00000000\";\n        this.showError = true;\n        this.errorDescription = error ? error.description : \"-\";\n        this.loading = false;\n      });\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'userContacts',\n  styles: [`\n    .unread-symbol {\n      font-size: 22px;\n      color: #ff3301;\n      margin: 0 6px -6px 0;\n    }\n    .p2p-unread-symbol {\n      font-size: 22px;\n      color: green;\n      margin: 0 6px -6px 0;\n    }\n    @keyframes blinker {\n      80% {opacity: 0.5;}\n    }\n    .channelopened-status-symbol {\n      font-size: 22px;\n      color: green;\n      margin: 0 6px 4px 0;\n    }\n    .roomregistered-status-symbol {\n      font-size: 22px;\n      color: grey;\n      margin: 0 6px 4px 0;\n    }\n  `],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <md-list flex layout=\"column\">\n        <md-list-item ng-repeat=\"contact in vm.contacts\" aria-label=\"Entry\">\n          <!--<div class=\"truncate-col unread-col left\">\n            <md-icon md-font-library=\"material-icons\" ng-class=\"{'has-unread-message': contact.hasUnreadMessage}\">fiber_manual_record</md-icon>\n          </div>-->\n          <span ng-if=\"contact.hasUnreadMessage\" class=\"unread-symbol\">*</span>\n          <span ng-if=\"contact.hasUnreadP2PMessage\" class=\"p2p-unread-symbol\">*</span>\n          <span ng-if=\"vm.p2pStatus(contact)=='channelOpened'\" class=\"channelopened-status-symbol\">●</span>\n          <span ng-if=\"vm.p2pStatus(contact)=='roomRegistered'\" class=\"roomregistered-status-symbol\">●</span>\n          <div class=\"truncate-col account-col left\">\n            <a href=\"#/messenger/{{contact.publicKey}}\" ng-class=\"{'active':contact.publicKey==vm.activePublicKey}\">{{contact.publicName || contact.account}}</a>\n          </div>\n        </md-list-item>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope','user','heat','$q','$interval','$timeout','$location','$rootScope','storage', 'P2PMessaging', '$mdToast')\nclass UserContactsComponent {\n\n  public contacts : Array<IHeatMessageContact> = [];\n  private refresh: IEventListenerFunction;\n  private activePublicKey: string;\n  private store: Store;\n\n  constructor(private $scope: angular.IScope,\n              public user: UserService,\n              private heat: HeatService,\n              private $q: angular.IQService,\n              private $timeout: angular.ITimeoutService,\n              private $interval: angular.IIntervalService,\n              private $location: angular.ILocationService,\n              private $rootScope: angular.IRootScopeService,\n              storage: StorageService,\n              private p2pMessaging: P2PMessaging,\n              private $mdToast: angular.material.IToastService) {\n\n    this.refresh = utils.debounce(\n      () => {\n        this.refreshContacts()\n      },\n      500, true);\n    heat.subscriber.unconfirmedTransaction({recipient: this.user.account}, ()=>{ this.refresh() });\n\n    this.store = storage.namespace('contacts.latestTimestamp', $scope);\n    this.store.on(Store.EVENT_PUT, this.refresh);\n    this.p2pMessaging.seenP2PMessageTimestampStore.on(Store.EVENT_PUT, (key: string) => {\n      if (key.indexOf(\"_last-message-time\") > -1) return;\n      this.refresh();\n    });\n\n    let contactListener: IEventListenerFunction = fullKey => {\n      let contactKey = fullKey.substr(fullKey.lastIndexOf('.') + 1);\n      let contact: IHeatMessageContact = this.p2pMessaging.p2pContactStore.get(contactKey);\n      if (contact && contact.activityTimestamp) {\n        if (contact.activityTimestamp < 0) {\n          contact.activityTimestamp = - contact.activityTimestamp;\n          this.$location.path(`/messenger/${contact.publicKey}`);\n        }\n      } else {\n        this.refresh();\n      }\n    };\n    this.p2pMessaging.p2pContactStore.on(Store.EVENT_PUT, contactListener);\n\n    if (user.unlocked) {\n      this.init();\n    }\n    else {\n      let listener = () => { this.init() };\n      user.on(UserService.EVENT_UNLOCKED, listener);\n      $scope.$on('$destroy',()=>user.removeListener(UserService.EVENT_UNLOCKED, listener));\n    }\n\n    $rootScope.$on('$locationChangeSuccess', () => { this.setActivePublicKey() });\n    this.setActivePublicKey();\n\n    //let myRoom = this.p2pMessaging.register();\n\n    let messageListener = (msg: any, room: p2p.Room) => {\n      for (let contact of this.contacts) {\n        if (this.contactHasUnreadP2PMessage(contact)) {\n          this.refreshContacts();\n          return;\n        }\n      }\n    };\n    this.p2pMessaging.on(P2PMessaging.EVENT_NEW_MESSAGE, messageListener);\n\n    let channelListener: IEventListenerFunction = (room: p2p.Room, peerId: string) => {\n      this.refresh();\n    };\n    this.p2pMessaging.on(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, channelListener);\n    this.p2pMessaging.on(P2PMessaging.EVENT_ON_CLOSE_DATA_CHANNEL, channelListener);\n\n    $scope.$on('$destroy', () => {\n      this.p2pMessaging.removeListener(P2PMessaging.EVENT_NEW_MESSAGE, messageListener);\n      this.p2pMessaging.seenP2PMessageTimestampStore.removeListener(Store.EVENT_PUT, this.refresh);\n      this.p2pMessaging.p2pContactStore.removeListener(Store.EVENT_PUT, contactListener);\n      this.p2pMessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, channelListener);\n      this.p2pMessaging.removeListener(P2PMessaging.EVENT_ON_CLOSE_DATA_CHANNEL, channelListener)\n    });\n  }\n\n  getActivePublicKey() {\n    var path = this.$location.path().replace(/^\\//,'').split('/'), route = path[0], params = path.slice(1);\n    return (route == \"messenger\") ? params[0] : null;\n  }\n\n  setActivePublicKey() {\n    this.activePublicKey = this.getActivePublicKey();\n\n    if (this.activePublicKey && this.activePublicKey != \"0\") {\n      let room = this.p2pMessaging.enterRoom(this.activePublicKey);\n    }\n\n    if (!this.activePublicKey || this.activePublicKey == \"0\") {\n      if (this.contacts[0] && this.contacts[0].publicKey != \"0\") {\n        this.$location.path(`/messenger/${this.contacts[0].publicKey}`);\n      }\n    }\n\n    let activeContact = this.contacts.find(contact => contact.publicKey == this.activePublicKey);\n    if (activeContact) {\n      activeContact[\"hasUnreadP2PMessage\"] = false;\n    }\n  }\n\n  init() {\n    this.refreshContacts();\n  }\n\n  refreshContacts() {\n    this.heat.api.getMessagingContacts(this.user.account, 0, 100).then((contacts) => {\n      this.$scope.$evalAsync(() => {\n        this.contacts = contacts;\n\n        //merge contacts obtained via p2p messaging\n        this.p2pMessaging.p2pContactStore.forEach((key, p2pContact: IHeatMessageContact) => {\n          let existingHeatContact = this.contacts.find(contact => !p2pContact.publicKey || contact.publicKey == p2pContact.publicKey);\n          if (existingHeatContact) {\n            existingHeatContact.activityTimestamp = p2pContact.activityTimestamp;\n          } else {\n            p2pContact['isP2POnlyContact'] = true;\n            this.contacts.push(p2pContact);\n          }\n        });\n\n        this.contacts = this.contacts.filter(contact => contact.publicKey && contact.account != this.user.account)\n          .map((contact) => {\n            if (!contact['isP2POnlyContact']) {\n              contact['hasUnreadMessage'] = this.contactHasUnreadMessage(contact);\n            }\n            contact['hasUnreadP2PMessage'] =\n              !(this.p2pMessaging.offchainMode && this.activePublicKey == contact.publicKey)\n              && this.contactHasUnreadP2PMessage(contact);\n            // contact['p2pStatus'] = this.p2pStatus(contact);\n            return contact;\n          })\n          .sort((c1, c2) => (c2.activityTimestamp ? Math.abs(c2.activityTimestamp) : 0) - (c1.activityTimestamp ? Math.abs(c1.activityTimestamp) : 0));\n\n        if (this.getActivePublicKey()==\"0\") {\n          this.setActivePublicKey();\n        }\n      });\n    })\n  }\n\n  p2pStatus(contact: IHeatMessageContact) {\n    if (!contact.publicKey) return;\n    let room = this.p2pMessaging.getOneToOneRoom(contact.publicKey);\n    if (room) {\n      let peer = room.getPeer(contact.publicKey);\n      if (peer && peer.isConnected()) {\n        return \"channelOpened\";\n      } else {\n        //if (room.state.entered == \"entered\") { //it is more corerctly, but need the callback like room.onEntered()\n        if (room.state.entered != \"not\") {\n          return \"roomRegistered\";\n        }\n      }\n    }\n  }\n\n  contactHasUnreadMessage(contact: IHeatMessageContact): boolean {\n    return contact.timestamp > this.store.getNumber(contact.account, 0);\n  }\n\n  contactHasUnreadP2PMessage(contact: IHeatMessageContact): boolean {\n    let room = this.p2pMessaging.getOneToOneRoom(contact.publicKey, true);\n    if (room) {\n      return this.p2pMessaging.roomHasUnreadMessage(room);\n    }\n    return false;\n  }\n\n}\n","///<reference path='VirtualRepeatComponent.ts'/>\n\n@Component({\n  selector: 'virtualRepeatArdorTransactions',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n\n          <!-- TX ID  -->\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\n\n          <!-- FROM -->\n          <div class=\"truncate-col info-col left\">FROM</div>\n\n          <!-- TO -->\n          <div class=\"truncate-col info-col left\">TO</div>\n\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col\">Amount</div>\n\n          <!-- MESSAGE -->\n          <div class=\"truncate-col message-col left\">Message</div>\n\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\n\n            <!-- TX ID -->\n            <div class=\"truncate-col tx-col left\" >\n              <span>{{item.txid}}</span>\n            </div>\n\n            <!-- FROM -->\n            <div class=\"truncate-col info-col left\">\n             <span>{{item.from}}</span>\n            </div>\n\n            <!-- TO -->\n            <div class=\"truncate-col info-col left\">\n              <span>{{item.to}}</span>\n            </div>\n\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col\">\n              <span>{{item.amount}}</span>\n            </div>\n\n            <!-- MESSAGE -->\n            <div class=\"truncate-col message-col left\">\n              <span>{{item.message}}</span>\n            </div>\n\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope', '$q', 'ardorTransactionsProviderFactory', 'settings', 'ardorPendingTransactions', 'user', 'ardorBlockExplorerService')\nclass VirtualRepeatArdrTransactionsComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService,\n              private ardorTransactionsProviderFactory: ArdorTransactionsProviderFactory,\n              private settings: SettingsService,\n              private ardorPendingTransactions: ArdorPendingTransactionsService,\n              private user: UserService,\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\n\n    super($scope, $q);\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    let secretPhrase = this.user.currency.secretPhrase;\n    this.initializeVirtualRepeat(\n      this.ardorTransactionsProviderFactory.createProvider(this.account),\n      /* decorator function */\n      (transaction: any) => {\n        transaction.amount = transaction.amountNQT/100000000;\n        let date = utils.ardorTimestampToDate(transaction.timestamp);\n        transaction.dateTime = dateFormat(date, format);\n        transaction.from = transaction.senderRS;\n        transaction.to = transaction.recipientRS;\n        transaction.txid = transaction.transaction;\n        transaction.message = ''\n        if (transaction.attachment.encryptedMessage) {\n          if(transaction.senderPublicKey !== this.user.publicKey)\n            transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, transaction.senderPublicKey, secretPhrase)\n          else {\n            try {\n              let recipientPublicKey;\n              this.ardorBlockExplorerService.getPublicKeyFromAddress(transaction.recipientRS).then(_publicKey => {\n                recipientPublicKey = _publicKey\n                transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, recipientPublicKey, secretPhrase)\n                transaction.json.message = transaction.message\n              })\n            } catch(e) {\n              transaction.message = ''\n            }\n          }\n        }\n        transaction.json = {\n          txid: transaction.transaction,\n          time: transaction.dateTime,\n          from: transaction.from,\n          to: transaction.to,\n          amount: transaction.amount,\n          block: transaction.height,\n          confirmations: transaction.confirmations,\n          fee: transaction.feeNQT/100000000\n        }\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    let timeout = setTimeout(refresh, 10 * 1000)\n\n    let listener = this.determineLength.bind(this)\n    this.PAGE_SIZE = 10;\n    ardorPendingTransactions.addListener(listener)\n\n    $scope.$on('$destroy', () => {\n      ardorPendingTransactions.removeListener(listener)\n      clearTimeout(timeout)\n    })\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\n  }\n\n\n  onSelect(selectedTransaction) { }\n}\n","///<reference path='VirtualRepeatComponent.ts'/>\n\n@Component({\n  selector: 'virtualRepeatBtcTransactions',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n          <!-- TX ID  -->\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\n          <!-- FROM -->\n          <div class=\"truncate-col info-col left\">FROM</div>\n          <!-- TO -->\n          <div class=\"truncate-col info-col left\">TO</div>\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col right\">Amount</div>\n          <!-- MESSAGE -->\n          <div class=\"truncate-col message-col left\">Message</div>\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\n            <!-- TX ID -->\n            <div class=\"truncate-col tx-col left\" >\n              <span>\n                <a target=\"_blank\" href=\"https://live.blockcypher.com/btc/tx/{{item.txid}}\">{{item.txid}}</a>\n              </span>\n            </div>\n            <!-- FROM -->\n            <div class=\"truncate-col info-col left\">\n             <span>{{item.from}}</span>\n            </div>\n            <!-- TO -->\n            <div class=\"truncate-col info-col left\">\n              <span ng-show = \"item.to !== 'Multiple Outputs'\">{{item.to}}</span>\n              <a ng-show = \"item.to === 'Multiple Outputs'\" ng-click=\"vm.jsonDetails($event, item.json)\">{{item.to}}</a>\n            </div>\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col right\">\n              <span>{{item.amount}}</span>\n            </div>\n            <!-- MESSAGE -->\n            <div class=\"truncate-col message-col left\">\n              <span>{{item.displayMessage}}</span>\n            </div>\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope', '$q', 'btcTransactionsProviderFactory', 'settings', 'bitcoinPendingTransactions', 'user', 'bitcoinMessagesService')\nclass VirtualRepeatBtcTransactionsComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n  btcMessages: Array<{ txId: string, message: string }> = []\n  constructor(protected $scope: angular.IScope,\n    protected $q: angular.IQService,\n    private btcTransactionsProviderFactory: BtcTransactionsProviderFactory,\n    private settings: SettingsService,\n    private bitcoinPendingTransactions: BitcoinPendingTransactionsService,\n    private user: UserService,\n    private bitcoinMessagesService: BitcoinMessagesService) {\n    super($scope, $q);\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n\n    /* privateKey and publicKey should be HEAT keys */\n    let privateKey = this.user.secretPhrase;\n    let publicKey = this.user.publicKey;\n    this.getBitcoinMessages(privateKey, publicKey)\n    this.initializeVirtualRepeat(\n      this.btcTransactionsProviderFactory.createProvider(this.account),\n      /* decorator function */\n      (transaction: any) => {\n        transaction.amount = transaction.vout[0].value;\n        this.btcMessages.forEach(message => {\n          if (message.txId == transaction.txid) {\n            transaction.displayMessage = message.message;\n            if(transaction.displayMessage.length > 13) {\n              transaction.displayMessage = transaction.displayMessage.substr(0, 10).concat('...')\n            }\n            transaction.message = message.message\n          }\n        })\n        transaction.dateTime = dateFormat(new Date(transaction.time * 1000), format);\n        transaction.from = transaction.vin[0].addr;\n        let totalInputs = 0;\n        let inputs = '';\n        for (let i = 0; i < transaction.vin.length; i++) {\n          totalInputs += parseFloat(transaction.vin[i].value);\n          inputs += `\n          ${transaction.vin[i].addr} (${transaction.vin[i].value})`;\n          if (transaction.vin[i].addr === this.account) {\n            transaction.from = transaction.vin[i].addr;\n          }\n        }\n\n        let totalOutputs = 0;\n        let outputs = '';\n        for (let i = 0; i < transaction.vout.length; i++) {\n          totalOutputs += parseFloat(transaction.vout[i].value);\n          if (transaction.vout[i].scriptPubKey.addresses) {\n            outputs += `\n            ${transaction.vout[i].scriptPubKey.addresses[0]} (${transaction.vout[i].value})`;\n          }\n        }\n        // by default assign To field to zeroth address\n        for (let i = 0; i < transaction.vout.length && transaction.vout[i].scriptPubKey.addresses; i++) {\n          if (transaction.vout[i].scriptPubKey.addresses) {\n            transaction.to = transaction.vout[0].scriptPubKey.addresses[0];\n            break;\n          }\n        }\n        // if change address is same and API returns change address as zeroth address then point To field and volume to some other address\n        if (transaction.from === transaction.to) {\n          for (let i = 1; i < transaction.vout.length && transaction.vout[i].scriptPubKey.addresses; i++) {\n            transaction.to = transaction.vout[i].scriptPubKey.addresses[0];\n            transaction.amount = transaction.vout[i].value;\n            break;\n          }\n        }\n\n        // if BTC were transferred from the unlocked account address then show it as \"-Amount\"\n        if (inputs.includes(this.account)) {\n          transaction.amount = `-${transaction.amount}`;\n        } else {\n          // if input does not include the current unlocked account address then output will always have it\n          for (let i = 0; i < transaction.vout.length; i++) {\n            if (transaction.vout[i].scriptPubKey.addresses && transaction.vout[i].scriptPubKey.addresses[0] === this.account) {\n              transaction.to = this.account;\n              transaction.amount = transaction.vout[i].value;\n            }\n          }\n        }\n        // if change address was different then show hardcoded output\n        if (!outputs.includes(this.account) && transaction.vout.length > 1) {\n          transaction.to = 'Multiple Outputs';\n        }\n\n        transaction.json = {\n          txid: transaction.txid,\n          time: transaction.dateTime,\n          block: transaction.blockheight,\n          totalInputs,\n          totalOutputs,\n          confirmations: transaction.confirmations,\n          fees: transaction.fees,\n          inputs: inputs.trim(),\n          outputs: outputs.trim(),\n          size: transaction.size,\n          message: transaction.message ? transaction.message : ''\n        }\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    let timeout = setTimeout(refresh, 10 * 1000)\n\n    let listener = this.determineLength.bind(this)\n    this.PAGE_SIZE = 10;\n    bitcoinPendingTransactions.addListener(listener)\n\n    $scope.$on('$destroy', () => {\n      bitcoinPendingTransactions.removeListener(listener)\n      clearTimeout(timeout)\n    })\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\n  }\n\n\n  onSelect(selectedTransaction) { }\n\n  getBitcoinMessages = (privateKey: string, publicKey: string) => {\n    this.btcMessages = []\n    let addr = this.user.currency.address\n    let messages = this.bitcoinMessagesService.messages[addr]\n    if (messages) {\n      try {\n        messages.forEach(entry => {\n          let parts = entry.message.split(':'), data = parts[0], nonce = parts[1]\n          let message = heat.crypto.decryptMessage(data, nonce, publicKey, privateKey)\n          this.btcMessages.push({\n            txId: entry.txId,\n            message: message\n          })\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n","///<reference path='VirtualRepeatComponent.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'virtualRepeatEthTransactions',\n  inputs: ['account','personalize'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n          <!-- HEIGHT\n          <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">Height</div>\n          -->\n\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n\n          <!-- ID -->\n          <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">Id</div>\n\n          <!-- INOUT -->\n          <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">In/Out</div>\n\n          <!-- TRANSACTION -->\n          <!-- <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">Transaction</div> -->\n\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col\" ng-if=\"vm.personalize\">Amount</div>\n\n          <!-- TOFROM -->\n          <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">To/From</div>\n\n          <!-- INFO -->\n          <div class=\"truncate-col info-col left\" flex>Info</div>\n\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n\n            <!-- HEIGHT\n            <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">\n              <span ng-show=\"item.height!=2147483647\">{{item.heightDisplay}}</span>\n              <span>\n                <a target=\"_blank\" href=\"https://etherscan.io/block/{{item.heightDisplay}}\">{{item.heightDisplay}}</a>\n              </span>\n            </div>\n            -->\n\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\n\n            <!-- ID -->\n            <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">\n              <a target=\"_blank\" href=\"https://ethplorer.io/tx/{{item.hash}}\">{{item.hash}}</a>\n            </div>\n\n            <!-- INOUT -->\n            <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">\n              <md-icon md-font-library=\"material-icons\" ng-class=\"{outgoing: item.outgoing, incoming: !item.outgoing}\">\n                {{item.outgoing ? 'keyboard_arrow_up': 'keyboard_arrow_down'}}\n              </md-icon>\n            </div>\n\n            <!-- TRANSACTION -->\n            <!-- <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">\n              <span ng-bind-html=\"item.renderedTransactionType\"></span>\n            </div> -->\n\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col\" ng-if=\"vm.personalize\">\n              <span ng-bind-html=\"item.renderedAmount\"></span>\n            </div>\n\n            <!-- TOFROM -->\n            <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">\n              <span ng-bind-html=\"item.renderedToFrom\"></span>\n            </div>\n\n            <!-- INFO -->\n            <div class=\"truncate-col info-col left\" flex>\n              <span ng-bind-html=\"item.renderedInfo\"></span>\n            </div>\n\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope','$q','ethTransactionsProviderFactory','settings','user','render',\n  '$mdPanel','controlCharRender','web3','ethereumPendingTransactions')\nclass VirtualRepeatEthTransactionsComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n  personalize: boolean; // @input\n\n  renderer: EthTransactionRenderer = new EthTransactionRenderer(this);\n\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService,\n              private ethTransactionsProviderFactory: EthTransactionsProviderFactory,\n              private settings: SettingsService,\n              private user: UserService,\n              private render: RenderService,\n              private $mdPanel: angular.material.IPanelService,\n              private controlCharRender: ControlCharRenderService,\n              private web3: Web3Service,\n              private ethereumPendingTransactions: EthereumPendingTransactionsService) {\n    super($scope, $q);\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    this.initializeVirtualRepeat(\n      this.ethTransactionsProviderFactory.createProvider(this.account),\n      /* decorator function */\n      (transaction: EthplorerAddressTransactionExtended) => {\n        var date = new Date(0); // 0 sets date to epoch time\n        date.setUTCSeconds(<any>transaction.timestamp);\n        transaction['time'] = dateFormat(date, format);\n        transaction['heightDisplay'] = 'no height'\n        if (this.personalize) {\n          transaction['outgoing'] = this.user.currency.address == transaction.from;\n\n          //transaction['renderedTransactionType'] = this.renderer.renderTransactionType(transaction);\n          let amountVal = this.renderer.renderAmount(transaction);\n          transaction['renderedAmount'] = amountVal;\n          transaction['renderedToFrom'] = this.renderer.renderedToFrom(transaction);\n        }\n\n        let renderedInfo = this.renderer.renderInfo(transaction);\n        if (angular.isString(renderedInfo)) {\n          transaction['renderedInfo'] = renderedInfo;\n        }\n        else if (angular.isObject(renderedInfo)) {\n          renderedInfo.then((text)=>{\n            transaction['renderedInfo'] = text;\n          })\n        }\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    let timeout = setTimeout(refresh, 10*1000)\n\n    let listener = this.determineLength.bind(this)\n    ethereumPendingTransactions.addListener(listener)\n\n    $scope.$on('$destroy', () => {\n      ethereumPendingTransactions.removeListener(listener)\n      clearTimeout(timeout)\n    })\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Transaction: '+item.transaction);\n  }\n\n  imageUrl(contractAddress: string) {\n    return `https://raw.githubusercontent.com/dmdeklerk/tokens/master/images/${contractAddress}.png`\n  }\n\n  renderSync(transaction: EthplorerAddressTransactionExtended) {\n    try {\n      if (transaction['erc20']) {\n        //console.log(transaction['erc20'])\n        return JSON.stringify(transaction['erc20'])\n      }\n      return this.web3.parseInput(transaction.input)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  onSelect(selectedTransaction) {}\n}\n\ninterface EthTemplateFunction {\n  (transaction: IHeatTransaction):string;\n}\n\nclass EthTransactionRenderHelper {\n  private $q: angular.IQService;\n  constructor(private template: string|EthTemplateFunction,\n              private extractor: (transaction: EthplorerAddressTransactionExtended)=>Object) {\n    this.$q = <angular.IQService> heat.$inject.get('$q');\n  }\n\n  private isPromise(val) {\n    return angular.isObject(val) && angular.isFunction(val['then']);\n  }\n\n  public render(transaction: EthplorerAddressTransactionExtended): angular.IPromise<string>|string {\n    var parts = this.extractor(transaction);\n    var args: IStringHashMap<string> = {};\n    var promises = [];\n    angular.forEach(parts, (val,key) => {\n      if (this.isPromise(val)) {\n        promises.push(val);\n        val.then((promiseVal)=>{\n          args[key]=promiseVal;\n        });\n      }\n      else {\n        args[key]=val;\n      }\n    });\n    let template = angular.isFunction(this.template) ? (<(x)=>string>this.template).call(null, transaction) : this.template;\n    let text = (' ' + template).slice(1);\n    if (promises.length>0) {\n      var deferred = this.$q.defer<string>();\n      this.$q.all(promises).then(()=>{\n        angular.forEach(args, (val,key) => {\n          text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\n        });\n        deferred.resolve(text);\n      });\n      return deferred.promise;\n    }\n    angular.forEach(args, (val,key) => {\n      text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\n    })\n    return text;\n  }\n}\n\nclass EthTransactionRenderer {\n\n  // ether transfer\n  private TYPE_ETHEREUM_TRANSFER = 'eth:transfer'\n\n  // erc20\n  private TYPE_ERC20_APPROVE = 'approve'\n  private TYPE_ERC20_ALLOWANCE = 'allowance'\n  private TYPE_ERC20_TRANSFER = 'transfer'\n  private TYPE_ERC20_TRANSFER_FROM = 'transferFrom'\n\n  // etherdelta_2 | https://etherscan.io/address/0x8d12a197cb00d4747a1fe03395095ce2a5cc6819#code\n  private TYPE_ETHERDELTA_DEPOSIT_TOKEN = 'depositToken'\n  private TYPE_ETHERDELTA_WITHDRAWAL = 'withdraw'\n  private TYPE_ETHERDELTA_WITHDRAWAL_TOKEN = 'withdrawToken'\n  private TYPE_ETHERDELTA_ORDER = 'order'\n  private TYPE_ETHERDELTA_TRADE = 'trade'\n  private TYPE_ETHERDELTA_TRADE_BALANCES = 'tradeBalances'\n  private TYPE_ETHERDELTA_CANCEL_ORDER = 'cancelOrder'\n\n  private $q: angular.IQService;\n  private renderers: IStringHashMap<EthTransactionRenderHelper> = {};\n  private transactionTypes: IStringHashMap<string> = {};\n  private ethTransactionParser: EthTransactionParserService\n  private ethplorer: EthplorerService\n\n  constructor(private provider?: {account?: string, personalize: boolean}) {\n    let key;\n    this.$q = <angular.IQService> heat.$inject.get('$q');\n    this.ethTransactionParser = <EthTransactionParserService> heat.$inject.get('ethTransactionParser');\n    this.ethplorer = heat.$inject.get('ethplorer')\n    key = this.TYPE_ETHEREUM_TRANSFER;\n    this.transactionTypes[key] = 'TRANSFER';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return '<b>TRANSFER</b> $amount from $from to $to'\n      },\n      (t) => {\n        return {\n          from: this.account(t.from),\n          to: this.account(t.to),\n          amount: this.amount(t.value)\n        }\n      }\n    );\n    key = this.TYPE_ERC20_APPROVE;\n    this.transactionTypes[key] = 'ERC20 APPROVE';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return '<b>ERC20 APPROVE</b> $from $to $spender $value'\n      },\n      (t) => {\n        return {\n          from: this.account(t.from),\n          to: this.account(t.to),\n          spender: this.account(t.abi.decodedData.params[0].value),\n          value: this.amount(t.abi.decodedData.params[1].value)\n        }\n      }\n    );\n    key = this.TYPE_ERC20_ALLOWANCE;\n    this.transactionTypes[key] = 'ERC20 ALLOWANCE';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return '<b>ERC20 ALLOWANCE</b> '\n      },\n      (t) => {\n        return {\n        }\n      }\n    );\n    key = this.TYPE_ERC20_TRANSFER\n    this.transactionTypes[key] = 'ERC20 TRANSFER';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>ERC20 TRANSFER</b> Send $value $token from $from to $to\";\n      },\n      (t) => {\n        return {\n          token: this.token(t.to),\n          from: this.account(t.from),\n          to: this.account(t.abi.decodedData.params[0].value),\n          value: this.amount(t.abi.decodedData.params[1].value, this.ethplorer.tokenInfoCache[t.to])\n        }\n      }\n    );\n    key = this.TYPE_ERC20_TRANSFER_FROM\n    this.transactionTypes[key] = 'ERC20 TRANSFER FROM';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>ERC20 TRANSFER FROM</b> $asset from $sender to $recipient amount $amount\";\n      },\n      (t) => {\n        return {\n          asset: this.token(t.to),\n          sender: this.account(t.abi.decodedData.params[0].value),\n          recipient: this.account(t.abi.decodedData.params[1].value),\n          amount: this.amount(t.abi.decodedData.params[2].value, this.ethplorer.tokenInfoCache[t.to])\n        }\n      }\n    );\n    key = this.TYPE_ETHERDELTA_DEPOSIT_TOKEN\n    this.transactionTypes[key] = 'DELTA DEPOSIT';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>DELTA DEPOSIT</b> Deposit $amount $token\";\n      },\n      (t) => {\n        return {\n          token: this.token(t.abi.decodedData.params[0].value),\n          amount: this.amount(t.abi.decodedData.params[1].value)\n        }\n      }\n    );\n    key = this.TYPE_ETHERDELTA_WITHDRAWAL\n    this.transactionTypes[key] = 'DELTA WITHDRAW';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>DELTA WITHDRAW</b> Withdraw $amount\";\n      },\n      (t) => {\n        return {\n          amount: this.amount(t.abi.decodedData.params[0].value)\n        }\n      }\n    );\n    key = this.TYPE_ETHERDELTA_WITHDRAWAL_TOKEN\n    this.transactionTypes[key] = 'DELTA WITHDRAW TOKEN';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>DELTA WITHDRAW TOKEN</b> Withdraw $amount $token\";\n      },\n      (t) => {\n        return {\n          token: this.token(t.abi.decodedData.params[0].value),\n          amount: this.amount(t.abi.decodedData.params[1].value)\n        }\n      }\n    );\n    key = this.TYPE_ETHERDELTA_ORDER\n    this.transactionTypes[key] = 'DELTA ORDER';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>DELTA ORDER</b> Order get $amountGet $tokenGet pay $amountGive $tokenGive\";\n      },\n      (t) => {\n        return {\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\n          expires: t.abi.decodedData.params[4].value\n        }\n      }\n    );\n    key = this.TYPE_ETHERDELTA_TRADE\n    this.transactionTypes[key] = 'DELTA TRADE';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>DELTA TRADE</b> Trade get $amountGet $tokenGet pay $amountGive $tokenGive from $user amount $amount\";\n      },\n      (t) => {\n        return {\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\n          expires: t.abi.decodedData.params[4].value,\n          user: this.account(t.abi.decodedData.params[6].value),\n          amount: this.amount(t.abi.decodedData.params[10].value)\n        }\n      }\n    );\n    key = this.TYPE_ETHERDELTA_TRADE_BALANCES\n    this.transactionTypes[key] = 'DELTA TRADE BALANCES';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>DELTA TRADE BALANCES</b> Trade balances get $amountGet $tokenGet pay $amountGive $tokenGive from $user amount $amount\";\n      },\n      (t) => {\n        return {\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\n          user: this.account(t.abi.decodedData.params[4].value),\n          amount: this.amount(t.abi.decodedData.params[5].value)\n        }\n      }\n    );\n    key = this.TYPE_ETHERDELTA_CANCEL_ORDER\n    this.transactionTypes[key] = 'DELTA CANCEL ORDER';\n    this.renderers[key] = new EthTransactionRenderHelper(\n      (t) => {\n        return \"<b>DELTA CANCEL ORDER</b> Trade get $amountGet $tokenGet pay $amountGive $tokenGive from $user amount $amount\";\n      },\n      (t) => {\n        return {\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\n          expires: t.abi.decodedData.params[4].value\n        }\n      }\n    );\n  }\n\n  renderTransactionType(transaction: EthplorerAddressTransactionExtended): string {\n    // let key = `${transaction.type}:${transaction.subtype}`;\n    // return this.transactionTypes[key] || key;\n    return 'txn type'\n  }\n\n  renderAmount(transaction: EthplorerAddressTransactionExtended): string|angular.IPromise<string> {\n    return this.amount(transaction.value)\n  }\n\n  /* Returns HTML */\n  renderedToFrom(transaction: EthplorerAddressTransactionExtended): string {\n    if (transaction.from == this.provider.account) {\n      return this.account(transaction.to);\n    }\n    return this.account(transaction.from);\n  }\n\n  // formatAmount(amount: string, symbol: string, neg: boolean): string {\n  //   let returns = this.amount(amount, 8, symbol);\n  //   return (neg?'-':'+') + returns;\n  // }\n\n  isOutgoing(transaction: EthplorerAddressTransactionExtended): boolean {\n    return transaction.from == this.provider.account;\n  }\n\n  renderInfo(transaction: EthplorerAddressTransactionExtended) {\n    let key = this.TYPE_ETHEREUM_TRANSFER\n    if (transaction.abi && transaction.abi.decodedData) {\n      key = transaction.abi.decodedData.name\n    }\n    var renderer = this.renderers[key];\n    if (renderer)\n      return renderer.render(transaction);\n    return `not supported ${key}`;\n  }\n\n  account(account: string): string {\n    if (account == this.provider.account) {\n      return `<a target=\"_blank\" href=\"https://ethplorer.io/address/${account}\">Myself</a>`;\n    }\n    return `<a target=\"_blank\" href=\"https://ethplorer.io/address/${account}\">${account}</a>`;\n  }\n\n  token(address: string) {\n    let tokenInfo = this.ethplorer.tokenInfoCache[address]\n    if (tokenInfo) {\n      return `<a target=\"_blank\" href=\"https://ethplorer.io/address/${address}\">${tokenInfo.symbol}</a>`;\n    }\n    return `<a target=\"_blank\" href=\"https://ethplorer.io/address/${address}\">${address}</a>`;\n  }\n\n  amount(amount: string, tokenInfo?: EthplorerTokenInfo) {\n    let str;\n    amount = (amount+\"\") || \"0\"\n    if (tokenInfo) {\n      str = utils.formatQNT(amount, tokenInfo.decimals) + ' ' + tokenInfo.symbol\n    }\n    else {\n      str = utils.commaFormat(amount).replace(/(\\.\\d*?[1-9])0+$/g, \"$1\" ) + ' ETH'\n    }\n    return `<span>${str}</span>`;\n  }\n}\n","///<reference path='VirtualRepeatComponent.ts'/>\n\n@Component({\n  selector: 'virtualRepeatFimkTransactions',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n\n          <!-- TX ID  -->\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\n\n          <!-- FROM -->\n          <div class=\"truncate-col info-col left\">FROM</div>\n\n          <!-- TO -->\n          <div class=\"truncate-col info-col left\">TO</div>\n\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col\">Amount</div>\n\n          <!-- MESSAGE -->\n          <div class=\"truncate-col message-col left\">Message</div>\n\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\n\n            <!-- TX ID -->\n            <div class=\"truncate-col tx-col left\" >\n              <span>{{item.txid}}</span>\n            </div>\n\n            <!-- FROM -->\n            <div class=\"truncate-col info-col left\">\n             <span>{{item.from}}</span>\n            </div>\n\n            <!-- TO -->\n            <div class=\"truncate-col info-col left\">\n              <span>{{item.to}}</span>\n            </div>\n\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col\">\n              <span>{{item.amount}}</span>\n            </div>\n\n            <!-- MESSAGE -->\n            <div class=\"truncate-col message-col left\">\n              <span>{{item.message}}</span>\n            </div>\n\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope', '$q', 'fimkTransactionsProviderFactory', 'settings', 'fimkPendingTransactions', 'user')\nclass VirtualRepeatFIMKTransactionsComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n\n  constructor(protected $scope: angular.IScope,\n    protected $q: angular.IQService,\n    private fimkTransactionsProviderFactory: FimkTransactionsProviderFactory,\n    private settings: SettingsService,\n    private fimkPendingTransactions: FimkPendingTransactionsService,\n    private user: UserService) {\n    super($scope, $q);\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    let secretPhrase = this.user.currency.secretPhrase;\n    this.initializeVirtualRepeat(\n      this.fimkTransactionsProviderFactory.createProvider(this.account),\n      /* decorator function */\n      (transaction: any) => {\n        transaction.amount = transaction.amountNQT / 100000000;\n        let date = utils.timestampToDate(transaction.timestamp);\n        transaction.dateTime = dateFormat(date, format);\n        transaction.from = transaction.senderRS;\n        transaction.to = transaction.recipientRS;\n        transaction.txid = transaction.transaction;\n        transaction.message = ''\n        if (transaction.attachment.senderPublicKey) {\n          if(transaction.attachment.senderPublicKey !== this.user.publicKey)\n            transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, transaction.attachment.senderPublicKey, secretPhrase)\n          else {\n            try {\n              transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, transaction.attachment.recipientPublicKey, secretPhrase)\n            } catch(e) {\n              transaction.message = ''\n            }\n          }\n        }\n        transaction.json = {\n          txid: transaction.transaction,\n          time: transaction.dateTime,\n          from: transaction.from,\n          to: transaction.to,\n          amount: transaction.amount,\n          block: transaction.height,\n          confirmations: transaction.confirmations,\n          fee: transaction.feeNQT / 100000000,\n          message: transaction.message\n        }\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    let timeout = setTimeout(refresh, 10 * 1000)\n\n    let listener = this.determineLength.bind(this)\n    this.PAGE_SIZE = 15;\n    fimkPendingTransactions.addListener(listener)\n\n    $scope.$on('$destroy', () => {\n      fimkPendingTransactions.removeListener(listener)\n      clearTimeout(timeout)\n    })\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\n  }\n\n\n  onSelect(selectedTransaction) { }\n}\n","///<reference path='VirtualRepeatComponent.ts'/>\n\n@Component({\n  selector: 'virtualRepeatIotaTransactions',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n\n          <!-- BUNDLE ID  -->\n          <div class=\"truncate-col bundle-col left\">Bundle ID</div>\n\n          <!-- FROM -->\n          <div class=\"truncate-col bundle-col left\">FROM</div>\n\n          <!-- TO -->\n          <div class=\"truncate-col bundle-col left\">TO</div>\n\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col\">Amount</div>\n\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\n\n            <!-- Bundle ID -->\n            <div class=\"truncate-col bundle-col left\" >\n              <span>\n                <a target=\"_blank\" href=\"https://thetangle.org/transaction/{{item.bundleId}}\">{{item.displayBundleAddress}}</a>\n              </span>\n            </div>\n\n            <!-- FROM -->\n            <div class=\"truncate-col bundle-col left\">\n             <span>{{item.displayFromAddress}}</span>\n            </div>\n\n            <!-- TO -->\n            <div class=\"truncate-col bundle-col left\">\n              <span>{{item.displayToAddress}}</span>\n            </div>\n\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col\">\n              <span>{{item.amount}}</span>\n            </div>\n\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope', '$q', 'iotaTransactionsProviderFactory', 'settings', 'iotaPendingTransactions', 'user', 'iotaBlockExplorerService')\nclass VirtualRepeatIotaTransactionsComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n\n  constructor(protected $scope: angular.IScope,\n    protected $q: angular.IQService,\n    private iotaTransactionsProviderFactory: IotaTransactionsProviderFactory,\n    private settings: SettingsService,\n    private iotaPendingTransactions: IotaPendingTransactionsService,\n    private user: UserService,\n    private iotaBlockExplorerService: IotaBlockExplorerService) {\n\n    super($scope, $q);\n    let myAddresses\n    this.iotaBlockExplorerService.getAccountInfo(this.user.currency.secretPhrase).then(accountInfo => {\n      myAddresses = accountInfo.addresses;\n    })\n\n    this.initializeVirtualRepeat(\n      this.iotaTransactionsProviderFactory.createProvider(this.user.currency.secretPhrase),\n      /* decorator function */\n      (bundle: any) => {\n        bundle.dateTime = dateFormat(new Date(bundle[0].timestamp * 1000), this.settings.get(SettingsService.DATEFORMAT_DEFAULT));\n        bundle.bundleId = bundle[0].hash;\n        let isOutgoingTx = false;\n        bundle.forEach(tx => {\n          myAddresses.forEach(address => {\n            if(address === tx.address && tx.value < 0) {\n              bundle.from = tx.address;\n              isOutgoingTx = true;\n            } else if(tx.value < 0){\n              bundle.from = tx.address\n            }\n          })\n          if(!bundle.to && tx.value > 0){\n            bundle.to = tx.address;\n            bundle.amount = tx.value;\n          }\n        });\n\n        bundle.amount = isOutgoingTx? Math.abs(bundle.amount) * -1 : bundle.amount\n        bundle.displayFromAddress = bundle.from.substring(0, 42).concat('...')\n        bundle.displayToAddress = bundle.to.substring(0, 42).concat('...')\n        bundle.displayBundleAddress = bundle.bundleId.substring(0, 42).concat('...')\n\n\n        bundle.json = {\n          bundle: bundle.bundleId,\n          time: bundle.dateTime,\n          from: bundle.from,\n          to: bundle.to,\n          amount: bundle.amount,\n        }\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    let timeout = setTimeout(refresh, 10 * 1000)\n\n    let listener = this.determineLength.bind(this)\n    iotaPendingTransactions.addListener(listener)\n\n    $scope.$on('$destroy', () => {\n      iotaPendingTransactions.removeListener(listener)\n      clearTimeout(timeout)\n    })\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\n  }\n\n\n  onSelect(selectedTransaction) { }\n}\n","///<reference path='VirtualRepeatComponent.ts'/>\n\n@Component({\n  selector: 'virtualRepeatNxtTransactions',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n\n          <!-- TX ID  -->\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\n\n          <!-- FROM -->\n          <div class=\"truncate-col info-col left\">FROM</div>\n\n          <!-- TO -->\n          <div class=\"truncate-col info-col left\">TO</div>\n\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col\">Amount</div>\n\n          <!-- MESSAGE -->\n          <div class=\"truncate-col message-col left\">Message</div>\n\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\n\n            <!-- TX ID -->\n            <div class=\"truncate-col tx-col left\" >\n              <span>{{item.txid}}</span>\n            </div>\n\n            <!-- FROM -->\n            <div class=\"truncate-col info-col left\">\n             <span>{{item.from}}</span>\n            </div>\n\n            <!-- TO -->\n            <div class=\"truncate-col info-col left\">\n              <span>{{item.to}}</span>\n            </div>\n\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col\">\n              <span>{{item.amount}}</span>\n            </div>\n\n            <!-- MESSAGE -->\n            <div class=\"truncate-col message-col left\">\n              <span>{{item.message}}</span>\n            </div>\n\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope', '$q', 'nxtTransactionsProviderFactory', 'settings', 'nxtPendingTransactions', 'user', 'nxtBlockExplorerService')\nclass VirtualRepeatNxtTransactionsComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService,\n              private nxtTransactionsProviderFactory: NxtTransactionsProviderFactory,\n              private settings: SettingsService,\n              private nxtPendingTransactions: NxtPendingTransactionsService,\n              private user: UserService,\n              private nxtBlockExplorerService: NxtBlockExplorerService) {\n\n    super($scope, $q);\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    let secretPhrase = this.user.currency.secretPhrase;\n    this.initializeVirtualRepeat(\n      this.nxtTransactionsProviderFactory.createProvider(this.account),\n      /* decorator function */\n      (transaction: any) => {\n        transaction.amount = transaction.amountNQT/100000000;\n        let date = utils.timestampToDate(transaction.timestamp);\n        transaction.dateTime = dateFormat(date, format);\n        transaction.from = transaction.senderRS;\n        transaction.to = transaction.recipientRS;\n        transaction.txid = transaction.transaction;\n        transaction.message = ''\n        if (transaction.attachment.encryptedMessage) {\n          if(transaction.senderPublicKey !== this.user.publicKey)\n            transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, transaction.senderPublicKey, secretPhrase)\n          else {\n            try {\n              let recipientPublicKey;\n              this.nxtBlockExplorerService.getPublicKeyFromAddress(transaction.recipientRS).then(_publicKey => {\n                recipientPublicKey = _publicKey\n                transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, recipientPublicKey, secretPhrase)\n                transaction.json.message = transaction.message\n              })\n            } catch(e) {\n              transaction.message = ''\n            }\n          }\n        }\n        transaction.json = {\n          txid: transaction.transaction,\n          time: transaction.dateTime,\n          from: transaction.from,\n          to: transaction.to,\n          amount: transaction.amount,\n          block: transaction.height,\n          confirmations: transaction.confirmations,\n          fee: transaction.feeNQT/100000000\n        }\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    let timeout = setTimeout(refresh, 10 * 1000)\n\n    let listener = this.determineLength.bind(this)\n    this.PAGE_SIZE = 10;\n    nxtPendingTransactions.addListener(listener)\n\n    $scope.$on('$destroy', () => {\n      nxtPendingTransactions.removeListener(listener)\n      clearTimeout(timeout)\n    })\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\n  }\n\n\n  onSelect(selectedTransaction) { }\n}\n","///<reference path='VirtualRepeatComponent.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'virtualRepeatTrades',\n  inputs: ['account', 'block', 'personalize', 'hideLabel'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n\n          <!-- MARKET -->\n          <div class=\"truncate-col market-col left\">Market</div>\n\n          <!-- TYPE -->\n          <div class=\"truncate-col type-col left\" flex>Type</div>\n\n          <!-- PRICE -->\n          <div class=\"truncate-col price-col left\">Price</div>\n\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col left\">Amount</div>\n\n          <!-- BUYER/ SELLER -->\n          <div class=\"truncate-col buyerseller-col left\">Buyer/ Seller</div>\n\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\n\n            <!-- MARKET -->\n            <div class=\"truncate-col market-col left\">{{item.market}}</div>\n\n            <!-- TYPE -->\n            <div class=\"truncate-col type-col left\" flex>{{item.type}}</div>\n\n            <!-- PRICE -->\n            <div class=\"truncate-col price-col left\">{{item.price}}</div>\n\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col left\">{{item.amount}}</div>\n\n            <!-- BUYER/ SELLER -->\n            <div class=\"truncate-col buyerseller-col left\">\n              <a href=\"#/explorer-account/{{item.buyerseller}}/trades\">{{item.buyersellerName}} </a>\n            </div>\n\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope', '$q', 'heat', 'explorerTradesProviderFactory', 'settings', 'assetInfo')\nclass VirtualRepeatTradesComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n  block: string; // @input\n  personalize: boolean; // @input\n\n  constructor(protected $scope: angular.IScope,\n    protected $q: angular.IQService,\n    private heat: HeatService,\n    private explorerTradesProviderFactory: ExplorerTradesProviderFactory,\n    private settings: SettingsService,\n    private assetInfo: AssetInfoService) {\n    super($scope, $q);\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    this.initializeVirtualRepeat(\n      this.explorerTradesProviderFactory.createProvider(this.account),\n      /* decorator function */\n      (trade: any | IHeatTrade) => {\n        let date = utils.timestampToDate(trade.timestamp);\n        trade.time = dateFormat(date, format);\n        let currecy = this.asset(trade.currency);\n        let asset = this.asset(trade.asset);\n        let decimals = currecy.decimals;\n        trade.market = `${currecy.symbol}/${asset.symbol}`;\n        trade.type = trade.buyer === this.account? 'Buy': 'Sell';\n        trade.price = (trade.price / (Math.pow(10, decimals))).toFixed(decimals);\n        trade.amount = (trade.quantity / (Math.pow(10, decimals))).toFixed(decimals);\n        trade.buyersellerName = trade.type === 'Buy' ? trade.sellerName : trade.buyerName;\n        trade.buyerseller = trade.type === 'Buy' ? trade.seller : trade.buyer;\n      });\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    if (angular.isUndefined(this.account)) {\n      heat.subscriber.blockPopped({}, refresh, $scope);\n      heat.subscriber.blockPushed({}, refresh, $scope);\n    }\n  }\n\n  asset(asset: string) {\n    if (this.assetInfo.cache[asset] && this.assetInfo.cache[asset].symbol)\n      return this.assetInfo.cache[asset];\n    else\n      this.assetInfo.getInfo(asset);\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Trade: ' + item.askOrder);\n  }\n\n  onSelect(selectedTrade) { }\n}","///<reference path='VirtualRepeatComponent.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'virtualRepeatTransactions',\n  inputs: ['account','block','personalize','transactionObject','hideLabel'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n          <!-- HEIGHT -->\n          <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">Height</div>\n\n          <!-- ID -->\n          <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">Id</div>\n\n          <!-- DATE -->\n          <div class=\"truncate-col date-col left\">Time</div>\n\n          <!-- INOUT -->\n          <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">In/Out</div>\n\n          <!-- TRANSACTION -->\n          <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">Transaction</div>\n\n          <!-- AMOUNT -->\n          <div class=\"truncate-col amount-col left\" ng-if=\"vm.personalize\">Amount</div>\n\n          <!-- TOFROM -->\n          <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">To/From</div>\n\n          <!-- INFO -->\n          <div class=\"truncate-col info-col left\" flex>Info</div>\n\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\n\n            <!-- HEIGHT -->\n            <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">\n              <elipses-loading ng-show=\"item.height==2147483647\"></elipses-loading>\n              <span ng-show=\"item.height!=2147483647\">{{item.height}}</span>\n            </div>\n\n            <!-- ID -->\n            <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">\n              {{item.transaction}}\n            </div>\n\n            <!-- DATE -->\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\n\n            <!-- INOUT -->\n            <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">\n              <md-icon md-font-library=\"material-icons\" ng-class=\"{outgoing: item.outgoing, incoming: !item.outgoing}\">\n                {{item.outgoing ? 'keyboard_arrow_up': 'keyboard_arrow_down'}}\n              </md-icon>\n            </div>\n\n            <!-- TRANSACTION -->\n            <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">\n              <span ng-bind-html=\"item.renderedTransactionType\"></span>\n            </div>\n\n            <!-- AMOUNT -->\n            <div class=\"truncate-col amount-col left\" ng-if=\"vm.personalize\">\n              <span ng-bind-html=\"item.renderedAmount\"></span>\n            </div>\n\n            <!-- TOFROM -->\n            <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">\n              <span ng-bind-html=\"item.renderedToFrom\"></span>\n            </div>\n\n            <!-- INFO -->\n            <div class=\"truncate-col info-col left\" flex>\n              <span ng-bind-html=\"item.renderedInfo\"></span>\n              <span class=\"virtual-repeat-transactions-message\" ng-if=\"item.messageText\">\n                <md-button ng-click=\"vm.showPopup(item.messageText)\" class=\"md-icon-button\" md-no-ink>\n                  <md-icon md-font-library=\"material-icons\">message</md-icon>\n                </md-button>\n                <code>{{item.messagePreview}}</code>\n              </span>\n            </div>\n\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n\n@Inject('$scope','$q','heat','transactionsProviderFactory','settings','user','render','$mdPanel','controlCharRender')\nclass VirtualRepeatTransactionsComponent extends VirtualRepeatComponent {\n\n  account: string; // @input\n  block: string; // @input\n  personalize: boolean; // @input\n  transactionObject: IHeatTransaction; // @input\n\n  renderer: TransactionRenderer = new TransactionRenderer(this);\n\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService,\n              private heat: HeatService,\n              private transactionsProviderFactory: TransactionsProviderFactory,\n              private settings: SettingsService,\n              private user: UserService,\n              private render: RenderService,\n              private $mdPanel: angular.material.IPanelService,\n              private controlCharRender: ControlCharRenderService) {\n    super($scope, $q);\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    this.initializeVirtualRepeat(\n      this.transactionsProviderFactory.createProvider(this.account, this.block, this.transactionObject),\n      /* decorator function */\n      (transaction: any|IHeatTransaction) => {\n        let date = utils.timestampToDate(transaction.timestamp);\n        transaction.time = dateFormat(date, format);\n        transaction.heightDisplay = transaction.height==2147483647?'*':transaction.height;\n        if (this.personalize) {\n          // order cancellations display as incoming\n          if (transaction.type == 2 && (transaction.subtype == 5 || transaction.subtype == 6)) {\n            transaction['outgoing'] = false;\n          }\n          else {\n            transaction['outgoing'] = this.user.account == transaction.sender;\n          }\n\n          transaction['renderedTransactionType'] = this.renderer.renderTransactionType(transaction);\n          let amountVal = this.renderer.renderAmount(transaction);\n          if (angular.isString(amountVal)) {\n            transaction['renderedAmount'] = amountVal;\n          }\n          else if (angular.isObject(amountVal)) {\n            amountVal.then(val=>{\n              transaction['renderedAmount'] = val;\n            });\n          }\n          transaction['renderedToFrom'] = this.renderer.renderedToFrom(transaction);\n        }\n\n        let renderedInfo = this.renderer.renderInfo(transaction);\n        if (angular.isString(renderedInfo)) {\n          transaction['renderedInfo'] = renderedInfo;\n        }\n        else if (angular.isObject(renderedInfo)) {\n          renderedInfo.then((text)=>{\n            transaction['renderedInfo'] = text;\n          })\n        }\n        transaction['messageText'] = this.heat.getHeatMessageContents(transaction);\n        if (angular.isString(transaction['messageText'])) {\n          let messagePreview = transaction['messageText'].substr(0, 50);\n          if (transaction['messageText'].length > 50) {\n            messagePreview += \" ...\";\n          }\n          transaction['messagePreview'] = messagePreview;\n        }\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    if (angular.isString(this.account)) {\n      heat.subscriber.unconfirmedTransaction({recipient:this.account}, refresh, $scope);\n      heat.subscriber.unconfirmedTransaction({sender:this.account}, refresh, $scope);\n    }\n    if (angular.isUndefined(this.block)&&angular.isUndefined(this.account)) {\n      heat.subscriber.unconfirmedTransaction({}, refresh, $scope);\n      heat.subscriber.blockPopped({}, refresh, $scope);\n      heat.subscriber.blockPushed({}, refresh, $scope);\n    }\n  }\n\n  showPopup(messageText: string) {\n    let renderedHTML = this.render.render(messageText, [this.controlCharRender]);\n    let position = this.$mdPanel.newPanelPosition().absolute().center();\n    let config :angular.material.IPanelConfig = {\n      attachTo: angular.element(document.body),\n      controller: function () {},\n      controllerAs: 'vm',\n      disableParentScroll: true,\n      template: `\n        <div class=\"virtual-repeat-transactions-message-contents\" ng-bind-html=\"vm.renderedHTML\"></div>\n      `,\n      hasBackdrop: true,\n      panelClass: 'demo-dialog-example',\n      position: position,\n      trapFocus: true,\n      zIndex: 150,\n      clickOutsideToClose: true,\n      escapeToClose: true,\n      focusOnOpen: true,\n      locals: {\n        renderedHTML: renderedHTML\n      }\n    };\n    this.$mdPanel.open(config);\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Transaction: '+item.transaction);\n  }\n\n  onSelect(selectedTransaction) {}\n}\n\ninterface TemplateFunction {\n  (transaction: IHeatTransaction):string;\n}\n\nclass TransactionRenderHelper {\n  private $q: angular.IQService;\n  constructor(private template: string|TemplateFunction,\n              private extractor: (transaction: IHeatTransaction)=>Object) {\n    this.$q = <angular.IQService> heat.$inject.get('$q');\n  }\n\n  private isPromise(val) {\n    return angular.isObject(val) && angular.isFunction(val['then']);\n  }\n\n  public render(transaction: IHeatTransaction): angular.IPromise<string>|string {\n    var parts = this.extractor(transaction);\n    var args: IStringHashMap<string> = {};\n    var promises = [];\n    angular.forEach(parts, (val,key) => {\n      if (this.isPromise(val)) {\n        promises.push(val);\n        val.then((promiseVal)=>{\n          args[key]=promiseVal;\n        });\n      }\n      else {\n        args[key]=val;\n      }\n    });\n    let template = angular.isFunction(this.template) ? (<(x)=>string>this.template).call(null, transaction) : this.template;\n    let text = (' ' + template).slice(1);\n    if (promises.length>0) {\n      var deferred = this.$q.defer<string>();\n      this.$q.all(promises).then(()=>{\n        angular.forEach(args, (val,key) => {\n          text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\n        });\n        deferred.resolve(text);\n      });\n      return deferred.promise;\n    }\n    angular.forEach(args, (val,key) => {\n      text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\n    })\n    return text;\n  }\n}\n\nclass TransactionRenderer {\n\n  private TYPE_PAYMENT = 0;\n  private TYPE_MESSAGING = 1;\n  private TYPE_COLORED_COINS = 2;\n  private TYPE_ACCOUNT_CONTROL = 4;\n  private SUBTYPE_PAYMENT_ORDINARY_PAYMENT = 0;\n  private SUBTYPE_MESSAGING_ARBITRARY_MESSAGE = 0;\n  private SUBTYPE_COLORED_COINS_ASSET_ISSUANCE = 0;\n  private SUBTYPE_COLORED_COINS_ASSET_ISSUE_MORE = 1;\n  private SUBTYPE_COLORED_COINS_ASSET_TRANSFER = 2;\n  private SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT = 3;\n  private SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT = 4;\n  private SUBTYPE_COLORED_COINS_ASK_ORDER_CANCELLATION = 5;\n  private SUBTYPE_COLORED_COINS_BID_ORDER_CANCELLATION = 6;\n  private SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_ADDITION = 7;\n  private SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_REMOVAL = 8;\n  private SUBTYPE_COLORED_COINS_WHITELIST_MARKET = 9;\n  private SUBTYPE_COLORED_COINS_ATOMIC_MULTI_TRANSFER = 10;\n  private SUBTYPE_ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING = 0;\n  private SUBTYPE_ACCOUNT_CONTROL_INTERNET_ADDRESS = 1;\n\n  private heat: HeatService;\n  private assetInfo: AssetInfoService;\n  private $q: angular.IQService;\n  private renderers: IStringHashMap<TransactionRenderHelper> = {};\n  private transactionTypes: IStringHashMap<string> = {};\n\n  constructor(private provider?: {account?: string, block?: string, personalize: boolean}) {\n    let key;\n    this.heat = <HeatService> heat.$inject.get('heat');\n    this.assetInfo = <AssetInfoService> heat.$inject.get('assetInfo');\n    this.$q = <angular.IQService> heat.$inject.get('$q');\n    key = this.TYPE_PAYMENT+\":\"+this.SUBTYPE_PAYMENT_ORDINARY_PAYMENT;\n    this.transactionTypes[key] = 'TRANSFER HEAT';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ? '' : '<b>TRANSFER HEAT</b> From $sender to $recipient amount $amount'\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          amount: this.amount(t.amount, 8, \"HEAT\"),\n          recipient: this.account(t.recipient, t.recipientPublicName)\n        }\n      }\n    );\n    key = this.TYPE_MESSAGING+\":\"+this.SUBTYPE_MESSAGING_ARBITRARY_MESSAGE;\n    this.transactionTypes[key] = 'SEND MESSAGE';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ? '' : '<b>SEND MESSAGE</b> From $sender to $recipient'\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          recipient: this.account(t.recipient, t.recipientPublicName)\n        }\n      }\n    );\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASSET_ISSUANCE;\n    this.transactionTypes[key] = 'ISSUE ASSET';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ? 'Asset $asset' : \"<b>ISSUE ASSET</b> Issuer $sender asset $asset\";\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          asset: t.transaction\n        }\n      }\n    );\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASSET_TRANSFER;\n    this.transactionTypes[key] = 'TRANSFER ASSET';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ? '' : \"<b>TRANSFER ASSET</b> $asset from $sender to $recipient amount $amount\";\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          recipient: this.account(t.recipient, t.recipientPublicName),\n          asset: this.asset(t.attachment['asset']),\n          amount: this.amount(t.attachment['quantity'], 8),\n        }\n      }\n    );\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT;\n    this.transactionTypes[key] = 'SELL ORDER';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ?\n          '$currency/$asset amount $amount price $price' :\n          \"<b>SELL ORDER</b> $sender placed sell order $currency/$asset amount $amount price $price\";\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          currency: this.asset(t.attachment['currency']),\n          asset: this.asset(t.attachment['asset']),\n          amount: this.amount(t.attachment['quantity'], 8),\n          price: this.amount(t.attachment['price'], 8),\n        }\n      }\n    );\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT;\n    this.transactionTypes[key] = 'BUY ORDER';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ?\n          '$currency/$asset amount $amount price $price' :\n          \"<b>BUY ORDER</b> $sender placed buy order $currency/$asset amount $amount price $price\";\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          currency: this.asset(t.attachment['currency']),\n          asset: this.asset(t.attachment['asset']),\n          amount: this.amount(t.attachment['quantity'], 8),\n          price: this.amount(t.attachment['price'], 8),\n        }\n      }\n    );\n\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASK_ORDER_CANCELLATION;\n    this.transactionTypes[key] = 'CANCEL SELL';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ?\n          '$currency/$asset amount $amount price $price':\n          '<b>CANCEL SELL</b> $sender cancelled order $currency/$asset amount $amount price $price';\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          order: t.attachment['order'],\n          currency: this.asset(t['cancelledAskCurrency']),\n          asset: this.asset(t['cancelledAskAsset']),\n          amount: this.amount(t['cancelledAskQuantity'], 8),\n          price: this.amount(t['cancelledAskPrice'], 8)\n        }\n      }\n    );\n\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_BID_ORDER_CANCELLATION;\n    this.transactionTypes[key] = 'CANCEL BUY';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ?\n          '$currency/$asset amount $amount price $price':\n          '<b>CANCEL BUY</b> $sender cancelled order $currency/$asset amount $amount price $price';\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          order: t.attachment['order'],\n          currency: this.asset(t['cancelledBidCurrency']),\n          asset: this.asset(t['cancelledBidAsset']),\n          amount: this.amount(t['cancelledBidQuantity'], 8),\n          price: this.amount(t['cancelledBidPrice'], 8)\n        }\n      }\n    );\n\n    key = this.TYPE_COLORED_COINS + \":\" + this.SUBTYPE_COLORED_COINS_ATOMIC_MULTI_TRANSFER;\n    this.transactionTypes[key] = 'MULTI TRANSFER';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ? '' : '<b>MULTI TRANSFER</b> From $sender'\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName)\n        }\n      }\n    );\n\n    key = this.TYPE_ACCOUNT_CONTROL+\":\"+this.SUBTYPE_ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING;\n    this.transactionTypes[key] = 'BALANCE LEASE';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize ? 'Lease balance for $period blocks':\"<b>BALANCE LEASE</b> From $sender to $recipient for $period blocks\";\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          recipient: this.account(t.recipient, t.recipientPublicName),\n          period: utils.commaFormat(t.attachment['period'].toString())\n        }\n      }\n    );\n\n    key = this.TYPE_ACCOUNT_CONTROL + \":\" + this.SUBTYPE_ACCOUNT_CONTROL_INTERNET_ADDRESS;\n    this.transactionTypes[key] = 'INTERNET ADDRESS';\n    this.renderers[key] = new TransactionRenderHelper(\n      (t) => {\n        return provider.personalize\n          ? 'internet address $a'\n          : '<b>REGISTER INTERNET ADDRESS</b> $sender registered internet address \"$a\"'\n      },\n      (t) => {\n        return {\n          sender: this.account(t.sender, t.senderPublicName),\n          a: t.attachment['internetAddress']\n        }\n      }\n    );\n  }\n\n  renderTransactionType(transaction: IHeatTransaction): string {\n    let key = `${transaction.type}:${transaction.subtype}`;\n    return this.transactionTypes[key] || key;\n  }\n\n  renderAmount(transaction: IHeatTransaction): string|angular.IPromise<string> {\n    if (transaction.type == this.TYPE_PAYMENT && transaction.subtype == this.SUBTYPE_PAYMENT_ORDINARY_PAYMENT) {\n      let amount:string = transaction.amount;\n      let symbol:string = 'HEAT';\n      let neg:boolean = transaction.sender == this.provider.account;\n      return this.formatAmount(amount, symbol, neg);\n    }\n    if (transaction.type == this.TYPE_COLORED_COINS) {\n      let amount: string = null;\n      let neg: boolean = null;\n      let currency: string = null;\n      switch (transaction.subtype) {\n        case this.SUBTYPE_COLORED_COINS_ASSET_ISSUANCE:\n        case this.SUBTYPE_COLORED_COINS_ASSET_ISSUE_MORE: {\n          amount = transaction.attachment['quantity'];\n          currency = transaction.transaction;\n          break;\n        }\n        case this.SUBTYPE_COLORED_COINS_ASSET_TRANSFER: {\n          amount = transaction.attachment['quantity'];\n          neg = transaction.sender == this.provider.account;\n          currency = transaction.attachment['asset'];\n          break;\n        }\n        case this.SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT: {\n          amount = transaction.attachment['quantity'];\n          currency = transaction.attachment['asset'];\n          neg = true;\n          break;\n        }\n        case this.SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT: {\n          amount = utils.calculateTotalOrderPriceQNT(transaction.attachment['quantity'], transaction.attachment['price']);\n          currency = transaction.attachment['currency'];\n          neg = true;\n          break;\n        }\n      }\n      if (angular.isString(amount)) {\n        if (angular.isDefined(this.assetInfo.cache[currency])) {\n          let symbol = this.assetInfo.cache[currency].symbol;\n          if (angular.isString(symbol)) {\n            return this.formatAmount(amount, symbol, neg);\n          }\n        }\n        let deferred = this.$q.defer<string>();\n        this.assetInfo.getInfo(currency).then(info=>{\n          deferred.resolve(this.formatAmount(amount, info.symbol, neg))\n        }, deferred.reject);\n        return deferred.promise;\n      }\n    }\n  }\n\n  /* Returns HTML */\n  renderedToFrom(transaction: IHeatTransaction): string {\n    if (transaction.sender == this.provider.account) {\n      return this.account(transaction.recipient, transaction.recipientPublicName);\n    }\n    return this.account(transaction.sender, transaction.senderPublicName);\n  }\n\n  formatAmount(amount: string, symbol: string, neg: boolean): string {\n    let returns = this.amount(amount, 8, symbol);\n    return (neg?'-':'+') + returns;\n  }\n\n  isOutgoing(transaction: IHeatTransaction): boolean {\n    return transaction.sender == this.provider.account;\n  }\n\n  renderInfo(transaction: IHeatTransaction) {\n    var renderer = this.renderers[transaction.type+\":\"+transaction.subtype];\n    if (renderer)\n      return renderer.render(transaction);\n    return `not supported type=${transaction.type} subtype=${transaction.subtype}`;\n  }\n\n  account(account: string, publicName: string): string {\n    return account == '0' ? '' : `<a href=\"#/explorer-account/${account}/transactions\">${publicName||account}</a>`;\n  }\n\n  amount(amountHQT: string, decimals: number, symbol?: string) {\n    return `<span>${utils.formatQNT(amountHQT||\"0\", decimals)} ${symbol||\"\"}</span>`;\n  }\n\n  asset(asset:string) {\n    if (asset==\"5592059897546023466\")\n      return \"<b>BTC</b>\"\n    if (asset==\"0\")\n      return \"<b>HEAT</b>\";\n    if (this.assetInfo.cache[asset] && this.assetInfo.cache[asset].symbol)\n      return this.assetInfo.cache[asset].symbol;\n    else\n      this.assetInfo.getInfo(asset);\n    return asset;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n  export function about($event) {\n    var settings = <SettingsService> heat.$inject.get('settings');\n    dialogs.dialog({\n      id: 'about',\n      title: 'About',\n      targetEvent: $event,\n      template: `\n        <p>{{vm.applicationName}} {{vm.applicationVersion}}<br>Build: {{vm.applicationBuild}}</p>\n        <p>Embedded HEAT server {{vm.heatServerVersion}}</p>\n        <p><a href=\"#\" ng-click=\"vm.goTo('main')\">Go to MAIN NET</a></p>\n        <p><a href=\"#\" ng-click=\"vm.goTo('test')\">Go to TEST NET</a></p>\n        <p><a href=\"#\" ng-click=\"vm.goTo('beta')\">Go to BETA NET</a></p>\n        <br>\n        <p>Ethereum API <u>Powered by <a href=\"https://ethplorer.io\">Ethplorer.io</a></u></p>\n        <!--\n        <p><button onclick=\"gtag_report_conversion_signup(undefined)\">Signup Test</button></p>\n        <p><button onclick=\"gtag_report_conversion_bid(undefined, Date.now()+'')\">Bid Test</button></p>\n        <p><button onclick=\"gtag_report_conversion_signup_SECURE(undefined)\">Signup Test [SECURE]</button></p>\n        <p><button onclick=\"gtag_report_conversion_bid_SECURE(undefined, Date.now()+'')\">Bid Test [SECURE]</button></p>\n        -->\n\n      `,\n      locals: {\n        applicationName: settings.get(SettingsService.APPLICATION_NAME),\n        applicationVersion: settings.get(SettingsService.APPLICATION_VERSION),\n        applicationBuild: settings.get(SettingsService.APPLICATION_BUILD),\n        heatServerVersion: SettingsService.EMBEDDED_HEATLEDGER_VERSION,\n        isTestnet: window.localStorage.getItem('testnet')=='true',\n        goTo: (net) => {\n          // defaults to main net\n          window.localStorage.setItem('testnet','false');\n          window.localStorage.setItem('betanet','false');\n          if (net == 'test') {\n            window.localStorage.setItem('testnet','true');\n          }\n          else if (net == 'beta') {\n            window.localStorage.setItem('betanet','true');\n          }\n          window.location.reload();\n        }\n      }\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n  export function assetInfo($event, info: AssetInfo) {\n    let assetInfoService = <AssetInfoService> heat.$inject.get('assetInfo');\n    let unsafeWarning = `This asset is operated by a third party.\nHeat Ledger has no control over the asset and does not provide support for it.\nIt's possible the asset does NOT represent what you think it does.\nPlease ensure from asset issuer that the asset is valid before purchasing it, as there may be no refunds or redemptions available.\nAsset purchases are non-refundable.`;\n\n\n\n    assetInfoService.getAssetDescription(info).then((description)=>{\n      dialogs.dialog({\n        id: 'assetInfo',\n        title: 'Asset Info',\n        targetEvent: $event,\n        cancelButton: false,\n        locals: {\n          description: description,\n          info: info,\n          unsafeWarning: unsafeWarning\n        },\n        template: `\n          <div layout=\"column\">\n            <span ng-if=\"!vm.info.certified\">{{vm.unsafeWarning}}<br><br></span>\n            <span><b>{{vm.info.symbol}}</b> {{vm.info.name}}</span>\n            <pre>{{vm.description}}</pre>\n          </div>\n        `\n      })\n    });\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n  export function blockDetails($event, blockId) {\n\n    let $q = <angular.IQService> heat.$inject.get('$q');\n    let heatApi = <HeatService> heat.$inject.get('heat');\n    let deferred = $q.defer();\n\n    heatApi.api.getBlock(blockId, true).then((response) => {\n      let sumofamounts = new Big(\"0\");\n      response.transactions.forEach(function (transaction) {\n        sumofamounts = sumofamounts.add(new Big((<IHeatTransaction>transaction).amount));\n      });\n\n      dialogs.dialog({\n        id: 'blockDetails',\n        title: 'Block details',\n        targetEvent: $event,\n        cancelButton: false,\n        locals: {\n          blockId: blockId,\n          height: response.height,\n          baseTarget: response.baseTarget,\n          numberOfTransactions: response.numberOfTransactions,\n          generator: response.generator,\n          posRewardHQT: response.posRewardHQT,\n          popRewardHQT: response.popRewardHQT,\n          sumofamounts: utils.commaFormat(utils.formatQNT(sumofamounts.toString(),8))+' HEAT',\n          transactions: response.transactions,\n          showTransactionDetails: ($event, transaction) => {\n            dialogs.transactionDetails($event, transaction);\n          }\n        },\n        style: `\n         .dialog-block-details td {\n            padding: 8px;\n         }\n         .dialog-block-details ul {\n            list-style-type: none;\n            padding-left: 0px;\n            margin-left: 0px;\n         }\n         .dialog-block-details ul li {\n            padding-bottom: 5px;\n         }\n         .dialog-block-details .link-block {\n            cursor: pointer;\n            color: #3b5998;\n            text-decoration: underline;\n          }\n        `,\n        template: `\n           <div layout=\"column\" class=\"dialog-block-details\">\n             <table>\n               <tr><td>Block id</td><td>{{vm.blockId}}</td></tr>\n               <tr><td>Block height</td><td>{{vm.height}}</td></tr>\n               <tr><td>Base target</td><td>{{vm.baseTarget}}</td></tr>\n               <tr><td>Number of transactions</td><td>{{vm.numberOfTransactions}}</td></tr>\n               <tr><td>Generator</td><td>{{vm.generator}}</td></tr>\n               <tr><td>POS reward</td><td>{{vm.posRewardHQT}}</td></tr>\n               <tr><td>POP reward</td><td>{{vm.popRewardHQT}}</td></tr>\n               <tr><td>Total HEAT transferred</td><td>{{vm.sumofamounts}}</td></tr>\n               <tr ng-if=\"vm.transactions.length\"><td>Transactions</td>\n                <td>\n                  <ul>\n                    <li ng-repeat=\"trans in vm.transactions\" ng-click=\"vm.showTransactionDetails($event, trans)\" class=\"link-block\">{{trans.transaction}}</li>\n                  </ul>\n                </td>\n               </tr>\n             </table>\n           </div>\n         `\n      }).then(deferred.resolve, deferred.reject);\n    });\n    return deferred.promise;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nlet QRCode:any;\nmodule dialogs {\n  export function depositAsset($event, assetInfo: AssetInfo) {\n    var http = <HttpService> heat.$inject.get('http');\n    var user = <UserService> heat.$inject.get('user');\n    var $q = <angular.IQService> heat.$inject.get('$q');\n    var clipboard = <ClipboardService> heat.$inject.get('clipboard');\n    var localKeyStore = <LocalKeyStoreService> heat.$inject.get('localKeyStore');\n    var env = <EnvService> heat.$inject.get('env');\n\n    var account = user.account, publicKey = user.publicKey\n    if (user.currency.symbol != 'HEAT') {\n      account = localKeyStore.list()[0]\n      publicKey = 'xx-yy-zz'\n    }\n\n    var url = `https://heatwallet.com/getaddr.cgi?heataccount=${account}&publickey=${publicKey}&aid=${assetInfo.id}`;\n    var deferred = $q.defer();\n    http.get(url).then((response)=>{\n      var parsed = angular.isString(response) ? JSON.parse(response) : response;\n      dialogs.dialog({\n        id: 'depositAsset',\n        title: `Deposit ${assetInfo.symbol}`,\n        targetEvent: $event,\n        okButton: true,\n        style: `\n          .qrcodeBox {\n            margin:10px;\n          }\n        `,\n        template: `\n          <div>\n            <p>{{vm.symbol}} Deposit address <b id=\"deposit-dialog-btc-address-element\">{{vm.address}}</b>&nbsp;<a ng-click=\"vm.copyAddress()\">[copy]</a></p>\n            <p><div class=\"qrcodeBox\" id=\"depositeAddressQRCode\"></div></p>\n            <p></p>\n            <p>\n              <div ng-bind-html=\"vm.dialogue\"></div>\n            </p>\n          </div>\n        `,\n        locals: {\n          dialogue: parsed.deposit.dialogue,\n          isBtc: parsed.deposit.dialogue.includes('5592059897546023466'),\n          address:parsed.deposit.address,\n          shorQR: function() {\n            showQrCodeOnDialogLoad(parsed.deposit.address);\n          }(),\n          copyAddress: function () {\n            clipboard.copyWithUI(document.getElementById('deposit-dialog-btc-address-element'), 'Copied address to clipboard');\n          },\n          symbol: assetInfo.symbol\n        }\n      }).then(deferred.resolve, deferred.reject);\n    });\n    return deferred.promise;\n  }\n\n  function showQrCodeOnDialogLoad(data) {\n      setTimeout(() => {\n        new QRCode(\"depositeAddressQRCode\", {\n          text: data,\n          width: 128,\n          height: 128,\n          colorDark : \"#000000\",\n          colorLight : \"#ffffff\",\n          correctLevel : QRCode.CorrectLevel.H\n        });\n      }, 1000);\n  }\n}","module dialogs {\n\n  export function showEtherDepositDialog($event, address: string) {\n    var clipboard = <ClipboardService> heat.$inject.get('clipboard');\n    return dialogs.dialog({\n      id: 'showEtherDepositDialog',\n      title: \"Deposit Ether\",\n      targetEvent: $event,\n      cancelButton: false,\n      okButton: true,\n      locals: {\n        userEtherWalletAddress: address,\n        copyAddress: function () {\n          clipboard.copyWithUI(document.getElementById('deposit-dialog-eth-address-element'), 'Copied address to clipboard');\n        }\n      },\n      template: `\n        <div layout=\"column\" flex>\n          Deposit the desired amount of Ether(ETH) to your Ethereum Address\n          <b id=\"deposit-dialog-eth-address-element\"> {{vm.userEtherWalletAddress}} </b>&nbsp;\n          <a ng-click=\"vm.copyAddress()\">[copy]</a>&nbsp;\n        </div>\n      `\n    });\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface IDialogOptions {\n  id: string; /* Required dialog identifier for registering styles */\n  title?: string;\n  okButton?: boolean; /* calls okButtonClick on controller or $mdDialog.hide */\n  cancelButton?: boolean; /* calls cancelButtonClick on controller or $mdDialog.cancel */\n  controller?: Function | string; /* will have $mdDialog injected as property */\n  template: string,\n  targetEvent?: any;\n  locals?: any;\n  style?: string;\n}\n\ninterface IWizardOptions {\n  id: string; /* Required wizard identifier for registering styles */\n  title?: string;\n  controller?: Function | string; /* will have $mdDialog injected as property */\n  targetEvent?: any;\n  locals?: any;\n  style?: string;\n  cancelButton?: boolean; /* calls cancelButtonClick on controller or $mdDialog.cancel */\n  pages: Array<IWizardPage>;\n}\n\ninterface IWizardPage {\n  template: string;\n  title?: string;\n  show?(vm?: any, previousIndex?: number);\n  continueBtnLabel?: string;\n  okBtnLabel?: string;\n}\n\nheat.Loader.directive('autoFocus', function ($timeout) {\n  'use strict';\n  return {\n    restrict: 'A',\n    link: function (_scope, _element) {\n      $timeout(function () {\n        _element[0].focus();\n      }, 500);\n    }\n  };\n});\n\nmodule dialogs {\n  export function $mdDialog(): angular.material.IDialogService {\n    return <angular.material.IDialogService> heat.$inject.get('$mdDialog');\n  }\n\n  export function dialog(options: IDialogOptions): angular.IPromise<any> {\n    if (angular.isString(options.style)) {\n      var styleId = 'dialog-style-' + options.id;\n      if (!document.getElementById(styleId)) {\n        angular.element(document).find('head').append(`<style type=\"text/css\" id=\"${styleId}\">${options.style}</style>`);\n      }\n    }\n    return dialogs.$mdDialog().show(<angular.material.IDialogOptions>{\n      controller: options.controller || function () {},\n      locals: angular.extend({\n        isBetanet: heat.isBetanet,\n        title: options.title,\n        okButton: angular.isDefined(options.okButton) ? options.okButton : true,\n        cancelButton: options.cancelButton,\n        $mdDialog: dialogs.$mdDialog()\n      },options.locals||{}),\n      controllerAs: 'vm',\n      bindToController: true,\n      parent: angular.element(document.body),\n      targetEvent: options.targetEvent,\n      template: `\n      <md-dialog>\n        <md-toolbar ng-if=\"vm.isBetanet\" style=\"background-color: #bf112f !important\">\n          <div class=\"md-toolbar-tools\">\n            <h2>B E T A N E T</h2>\n          </div>\n        </md-toolbar>\n        <form name=\"dialogForm\">\n          <md-toolbar>\n            <div class=\"md-toolbar-tools\"><h2>{{vm.title}}</h2></div>\n          </md-toolbar>\n          <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n            <div flex layout=\"column\">\n              ${options.template}\n            </div>\n          </md-dialog-content>\n          <md-dialog-actions layout=\"row\">\n            <span flex></span>\n            <md-button ng-if=\"vm.cancelButton\" class=\"md-warn\" ng-click=\"vm.cancelButtonClick ? vm.cancelButtonClick() : vm.$mdDialog.cancel()\" aria-label=\"Cancel\">Cancel</md-button>\n            <md-button type=\"submit\" ng-disabled=\"dialogForm.$invalid\" ng-if=\"vm.okButton\" class=\"md-primary\"\n              ng-click=\"vm.okButtonClick ? vm.okButtonClick() : vm.$mdDialog.hide()\" aria-label=\"OK\">{{vm.okButtonLabel?vm.okButtonLabel:'OK'}}</md-button>\n          </md-dialog-actions>\n        </form>\n      </md-dialog>\n      `\n    });\n  }\n\n  export function wizard(options: IWizardOptions): angular.IPromise<any> {\n    if (angular.isString(options.style)) {\n      var styleId = 'wizard-style-' + options.id;\n      if (!document.getElementById(styleId)) {\n        angular.element(document).find('head').append(`<style type=\"text/css\" id=\"${styleId}\">${options.style}</style>`);\n      }\n    }\n    return dialogs.$mdDialog().show(<angular.material.IDialogOptions>{\n      controller: options.controller || function () {},\n      locals: angular.extend({\n        title: options.title,\n        cancelButton: options.cancelButton,\n        $mdDialog: dialogs.$mdDialog(),\n        pages: options.pages,\n        wizardIndex: 0,\n        goToNextPage: function () {\n          this.wizardIndex++;\n          if (angular.isFunction(this.pages[this.wizardIndex].show)) {\n            this.pages[this.wizardIndex].show(this, this.wizardIndex-1);\n          }\n        },\n        goToPreviousPage: function () {\n          this.wizardIndex--;\n          if (angular.isFunction(this.pages[this.wizardIndex].show)) {\n            this.pages[this.wizardIndex].show(this, this.wizardIndex+1);\n          }\n        }\n      },options.locals||{}),\n      controllerAs: 'vm',\n      bindToController: true,\n      parent: angular.element(document.body),\n      targetEvent: options.targetEvent,\n      template: `\n      <md-dialog>\n        <form name=\"dialogForm\">\n          <md-toolbar>\n            <div class=\"md-toolbar-tools\"><h2>{{vm.title}}<span ng-show=\"vm.pages[vm.wizardIndex].title\">{{vm.pages[vm.wizardIndex].title}}</span></h2></div>\n          </md-toolbar>\n          <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n            <div flex layout=\"column\">\n              ${\n                options.pages.map((page, index) =>\n                  `<div flex layout=\"column\" ng-if=\"vm.wizardIndex==${index}\">` +\n                    page.template +\n                  '</div>'\n                ).join('')\n              }\n            </div>\n          </md-dialog-content>\n          <md-dialog-actions layout=\"row\">\n            <md-button ng-show=\"!vm.hideCancelBtn\"\n                ng-click=\"vm.cancelButtonClick ? vm.cancelButtonClick() : vm.$mdDialog.cancel()\" aria-label=\"Cancel\">Cancel</md-button>\n            <span flex></span>\n            <md-button ng-click=\"vm.goToPreviousPage()\"\n                ng-show=\"vm.wizardIndex>0 && !vm.hideBackBtn\" aria-label=\"Back\">Back</md-button>\n            <md-button ng-disabled=\"dialogForm.$invalid\"\n                ng-show=\"vm.wizardIndex < (vm.pages.length-1)\"\n                ng-click=\"vm.goToNextPage()\" aria-label=\"Continue\">{{vm.pages[vm.wizardIndex].continueBtnLabel||'Continue'}}</md-button>\n            <md-button ng-disabled=\"dialogForm.$invalid\"\n                ng-show=\"vm.wizardIndex == (vm.pages.length-1) && !vm.hideOkBtn\"\n                ng-click=\"vm.okButtonClick ? vm.okButtonClick() : vm.$mdDialog.hide()\" aria-label=\"Ok\">{{vm.pages[vm.wizardIndex].okBtnLabel||'Ok'}}</md-button>\n          </md-dialog-actions>\n        </form>\n      </md-dialog>\n      `\n    });\n  }\n\n  export function confirm(title, content, mdDialog?: (mdDialog: angular.material.IDialogService) => void) {\n    if (mdDialog) {\n      mdDialog($mdDialog());\n    }\n    return dialogs.dialog({\n      id: 'confirmDialog',\n      title: title,\n      //targetEvent: $event,\n      okButton: true,\n      cancelButton: true,\n      locals: {\n        content: content\n      },\n      template: `\n        <!--<md-input-container flex>-->\n        <p ng-bind-html=\"vm.content\"></p>\n        <!--</md-input-container>-->\n      `\n    })\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n// ID,TIME,TYPE,ACCOUNT,ASSET,ASSET_SYMBOL,AMOUNT,AMOUNT_ASSET,PRICE,TOTAL,FEE,MESSAGE\ninterface HistoryEntry {\n  timestamp?: number;\n  ID?:string;\n  TIME?:string;\n  TYPE?:string;\n  ACCOUNT?:string;\n  AMOUNT?:string;\n  ASSET?:string;\n  ASSET_SYMBOL?:string;\n  //AMOUNT_ASSET?:string;\n  PRICE?:string;\n  TOTAL?:string;\n  FEE?:string;\n  MESSAGE?:string;\n}\n\nmodule dialogs {\n\n  export function download($event, account) {\n\n    let $q = <angular.IQService> heat.$inject.get('$q');\n    let heatApi = <HeatService> heat.$inject.get('heat');\n    let $timeout = <angular.ITimeoutService> heat.$inject.get('$timeout');\n    let $rootScope = heat.$inject.get('$rootScope');\n    let settings = <SettingsService> heat.$inject.get('settings')\n    let assetInfo = <AssetInfoService> heat.$inject.get('assetInfo')\n    let format = settings.get(SettingsService.DATEFORMAT_DEFAULT);\n\n    let locals = {\n      transactions: {\n        total: 0,\n        array: [],\n        percent: 0,\n        done: false\n      },\n      trades: {\n        total: 0,\n        array: [],\n        percent: 0,\n        done: false\n      },\n      currencies: [],\n      symbols:{}\n    }\n\n    // kick start transaction downloader\n    heatApi.api.getTransactionsForAccountCount(account).then(count => {\n      let scopes = []\n      for (let i=0; i<count; i+=100) {\n        scopes.push([i, i+99]);\n      }\n      $rootScope.$evalAsync(function () {\n        locals.transactions.total = count\n      })\n      recursiveGetTransactions(account, scopes, function (transaction) {\n        $rootScope.$evalAsync(function () {\n          if (transaction==null) {\n            locals.transactions.percent = 100\n            locals.transactions.done = true\n            done()\n          }\n          else {\n            locals.transactions.array.push(transaction)\n            locals.transactions.percent = Math.round(locals.transactions.array.length/(locals.transactions.total/100))\n          }\n        })\n      })\n    })\n\n    // kick start trade downloader\n    heatApi.api.getAllAccountTradesCount(account).then(count => {\n      let scopes = []\n      for (let i=0; i<count; i+=100) {\n        scopes.push([i, i+99]);\n      }\n      $rootScope.$evalAsync(function () {\n        locals.trades.total = count\n      })\n      recursiveGetTrades(account, scopes, function (trade) {\n        $rootScope.$evalAsync(function () {\n          if (trade==null) {\n            locals.trades.percent = 100\n            locals.trades.done = true\n            done()\n          }\n          else {\n            locals.trades.array.push(trade)\n            locals.trades.percent = Math.round(locals.trades.array.length/(locals.trades.total/100))\n          }\n        })\n      })\n    })\n\n    function done() {\n      if (locals.transactions.done && locals.trades.done) {\n\n        // list duplicates\n        console.log('duplicates', collectDuplicates(locals.transactions.array))\n\n        let assets = collectAssets(locals.transactions.array, locals.trades.array)\n        getAssetSymbols(assets).then(symbols => {\n          $rootScope.$evalAsync(function () {\n            assets.forEach(asset => {\n              let symbol = symbols[asset].symbol\n              locals.currencies.push({\n                id: asset,\n                symbol: symbol,\n                download: createDownloadFunction(asset, symbol)\n              })\n              locals.symbols[asset] = symbol\n            })\n          })\n        })\n      }\n    }\n\n    function createDownloadFunction(currency, symbol) {\n      return function () {\n        let entries = []\n        locals.transactions.array.forEach(t => {\n          if (filterTransaction(currency, t))\n            entries.push(transactionToHistory(currency, t))\n        })\n        locals.trades.array.forEach(t => {\n          if (filterTrade(currency, t))\n            entries.push(tradeToHistory(currency, t))\n        })\n        entries.sort((a,b)=> a.timestamp-b.timestamp)\n        let csv = historyToCSV(entries)\n        download(csv, account+'.'+symbol+'.csv')\n        // dialogs.$mdDialog().cancel()\n      }\n    }\n\n    function collectAssets(transactions:IHeatTransaction[], trades: IHeatTrade[]): string[] {\n      let assets = { \"0\": 1 }\n      transactions.forEach(transaction => {\n        let type = transaction.type, subType = transaction.subtype\n        if (type==2 && subType==4 || type==2 && subType==3) {  // 'Buy order' || 'Sell order'\n          assets[transaction.attachment.asset] = 1\n          assets[transaction.attachment.currency] = 1\n        }\n        if (type==2 && subType==2) {  // Asset Transfer\n          assets[transaction.attachment.asset] = 1\n        }\n      })\n      trades.forEach(trade => {\n        assets[trade.asset] = 1\n        assets[trade.currency] = 1\n      })\n      return Object.getOwnPropertyNames(assets)\n    }\n\n    function collectDuplicates(transactions:IHeatTransaction[]): {[key:string]:number} {\n      let dups = {}\n      transactions.forEach(transaction => {\n        if (typeof dups[transaction.transaction]==\"number\") {\n          dups[transaction.transaction]++\n        }\n        else {\n          dups[transaction.transaction] = 1\n        }\n      })\n      let collect = {}\n      Object.getOwnPropertyNames(dups).forEach(name => {\n        if (dups[name] > 1) {\n          collect[name] = dups[name]\n        }\n      })\n      return collect\n    }\n\n    function getAssetSymbols(assets:string[]): Promise<{[key:string]:any}> {\n      var promises = []\n      var data = {}\n      assets.forEach(asset => {\n        promises.push(assetInfo.getInfo(asset).then(info=>{\n          data[asset] = info\n        }))\n      })\n      return Promise.all(promises).then(()=> data)\n    }\n\n    function filterTransaction($currency:string, transaction: IHeatTransaction) {\n      if ($currency==\"0\")\n        return true // every txn has a fee in HEAT\n      let type = transaction.type, subType = transaction.subtype\n      if (type==2 && subType==4 || type==2 && subType==3) {  // 'Buy order' || 'Sell order'\n        return transaction.attachment.asset == $currency || transaction.attachment.currency == $currency\n      }\n      if (type==2 && subType==2) {  // Asset Transfer\n        return transaction.attachment.asset == $currency\n      }\n    }\n\n    function filterTrade($currency:string, trade: IHeatTrade) {\n      return trade.currency == $currency || trade.asset == $currency\n    }\n\n    /**\n     * Will download transactions one batch by one, all transactions are reported back\n     * to the reporter function\n     *\n     * @param account string\n     * @param scopes [[from,to]]\n     * @param reporter function (transaction)\n     */\n    function recursiveGetTransactions(account: string, scopes: any[], reporter: (transaction: IHeatTransaction)=>void) {\n      let scope = scopes.shift()\n      if (!scope) {\n        reporter(null)\n        return\n      }\n\n      let deferred = $q.defer();\n      heatApi.api.getTransactionsForAccount(account, scope[0], scope[1]).then(\n        transactions => {\n          transactions.forEach(transaction => {\n            reporter(transaction)\n          })\n          $timeout(function() {\n            recursiveGetTransactions(account, scopes, reporter)\n          })\n        }\n      ).catch(deferred.reject)\n      return deferred.promise\n    }\n\n    /**\n     * Will download trades one batch by one, all trades are reported back to the\n     * reporter function\n     *\n     * @param account string\n     * @param scopes [[from,to]]\n     * @param reporter function (transaction)\n     */\n    function recursiveGetTrades(account: string, scopes: any[], reporter: (trade: IHeatTrade)=>void) {\n      let scope = scopes.shift()\n      if (!scope) {\n        reporter(null)\n        return\n      }\n\n      let deferred = $q.defer();\n      heatApi.api.getAllAccountTrades(account, \"0\", 0, scope[0], scope[1]).then(\n        trades => {\n          trades.forEach(trade => {\n            reporter(trade)\n          })\n          $timeout(function() {\n            recursiveGetTrades(account, scopes, reporter)\n          })\n        }\n      ).catch(deferred.reject)\n      return deferred.promise\n    }\n\n    function transactionToHistory($currency:string, transaction: IHeatTransaction) {\n      let entry: HistoryEntry = {}, type = transaction.type, subType = transaction.subtype\n      entry.timestamp = transaction.timestamp\n      entry.ID = transaction.transaction\n      entry.TIME = dateFormat(utils.timestampToDate(transaction.timestamp), format);\n      entry.TYPE = encodeTxType(type, subType)\n      if (transaction.sender == account)\n        entry.FEE = utils.formatQNT(transaction.fee, 8)\n      else\n        entry.FEE = \"0\"\n      entry.MESSAGE = heatApi.getHeatMessageContents(transaction);\n      entry.ACCOUNT = transaction.sender==account?transaction.recipient:transaction.sender\n      entry.AMOUNT = '0';\n      entry.ASSET = '';\n      // entry.AMOUNT_ASSET = '0';\n      entry.PRICE = '';\n      entry.TOTAL = '';\n\n      if (type==2 && subType==4) {  // 'Buy order'\n        let total = utils.calculateTotalOrderPriceQNT(transaction.attachment.quantity, transaction.attachment.price)\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\n        entry.TOTAL = utils.formatQNT(total, 8)\n        entry.ASSET = transaction.attachment.asset==$currency?transaction.attachment.asset:transaction.attachment.currency\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\n      }\n      else\n      if (type==2 && subType==3) {  // 'Sell order'\n        let total = utils.calculateTotalOrderPriceQNT(transaction.attachment.quantity, transaction.attachment.price)\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\n        entry.TOTAL = utils.formatQNT(total, 8)\n        entry.ASSET = transaction.attachment.asset==$currency?transaction.attachment.asset:transaction.attachment.currency\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\n      }\n      else\n      if (type==1 && subType==0) {  // 'Message'\n      }\n      else\n      if (type==0 && subType==0) {  // HEAT payment\n        entry.ASSET = \"0\"\n        entry.ASSET_SYMBOL = \"HEAT\"\n        if (transaction.sender == transaction.recipient)\n          entry.AMOUNT = \"0\"  // send to self\n        else if (transaction.recipient == account)\n          entry.AMOUNT = utils.formatQNT(transaction.amount, 8)  // transfer out\n        else\n          entry.AMOUNT = \"-\" + utils.formatQNT(transaction.amount, 8) // transfer in\n      }\n      else\n      if (type==2 && subType==2) {  // Asset Transfer\n        entry.ASSET = transaction.attachment.asset\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\n        if (transaction.sender == transaction.recipient)\n          entry.AMOUNT = \"0\"  // send to self\n        else if (transaction.recipient == account)\n          entry.AMOUNT = utils.formatQNT(transaction.attachment.quantity, 8)  // transfer out\n        else\n          entry.AMOUNT = \"-\" + utils.formatQNT(transaction.attachment.quantity, 8) // transfer in\n      }\n      else\n      if (type==2 && subType==6) {  // 'Cancel buy'\n        let quantity = transaction.attachment.cancelledOrderQuantity || \"0\" // order could possibly not exist\n        let price = transaction.attachment.cancelledOrderPrice || \"0\"\n        let total = quantity!=\"0\"&&price!=\"0\"?utils.calculateTotalOrderPriceQNT(quantity, price):\"0\"\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\n        entry.TOTAL = utils.formatQNT(total, 8)\n        entry.ASSET = transaction.attachment.cancelledOrderAsset?(transaction.attachment.cancelledOrderAsset==$currency?transaction.attachment.asset:transaction.attachment.currency):''\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\n      }\n      else\n      if (type==2 && subType==5) {  // 'Cancel sell'\n        let quantity = transaction.attachment.cancelledOrderQuantity || \"0\" // order could possibly not exist\n        let price = transaction.attachment.cancelledOrderPrice || \"0\"\n        let total = quantity!=\"0\"&&price!=\"0\"?utils.calculateTotalOrderPriceQNT(quantity, price):\"0\"\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\n        entry.TOTAL = utils.formatQNT(total, 8)\n        entry.ASSET = transaction.attachment.cancelledOrderAsset?(transaction.attachment.cancelledOrderAsset==$currency?transaction.attachment.asset:transaction.attachment.currency):''\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\n      }\n      else\n      if (type==4 && subType==0) {  // 'Balance lease'\n      }\n      else\n      if (type==2 && subType==0) { // 'Asset Issuance'\n        if (transaction.transaction == $currency) {\n          entry.AMOUNT = utils.formatQNT(transaction.attachment.quantity, 8)\n        }\n      }\n      return entry;\n    }\n\n    function tradeToHistory($currency:string, trade: IHeatTrade) {\n      let entry: HistoryEntry = {}\n      entry.timestamp = trade.timestamp\n      entry.ID = trade.askOrder+\".\"+trade.bidOrder\n      entry.TYPE = 'Trade'\n      entry.TIME = dateFormat(utils.timestampToDate(trade.timestamp), format);\n      entry.ACCOUNT = trade.seller==account?trade.buyer:trade.seller\n      entry.FEE = \"0\"\n      entry.MESSAGE = ''\n      entry.PRICE = '';\n      entry.TOTAL = '';\n      entry.ASSET = $currency //trade.currency==$currency?trade.asset:trade.currency\n      entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\n      if (trade.seller == account && trade.buyer == account) { // sell to self\n        entry.AMOUNT = '0';\n        // entry.AMOUNT_ASSET = '0';\n        // entry.ASSET = $currency\n      }\n      else {\n        let total = utils.calculateTotalOrderPriceQNT(trade.quantity, trade.price)\n        entry.PRICE = utils.formatQNT(trade.price, 8)\n        entry.TOTAL = utils.formatQNT(total, 8)\n        if (trade.currency == $currency) {\n          if (trade.buyer == account) {\n            entry.AMOUNT = '-'+utils.formatQNT(total, 8)\n            // entry.AMOUNT_ASSET = utils.formatQNT(trade.quantity, 8)\n          }\n          else {\n            entry.AMOUNT = utils.formatQNT(total, 8)\n            // entry.AMOUNT_ASSET = '-'+utils.formatQNT(trade.quantity, 8)\n          }\n        }\n        else {\n          if (trade.buyer == account) {\n            entry.AMOUNT = utils.formatQNT(trade.quantity, 8)\n            // entry.AMOUNT_ASSET = '-'+utils.formatQNT(total, 8)\n          }\n          else {\n            entry.AMOUNT =  '-'+utils.formatQNT(trade.quantity, 8)\n            // entry.AMOUNT_ASSET = '-'+utils.formatQNT(total, 8)\n          }\n        }\n      }\n      return entry\n    }\n\n    function getSymbol(id) {\n      return id // we dont have access to symbols currently, return ID instead\n    }\n\n    function encodeTxType(type: number, subType: number): string {\n      if (type==2 && subType==4)\n        return 'Buy order'\n      if (type==2 && subType==3)\n        return 'Sell order'\n      if (type==1 && subType==0)\n        return 'Message'\n      if (type==0 && subType==0)\n        return 'Transfer'   // HEAT payment\n      if (type==2 && subType==2)\n        return 'Transfer'   // Asset Transfer\n      if (type==2 && subType==6)\n        return 'Cancel buy'\n      if (type==2 && subType==5)\n        return 'Cancel sell'\n      if (type==4 && subType==0)\n        return 'Balance lease'\n      if (type==2 && subType==0)\n        return 'Asset Issuance'\n      return 'Other'\n    }\n\n    function removeCommas(str) {\n      return str ? str.replace(/,/g, '') : ''\n    }\n\n    function historyToCSV(entries: HistoryEntry[]) {\n      var buffer = [];\n      buffer.push(\"ID,TIME,TYPE,ACCOUNT,ASSET,ASSET_SYMBOL,AMOUNT,PRICE,TOTAL,FEE,MESSAGE\");\n      entries.reverse()\n      entries.forEach(history => {\n        buffer.push([\n          JSON.stringify(history.ID),\n          history.TIME,\n          history.TYPE,\n          history.ACCOUNT,\n          history.ASSET,\n          history.ASSET_SYMBOL,\n          history.AMOUNT,\n          // history.AMOUNT_ASSET,\n          history.PRICE,\n          history.TOTAL,\n          history.FEE,\n          JSON.stringify(history.MESSAGE)\n        ].map(x => removeCommas(x)).join(','))\n      })\n      return buffer.join('\\n')\n    }\n\n    function download(content:string, fileName:string) {\n      var blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n      saveAs(blob, fileName);\n    }\n\n    return dialogs.dialog({\n      id: 'download',\n      title: 'Download account history (CSV)',\n      targetEvent: $event,\n      okButton: false,\n      cancelButton: true,\n      locals: locals,\n      style: `\n        .dialog-download md-progress-linear {\n          margin-top: 8px !important;\n          margin-bottom: 8px !important;\n        }\n        .dialog-download .md-button {\n          text-align: left !important;\n          margin-left: 0px !important;\n          padding-left: 0px !important;\n        }\n      `,\n      template: `\n        <div layout=\"column\" class=\"dialog-download\">\n          <div layout=\"row\">Transactions ({{vm.transactions.array.length}})</div>\n          <md-progress-linear md-mode=\"determinate\" ng-value=\"vm.transactions.percent\"></md-progress-linear>\n          <div layout=\"row\">Trades ({{vm.trades.array.length}})</div>\n          <md-progress-linear md-mode=\"determinate\" ng-value=\"vm.trades.percent\"></md-progress-linear>\n          <!--<div>\n            <p>Total Transactions: {{vm.transactions.total}}</p>\n            <p>Count Transactions: {{vm.transactions.array.length}}</p>\n            <p>Percent: {{vm.transactions.percent}}</p>\n            <p>Total Trades: {{vm.trades.total}}</p>\n            <p>Count Trades: {{vm.trades.array.length}}</p>\n            <p>Percent: {{vm.trades.percent}}</p>\n          </div>-->\n          <div>\n            <div ng-repeat=\"currency in vm.currencies\">\n              <md-button ng-click=\"currency.download()\">Download {{currency.symbol}}.csv</md-button> View\n            </div>\n          </div>\n        </div>\n      `\n    });\n  }\n}","module dialogs {\n\n  export function etherTransactionReceipt(status, message) {\n    return dialogs.dialog({\n      id: 'EtherTransactionReceipt',\n      title: \"Transaction Receipt\",\n      cancelButton: false,\n      okButton: true,\n      locals: {\n        status: status,\n        message: message\n      },\n      template: `\n        <h2>{{vm.status}}</h2><br>\n        <label ng-if=\"vm.status==='Success'\">Transaction hash is: {{vm.message}}</label>\n        <label ng-if=\"vm.status==='Error'\">{{vm.message}}</label>\n      `\n    });\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n  export function jsonDetails($event, jsonObject: any, title: string) {\n    return dialogs.dialog({\n      id: 'jsonDetails',\n      title: title,\n      targetEvent: $event,\n      cancelButton: false,\n      locals: {\n        jsonObject: jsonObject,\n      },\n      template: `\n        <div layout=\"column\" flex>\n          <json-formatter json=\"vm.jsonObject\" open=\"1\" class=\"json-formatter-dark\"></json-formatter>\n        </div>\n      `\n    });\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n  export function prompt($event, title:string, description:string, defaultValue:string): angular.IPromise<string> {\n    let $q = <angular.IQService> heat.$inject.get('$q');\n    let deferred = $q.defer<string>();\n    let locals = {\n      v: {\n        value: defaultValue||''\n      },\n      description: description||'',\n    }\n    dialogs.dialog({\n      id: 'prompt',\n      title: title,\n      targetEvent: $event,\n      template: `\n        <p>{{vm.description}}</p>\n        <md-input-container flex>\n          <input id=\"pwd\" type=\"password\" ng-model=\"vm.v.value\" autocomplete=\"off\" auto-focus/><br>\n        </md-input-container>\n      `,\n      locals: locals\n    }).then(\n      () => {\n        deferred.resolve(locals.v.value)\n      },\n      deferred.reject\n    )\n    return deferred.promise\n  }\n\n  export function alert($event, title:string, description:string): angular.IPromise<any> {\n    let $q = <angular.IQService> heat.$inject.get('$q');\n    let deferred = $q.defer<string>();\n    let locals = {\n      description: description||'',\n    }\n    dialogs.dialog({\n      id: 'alert',\n      title: title,\n      targetEvent: $event,\n      template: `\n        <p>{{vm.description}}</p>\n      `,\n      locals: locals\n    }).then(\n      () => {\n        deferred.resolve()\n      },\n      deferred.reject\n    )\n    return deferred.promise\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n  export function shutdown($event) {\n    dialogs.dialog({\n      id: 'shutdown',\n      title: 'Shutting down',\n      targetEvent: $event,\n      okButton: false,\n      template: `\n        <div layout=\"row\" layout-padding layout-align=center center\" flex>\n          <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\n        </div>\n      `\n    })\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n\n  export function textEditor(title, content, saveContentFunc) {\n    dialogs.dialog({\n      id: 'textEditor',\n      title: title,\n      //targetEvent: $event,\n      okButton: false,\n      cancelButton: false,\n      locals: {\n        save: function() {\n          saveContentFunc(this.content);\n          $mdDialog().hide();\n        },\n        close: function() {\n          $mdDialog().hide();\n        },\n        content: content\n      },\n      template: `\n        <!--<md-input-container flex>-->\n        <p>\n          <textarea rows=\"20\" ng-model=\"vm.content\" id=\"content-textarea\"></textarea>\n        </p>\n        <!--</md-input-container>-->\n        <div layout=\"row\" layout-align=\"center center\" style=\"min-height: 25px\">\n          <md-button class=\"md-primary\" ng-click=\"vm.save()\">Save</md-button>\n          <md-button class=\"md-primary\" ng-click=\"vm.close()\">Close</md-button>\n        </div>\n      `,\n      style: `\n        #content-textarea {\n            width: 100%;\n        }\n      `\n    })\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule dialogs {\n  export function transactionDetails($event, transaction: IHeatTransaction) {\n\n    let settings: SettingsService = <SettingsService> heat.$inject.get('settings');\n\n    dialogs.dialog({\n      id: 'transactionDetails',\n      title: 'Transaction details',\n      targetEvent: $event,\n      cancelButton: false,\n      locals: {\n        date: dateFormat(utils.timestampToDate(transaction.timestamp), settings.get(SettingsService.DATEFORMAT_DEFAULT)),\n        amount: utils.commaFormat(utils.convertToQNTf(transaction.amount.toString())) + ' HEAT',\n        source: transaction.sender,\n        destination: transaction.recipient,\n        transactionId: transaction.transaction,\n        confirmed: transaction.confirmations ? 'YES' : 'NO'\n      },\n      style: `\n        .dialog-transaction-details td {\n          padding: 8px;\n        }\n      `,\n      template: `\n        <div layout=\"column\" class=\"dialog-transaction-details\">\n          <table>\n            <tr><td>Time</td><td>{{vm.date}}</td></tr>\n            <tr><td>Amount</td><td>{{vm.amount}}</td></tr>\n            <tr><td>Source</td><td>{{vm.source}}</td></tr>\n            <tr><td>Destination</td><td>{{vm.destination}}</td></tr>\n            <tr><td>Transaction ID</td><td>{{vm.transactionId}}</td></tr>\n            <tr><td>Confirmed</td><td>{{vm.confirmed}}</td></tr>\n          </table>\n        </div>\n      `\n    })\n  }\n}\n","module dialogs {\n\n  function withdraw(_to: string, _amount:any) {\n    var lightwalletService = <LightwalletService> heat.$inject.get('lightwalletService');\n    var user = <UserService> heat.$inject.get('user')\n    lightwalletService.sendEther(user.currency.address, _to, _amount);\n    $mdDialog().hide();\n  }\n\n  export function withdrawEther($event) {\n    return dialogs.dialog({\n      id: 'withdrawEtherWallet',\n      title: \"Send Ether\",\n      targetEvent: $event,\n      cancelButton: true,\n      okButton: false,\n      locals: {\n        withdraw: withdraw,\n        recipient: undefined,\n        amount: undefined\n      },\n      style: `\n      .fee-button {\n        max-width:140px !important;\n      }\n    `,\n      template: `\n        <md-input-container flex>\n          <input ng-model=\"vm.recipient\" name=\"recipient\" placeholder=\"Recipient address\" autocomplete=\"off\" required />\n        </md-input-container>\n        <md-input-container flex>\n          <input ng-model=\"vm.amount\" name=\"amount\" placeholder = \"Amount (in Wei)\" autocomplete=\"off\" required />\n        </md-input-container>\n        <md-button ng-click=\"0\" ng-disabled=\"true\" class=\"fee fee-button\">Fee: 0.000420 ETH</md-button>\n        <div layout=\"row\" layout-align=\"center center\" style=\"min-height: 25px\">\n          <md-button class=\"md-primary\" ng-disabled=\"!vm.amount || !vm.recipient\" ng-href=\"#/ethwallet\" ng-click=\"vm.withdraw(vm.recipient, vm.amount)\">Send</md-button>\n        </div>\n      `\n    });\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface IEventListenerFunction {\n  (...arg: Array<any>): any;\n}\n\nclass EventEmitter {\n\n  private cache: EventEmitterCache;\n\n  constructor() {\n    this.cache = new EventEmitterCache();\n  }\n\n  addListener(event: string, listener: IEventListenerFunction) {\n    this.cache.add(event, listener);\n  }\n\n  removeListener(event: string, listener: IEventListenerFunction) {\n    this.cache.remove(event, listener);\n  }\n\n  on(event: string, listener: IEventListenerFunction) {\n    this.addListener(event, listener);\n  }\n\n  removeAllListeners(event?: string) {\n    if (angular.isDefined(event)) {\n      this.cache.get(event).forEach((listener) => {\n        this.cache.remove(event, listener);\n      })\n    }\n    else {\n      this.cache.clear();\n    }\n  }\n\n  emit(event: string, ...args: Array<any>) {\n    this.cache.get(event).forEach((listener) => {\n      listener.apply(null, args);\n    });\n  }\n}\n\nclass EventEmitterCache {\n\n  private cache: any = {};\n\n  clear() {\n    this.cache = {};\n  }\n\n  add(event: string, listener: IEventListenerFunction) {\n    if (!angular.isDefined(this.cache[event])) {\n      this.cache[event] = [];\n    }\n    this.cache[event].push(listener);\n  }\n\n  remove(event: string, listener: IEventListenerFunction) {\n    if (angular.isDefined(this.cache[event])) {\n      this.cache[event] = this.cache[event].filter((l) => l != listener);\n      if (this.cache[event].length === 0) {\n        delete this.cache[event];\n      }\n    }\n  }\n\n  get(event: string): Array<IEventListenerFunction> {\n    return this.cache[event] || [];\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n// declare var unescape: any;\n// declare var escape: any;\ndeclare var BigInteger: any;\nmodule converters {\n\n\tvar charToNibble = {};\n\tvar nibbleToChar = [];\n\tvar i;\n\tfor (i = 0; i <= 9; ++i) {\n\t\tvar character = i.toString();\n\t\tcharToNibble[character] = i;\n\t\tnibbleToChar.push(character);\n\t}\n\n\tfor (i = 10; i <= 15; ++i) {\n\t\tvar lowerChar = String.fromCharCode('a'.charCodeAt(0) + i - 10);\n\t\tvar upperChar = String.fromCharCode('A'.charCodeAt(0) + i - 10);\n\n\t\tcharToNibble[lowerChar] = i;\n\t\tcharToNibble[upperChar] = i;\n\t\tnibbleToChar.push(lowerChar);\n\t}\n\n  export function byteArrayToHexString(bytes: Array<number>):string {\n    var str = '';\n    for (var i = 0; i < bytes.length; ++i) {\n      if (bytes[i] < 0) {\n        bytes[i] += 256;\n      }\n      str += nibbleToChar[bytes[i] >> 4] + nibbleToChar[bytes[i] & 0x0F];\n    }\n    return str;\n  }\n\n  export function stringToByteArray(stringValue: string): Array<number> {\n    // @ts-ignore\n    var str = unescape(encodeURIComponent(stringValue)); //temporary\n    var bytes = new Array(str.length);\n    for (var i = 0; i < str.length; ++i) {\n      bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n  }\n\n  export function hexStringToByteArray(str: string): Array<number> {\n    var bytes = [];\n    var i = 0;\n    if (0 !== str.length % 2) {\n      bytes.push(charToNibble[str.charAt(0)]);\n      ++i;\n    }\n    for (; i < str.length - 1; i += 2) {\n      bytes.push((charToNibble[str.charAt(i)] << 4) + charToNibble[str.charAt(i + 1)]);\n    }\n    return bytes;\n  }\n\n  export function stringToHexString(str: string): string {\n\t\treturn byteArrayToHexString(stringToByteArray(str));\n\t}\n\n  export function hexStringToString(hex: string): string {\n\t\treturn byteArrayToString(hexStringToByteArray(hex));\n\t}\n\n  function checkBytesToIntInput(bytes: Array<number>, numBytes: number, opt_startIndex?:number): number {\n    var startIndex = opt_startIndex || 0;\n    if (startIndex < 0) {\n      throw new Error('Start index should not be negative');\n    }\n    if (bytes.length < startIndex + numBytes) {\n      throw new Error('Need at least ' + (numBytes) + ' bytes to convert to an integer');\n    }\n    return startIndex;\n  }\n\n  export function byteArrayToSignedShort(bytes: Array<number>, opt_startIndex?: number): any {\n    var index = checkBytesToIntInput(bytes, 2, opt_startIndex);\n    var value = bytes[index];\n    value += bytes[index + 1] << 8;\n    return value;\n  }\n\n  export function byteArrayToSignedInt32(bytes: Array<number>, opt_startIndex?: number) {\n    var index = checkBytesToIntInput(bytes, 4, opt_startIndex);\n    var value = bytes[index];\n    value += bytes[index + 1] << 8;\n    value += bytes[index + 2] << 16;\n    value += bytes[index + 3] << 24;\n    return value;\n  }\n\n\texport function byteArrayToBigInteger(bytes: Array<number>, opt_startIndex?: number): jsbn.BigInteger {\n    var index = checkBytesToIntInput(bytes, 8, opt_startIndex);\n    var value = new BigInteger(\"0\", 10);\n    var temp1, temp2;\n    for (var i = 7; i >= 0; i--) {\n      temp1 = value.multiply(new BigInteger(\"256\", 10));\n      temp2 = temp1.add(new BigInteger(bytes[opt_startIndex + i].toString(10), 10));\n      value = temp2;\n    }\n    return value;\n  }\n\n  interface IWordArray {\n    sigBytes: number;\n    words: Uint32Array\n  }\n\n\t// create a wordArray that is Big-Endian\n\texport function byteArrayToWordArray(byteArray: Array<number>): IWordArray {\n    var i = 0, offset = 0, word = 0, len = byteArray.length;\n    var words = new Uint32Array(((len / 4) | 0) + (len % 4 == 0 ? 0 : 1));\n    while (i < (len - (len % 4))) {\n      words[offset++] = (byteArray[i++] << 24) | (byteArray[i++] << 16) | (byteArray[i++] << 8) | (byteArray[i++]);\n    }\n    if (len % 4 != 0) {\n      word = byteArray[i++] << 24;\n      if (len % 4 > 1) {\n        word = word | byteArray[i++] << 16;\n      }\n      if (len % 4 > 2) {\n        word = word | byteArray[i++] << 8;\n      }\n      words[offset] = word;\n    }\n    return { sigBytes: len, words: words };\n  }\n\n  // assumes wordArray is Big-Endian\n\texport function wordArrayToByteArray(wordArray: IWordArray): Array<number> {\n    var len = wordArray.words.length;\n    if (len == 0) {\n      return new Array(0);\n    }\n    var byteArray = new Array(wordArray.sigBytes);\n    var offset = 0, word, i;\n    for (i = 0; i < len - 1; i++) {\n      word = wordArray.words[i];\n      byteArray[offset++] = word >> 24;\n      byteArray[offset++] = (word >> 16) & 0xff;\n      byteArray[offset++] = (word >> 8) & 0xff;\n      byteArray[offset++] = word & 0xff;\n    }\n    word = wordArray.words[len - 1];\n    byteArray[offset++] = word >> 24;\n    if (wordArray.sigBytes % 4 == 0) {\n      byteArray[offset++] = (word >> 16) & 0xff;\n      byteArray[offset++] = (word >> 8) & 0xff;\n      byteArray[offset++] = word & 0xff;\n    }\n    if (wordArray.sigBytes % 4 > 1) {\n      byteArray[offset++] = (word >> 16) & 0xff;\n    }\n    if (wordArray.sigBytes % 4 > 2) {\n      byteArray[offset++] = (word >> 8) & 0xff;\n    }\n    return byteArray;\n  }\n\n  // TODO @opt_startIndex and @length dont seem to be used, verify with rest of code and remove if unused\n  export function byteArrayToString(bytes: Array<number>, opt_startIndex?: any, length?: any): string {\n    if (length == 0) {\n      return \"\";\n    }\n    if (opt_startIndex && length) {\n      var index = checkBytesToIntInput(bytes, parseInt(length, 10), parseInt(opt_startIndex, 10));\n      bytes = bytes.slice(opt_startIndex, opt_startIndex + length);\n    }\n    // @ts-ignore\n    return decodeURIComponent(escape(String.fromCharCode.apply(null, bytes)));\n  }\n\n  export function byteArrayToShortArray(byteArray: Array<number>): Array<number> {\n    var shortArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var i;\n    for (i = 0; i < 16; i++) {\n      shortArray[i] = byteArray[i * 2] | byteArray[i * 2 + 1] << 8;\n    }\n    return shortArray;\n  }\n\n\texport function shortArrayToByteArray(shortArray: Array<number>): Array<number> {\n    var byteArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var i;\n    for (i = 0; i < 16; i++) {\n      byteArray[2 * i] = shortArray[i] & 0xff;\n      byteArray[2 * i + 1] = shortArray[i] >> 8;\n    }\n    return byteArray;\n  }\n\n\t// export function shortArrayToHexString(ary:Array<number>):string {\n  //   var res = \"\";\n  //   for (var i = 0; i < ary.length; i++) {\n  //     res += nibbleToChar[(ary[i] >> 4) & 0x0f] + nibbleToChar[ary[i] & 0x0f] + nibbleToChar[(ary[i] >> 12) & 0x0f] + nibbleToChar[(ary[i] >> 8) & 0x0f];\n  //   }\n  //   return res;\n  // }\n\n  // slightly optimized (without string concatenation - heat)\n\texport function shortArrayToHexString(ary:Array<number>):string {\n    var res: Array<string> = [];\n    for (var i = 0; i < ary.length; i++) {\n      res.push(nibbleToChar[(ary[i] >> 4) & 0x0f],\n               nibbleToChar[ary[i] & 0x0f],\n               nibbleToChar[(ary[i] >> 12) & 0x0f],\n               nibbleToChar[(ary[i] >> 8) & 0x0f]);\n    }\n    return res.join(\"\");\n  }\n\n\texport function int32ToBytes(x: number, opt_bigEndian: boolean) {\n\t\treturn intToBytes_(x, 4, 4294967295, opt_bigEndian);\n\t}\n\n  /**\n   * Produces an array of the specified number of bytes to represent the integer\n   * value. Default output encodes ints in little endian format. Handles signed\n   * as well as unsigned integers. Due to limitations in JavaScript's number\n   * format, x cannot be a true 64 bit integer (8 bytes).\n   */\n  function intToBytes_(x: number, numBytes: number, unsignedMax: number, opt_bigEndian: boolean): Array<number> {\n    var signedMax = Math.floor(unsignedMax / 2);\n    var negativeMax = (signedMax + 1) * -1;\n    if (x != Math.floor(x) || x < negativeMax || x > unsignedMax) {\n      throw new Error(x + ' is not a ' + (numBytes * 8) + ' bit integer');\n    }\n    var bytes = [];\n    var current;\n    // Number type 0 is in the positive int range, 1 is larger than signed int,\n    // and 2 is negative int.\n    var numberType = x >= 0 && x <= signedMax ? 0 :\n      x > signedMax && x <= unsignedMax ? 1 : 2;\n    if (numberType == 2) {\n      x = (x * -1) - 1;\n    }\n    for (var i = 0; i < numBytes; i++) {\n      if (numberType == 2) {\n        current = 255 - (x % 256);\n      } else {\n        current = x % 256;\n      }\n\n      if (opt_bigEndian) {\n        bytes.unshift(current);\n      } else {\n        bytes.push(current);\n      }\n\n      if (numberType == 1) {\n        x = Math.floor(x / 256);\n      } else {\n        x = x >> 8;\n      }\n    }\n    return bytes;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare var curve25519: any;\ndeclare var curve25519_: any;\ndeclare var SHA256_init: any;\ndeclare var SHA256_write: any;\ndeclare var SHA256_finalize: any;\ndeclare var pako: any;\ndeclare var CryptoJS: any;\nmodule heat.crypto {\n\n  var _hash = {\n    init: SHA256_init,\n    update: SHA256_write,\n    getBytes: SHA256_finalize\n  };\n\n  export var SHA256 = _hash;\n\n  function simpleHash(message) {\n    _hash.init();\n    _hash.update(message);\n    return _hash.getBytes();\n  }\n\n  /**\n   * @param curve ShortArray\n   * @returns ShortArray\n   */\n  function curve25519_clamp(curve) {\n    curve[0] &= 0xFFF8;\n    curve[15] &= 0x7FFF;\n    curve[15] |= 0x4000;\n    return curve;\n  }\n\n  /**\n   * Calculates a SHA256 hash from a string.\n   *\n   * @param inputString String (regular UTF-8 string)\n   * @returns Hash as HEX String\n   */\n  export function calculateStringHash(inputString: string) {\n    var hexString = converters.stringToHexString(inputString);\n    var bytes = converters.hexStringToByteArray(hexString);\n    var hashBytes = simpleHash(bytes);\n    return converters.byteArrayToHexString(hashBytes);\n  }\n\n  /**\n   * @param byteArray ByteArray\n   * @param startIndex Int\n   * @returns BigInteger\n   */\n  function byteArrayToBigInteger(byteArray, startIndex?: number) {\n    var value = new BigInteger(\"0\", 10);\n    var temp1, temp2;\n    for (var i = byteArray.length - 1; i >= 0; i--) {\n      temp1 = value.multiply(new BigInteger(\"256\", 10));\n      temp2 = temp1.add(new BigInteger(byteArray[i].toString(10), 10));\n      value = temp2;\n    }\n    return value;\n  }\n\n  /**\n   * @param unsignedTransaction hex-string\n   * @param signature hex-string\n   * @returns hex-string\n   */\n  export function calculateFullHash(unsignedTransaction: string, signature: string): string {\n    var unsignedTransactionBytes = converters.hexStringToByteArray(unsignedTransaction);\n    var signatureBytes = converters.hexStringToByteArray(signature);\n    var signatureHash = simpleHash(signatureBytes);\n\n    _hash.init();\n    _hash.update(unsignedTransactionBytes);\n    _hash.update(signatureHash);\n    var fullHash = _hash.getBytes();\n    return converters.byteArrayToHexString(fullHash);\n  }\n\n  /**\n   * @param fullnameUTF8 UTF-8 user name\n   * @returns hex-string\n   */\n  export function fullNameToHash(fullNameUTF8: string): string {\n    _hash.init();\n    _hash.update(converters.stringToByteArray(fullNameUTF8));\n    var slice = (converters.hexStringToByteArray(converters.byteArrayToHexString(_hash.getBytes()))).slice(0, 8);\n    return byteArrayToBigInteger(slice).toString();\n  }\n\n  /**\n   * @param fullHashHex hex-string\n   * @returns string\n   */\n  export function calculateTransactionId(fullHashHex:string):string {\n    var slice         = (converters.hexStringToByteArray(fullHashHex)).slice(0, 8);\n    var transactionId = byteArrayToBigInteger(slice).toString();\n    return transactionId;\n  }\n\n  /**\n   * Turns a secretphrase into a public key\n   * @param secretPhrase String\n   * @returns HEX string\n   */\n  export function secretPhraseToPublicKey(secretPhrase: string): string {\n    var secretHex = converters.stringToHexString(secretPhrase);\n    var secretPhraseBytes = converters.hexStringToByteArray(secretHex);\n    var digest = simpleHash(secretPhraseBytes);\n    return converters.byteArrayToHexString(curve25519.keygen(digest).p);\n  }\n\n  /**\n   * ..\n   * @param secretPhrase Ascii String\n   * @returns hex-string\n   */\n  export function getPrivateKey(secretPhrase: string) {\n    SHA256_init();\n    SHA256_write(converters.stringToByteArray(secretPhrase));\n    return converters.shortArrayToHexString(curve25519_clamp(converters.byteArrayToShortArray(SHA256_finalize())));\n  }\n\n  /**\n   * @param secretPhrase Ascii String\n   * @returns String\n   */\n  export function getAccountId(secretPhrase: string) {\n    var publicKey = this.secretPhraseToPublicKey(secretPhrase);\n    return this.getAccountIdFromPublicKey(publicKey);\n  }\n\n  /**\n   * @param secretPhrase Hex String\n   * @returns String\n   */\n  export function getAccountIdFromPublicKey(publicKey: string) {\n    _hash.init();\n    _hash.update(converters.hexStringToByteArray(publicKey));\n\n    var account   = _hash.getBytes();\n    var slice     = (converters.hexStringToByteArray(converters.byteArrayToHexString(account))).slice(0, 8);\n    return byteArrayToBigInteger(slice).toString();\n  }\n\n\n  /**\n   * TODO pass secretphrase as string instead of HEX string, convert to\n   * hex string ourselves.\n   *\n   * @param message HEX String\n   * @param secretPhrase Hex String\n   * @returns Hex String\n   */\n  export function signBytes(message: string, secretPhrase: string) {\n    var messageBytes      = converters.hexStringToByteArray(message);\n    var secretPhraseBytes = converters.hexStringToByteArray(secretPhrase);\n\n    var digest = simpleHash(secretPhraseBytes);\n    var s = curve25519.keygen(digest).s;\n    var m = simpleHash(messageBytes);\n\n    _hash.init();\n    _hash.update(m);\n    _hash.update(s);\n    var x = _hash.getBytes();\n\n    var y = curve25519.keygen(x).p;\n\n    _hash.init();\n    _hash.update(m);\n    _hash.update(y);\n    var h = _hash.getBytes();\n\n    var v = curve25519.sign(h, x, s);\n\n    return converters.byteArrayToHexString(v.concat(h));\n  }\n\n  /**\n   * ...\n   * @param signature     Hex String\n   * @param message       Hex String\n   * @param publicKey     Hex String\n   * @returns Boolean\n   */\n  export function verifyBytes(signature: string, message: string, publicKey: string): boolean {\n    var signatureBytes  = converters.hexStringToByteArray(signature);\n    var messageBytes    = converters.hexStringToByteArray(message);\n    var publicKeyBytes  = converters.hexStringToByteArray(publicKey);\n    var v = signatureBytes.slice(0, 32);\n    var h = signatureBytes.slice(32);\n    var y = curve25519.verify(v, h, publicKeyBytes);\n\n    var m = simpleHash(messageBytes);\n\n    _hash.init();\n    _hash.update(m);\n    _hash.update(y);\n    var h2 = _hash.getBytes();\n\n    return areByteArraysEqual(h, h2);\n  }\n\n  function areByteArraysEqual(bytes1: Array<number>, bytes2: Array<number>): boolean {\n    if (bytes1.length !== bytes2.length) {\n      return false;\n    }\n    for (var i = 0; i < bytes1.length; ++i) {\n      if (bytes1[i] !== bytes2[i])\n        return false;\n    }\n    return true;\n  }\n\n  export interface IEncryptOptions {\n\n    /* Recipient account id */\n    account?: string;\n\n    /* Recipient public key */\n    publicKey?:  Array<number>;\n\n    /* Private key to decrypt messages to self */\n    privateKey?: Array<number>;\n\n    /* Shared key to encrypt messages to other account */\n    sharedKey?: Array<number>;\n\n    /* Uint8Array */\n    nonce?: any;\n  }\n\n  /**\n   * @param message String\n   * @param options Object {\n   *    account: String,    // recipient account id\n   *    publicKey: String,  // recipient public key\n   * }\n   * @param secretPhrase String\n   * @returns { message: String, nonce: String }\n   */\n  export function encryptNote(message: string, options: IEncryptOptions, secretPhrase: string, uncompressed?: boolean) {\n    if (!options.sharedKey) {\n      if (!options.privateKey) {\n        options.privateKey = converters.hexStringToByteArray(this.getPrivateKey(secretPhrase));\n      }\n      if (!options.publicKey) {\n        throw new Error('Missing publicKey argument');\n      }\n    }\n    var encrypted = encryptData(converters.stringToByteArray(message), options, uncompressed);\n    return {\n      \"message\": converters.byteArrayToHexString(encrypted.data),\n      \"nonce\": converters.byteArrayToHexString(encrypted.nonce)\n    };\n  }\n\n  /**\n   * @param message Byte Array\n   * @param options Object {\n   *    account: String,    // recipient account id\n   *    publicKey: String,  // recipient public key\n   * }\n   * @param secretPhrase String\n   * @returns { message: String, nonce: String }\n   */\n  export function encryptBinaryNote(message: Array<number>, options: IEncryptOptions, secretPhrase: string, uncompressed?: boolean) {\n    if (!options.sharedKey) {\n      if (!options.privateKey) {\n        options.privateKey = converters.hexStringToByteArray(this.getPrivateKey(secretPhrase));\n      }\n      if (!options.publicKey) {\n        throw new Error('Missing publicKey argument');\n      }\n    }\n    var encrypted = encryptData(message, options, uncompressed);\n    return {\n      \"message\": converters.byteArrayToHexString(encrypted.data),\n      \"nonce\": converters.byteArrayToHexString(encrypted.nonce)\n    };\n  }\n\n  /**\n   * @param key1 ByteArray\n   * @param key2 ByteArray\n   * @returns ByteArray\n   */\n  function getSharedKey(key1, key2) {\n    return converters.shortArrayToByteArray(\n              curve25519_(converters.byteArrayToShortArray(key1),\n                          converters.byteArrayToShortArray(key2), null));\n  }\n\n  function encryptData(plaintext: Array<number>, options: IEncryptOptions, uncompressed?: boolean) {\n    var crypto: any = window.crypto || window['msCrypto'];\n    if (!crypto) {\n      throw new Error(\"Browser not supported\");\n    }\n\n    if (!options.sharedKey) {\n      options.sharedKey = getSharedKey(options.privateKey, options.publicKey);\n    }\n\n    options.nonce = new Uint8Array(32);\n    crypto.getRandomValues(options.nonce);\n\n    var compressedPlaintext = uncompressed ? new Uint8Array(plaintext) : pako.gzip(new Uint8Array(plaintext));\n    var data = aesEncrypt(compressedPlaintext, options);\n    return {\n      \"nonce\": options.nonce,\n      \"data\": data\n    };\n  }\n\n  function aesEncrypt(plaintext: Array<number>, options: IEncryptOptions) {\n    var crypto: any = window.crypto || window['msCrypto'];\n    var text = converters.byteArrayToWordArray(plaintext);\n    var sharedKey = options.sharedKey ? options.sharedKey.slice(0) :\n                                        getSharedKey(options.privateKey, options.publicKey);\n\n    for (var i = 0; i < 32; i++) {\n      sharedKey[i] ^= options.nonce[i];\n    }\n\n    var tmp: any = new Uint8Array(16);\n    crypto.getRandomValues(tmp);\n\n    var key = CryptoJS.SHA256(converters.byteArrayToWordArray(sharedKey));\n    var iv = converters.byteArrayToWordArray(tmp);\n    var encrypted = CryptoJS.AES.encrypt(text, key, {\n      iv: iv\n    });\n\n    var ivOut = converters.wordArrayToByteArray(encrypted.iv);\n    var ciphertextOut = converters.wordArrayToByteArray(encrypted.ciphertext);\n    return ivOut.concat(ciphertextOut);\n  }\n\n  export interface IEncryptedMessage {\n    isText: boolean;\n    data: string;\n    nonce: string;\n  }\n\n  export function encryptMessage(message: string, publicKey: string, secretPhrase: string, uncompressed?: boolean): IEncryptedMessage {\n    var options: crypto.IEncryptOptions = {\n      \"account\": crypto.getAccountIdFromPublicKey(publicKey),\n      \"publicKey\": converters.hexStringToByteArray(publicKey)\n    };\n    var encrypted = heat.crypto.encryptNote(message, options, secretPhrase, uncompressed);\n    return {\n      isText: true,\n      data: encrypted.message,\n      nonce: encrypted.nonce\n    };\n  }\n\n  export function decryptMessage(data: string, nonce: string, publicKey: string, secretPhrase: string, uncompressed?: boolean): string {\n    var privateKey = converters.hexStringToByteArray(this.getPrivateKey(secretPhrase));\n    var publicKeyBytes = converters.hexStringToByteArray(publicKey);\n    var sharedKey = getSharedKey(privateKey, publicKeyBytes);\n    var dataBytes = converters.hexStringToByteArray(data);\n    var nonceBytes = converters.hexStringToByteArray(nonce);\n    try {\n      return decryptData(dataBytes, {\n        privateKey: privateKey,\n        publicKey:  publicKeyBytes,\n        nonce:      nonceBytes,\n        sharedKey:  sharedKey\n      }, uncompressed);\n    } catch (e) {\n      if (e instanceof RangeError || e == 'incorrect header check') {\n        console.error('Managed Exception: ' + e);\n\n        return decryptData(dataBytes, {\n          privateKey: privateKey,\n          publicKey:  publicKeyBytes,\n          nonce:      nonceBytes,\n          sharedKey:  sharedKey\n        }, !uncompressed);\n      }\n      throw e;\n    }\n  }\n\n  function decryptData(data, options, uncompressed?: boolean) {\n    var compressedPlaintext = aesDecrypt(data, options);\n    var binData = new Uint8Array(compressedPlaintext);\n    var data = uncompressed ? binData : pako.inflate(binData);\n    return converters.byteArrayToString(data);\n  }\n\n  function aesDecrypt(ivCiphertext, options) {\n    if (ivCiphertext.length < 16 || ivCiphertext.length % 16 != 0) {\n      throw { name: \"invalid ciphertext\" };\n    }\n\n    var iv = converters.byteArrayToWordArray(ivCiphertext.slice(0, 16));\n    var ciphertext = converters.byteArrayToWordArray(ivCiphertext.slice(16));\n    var sharedKey = options.sharedKey.slice(0); //clone\n    for (var i = 0; i < 32; i++) {\n      sharedKey[i] ^= options.nonce[i];\n    }\n\n    var key = CryptoJS.SHA256(converters.byteArrayToWordArray(sharedKey));\n    var encrypted = CryptoJS.lib.CipherParams.create({\n      ciphertext: ciphertext,\n      iv: iv,\n      key: key\n    });\n    var decrypted = CryptoJS.AES.decrypt(encrypted, key, {\n      iv: iv\n    });\n    var plaintext = converters.wordArrayToByteArray(decrypted);\n    return plaintext;\n  }\n\n  export class PassphraseEncryptedMessage {\n    ciphertext: string;\n    salt: string;\n    iv: string;\n    HMAC: string;\n\n    constructor(ciphertext: string, salt: string, iv: string, HMAC: string) {\n      this.ciphertext = ciphertext;\n      this.salt = salt;\n      this.iv = iv;\n      this.HMAC = HMAC;\n    }\n\n    static decode(encoded: string): PassphraseEncryptedMessage {\n      var json = JSON.parse(encoded);\n      return new PassphraseEncryptedMessage(json[0],json[1],json[2],json[3]);\n    }\n\n    encode(): string {\n      return JSON.stringify([\n        this.ciphertext,\n        this.salt,\n        this.iv,\n        this.HMAC\n      ]);\n    }\n  }\n\n  export function passphraseEncrypt(message: string, passphrase: string): PassphraseEncryptedMessage {\n    var salt = CryptoJS.lib.WordArray.random(256/8);\n    var key = CryptoJS.PBKDF2(passphrase, salt, { iterations: 10, hasher:CryptoJS.algo.SHA256});\n    var iv = CryptoJS.lib.WordArray.random(128 / 8);\n\n    var encrypted = CryptoJS.AES.encrypt(message, key, { iv: iv });\n\n    var ciphertext = CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\n    var salt_str = CryptoJS.enc.Hex.stringify(salt);\n    var iv_str = CryptoJS.enc.Hex.stringify(iv);\n\n    var key_str = CryptoJS.enc.Hex.stringify(key);\n    var HMAC = CryptoJS.HmacSHA256(ciphertext + iv_str, key_str);\n    var HMAC_str = CryptoJS.enc.Hex.stringify(HMAC);\n\n    return new PassphraseEncryptedMessage(ciphertext, salt_str, iv_str, HMAC_str);\n  }\n\n  export function passphraseDecrypt(cp: PassphraseEncryptedMessage, passphrase: string): string {\n    var iv = CryptoJS.enc.Hex.parse(cp.iv);\n    var salt = CryptoJS.enc.Hex.parse(cp.salt);\n    var key = CryptoJS.PBKDF2(passphrase, salt, { iterations: 10, hasher:CryptoJS.algo.SHA256});\n    var ciphertext = CryptoJS.enc.Base64.parse(cp.ciphertext);\n    var key_str = CryptoJS.enc.Hex.stringify(key);\n    var HMAC = CryptoJS.HmacSHA256(cp.ciphertext + cp.iv, key_str);\n    var HMAC_str = CryptoJS.enc.Hex.stringify(HMAC);\n\n    // compare HMACs\n    if (HMAC_str != cp.HMAC) {\n        return null;\n    }\n    var _cp = CryptoJS.lib.CipherParams.create({\n      ciphertext: ciphertext\n    });\n\n    var decrypted = CryptoJS.AES.decrypt(_cp,key,{iv: iv});\n    return decrypted.toString(CryptoJS.enc.Utf8);\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n/*\n * Easing Functions - inspired from http://gizma.com/easing/\n * only considering the t value for the range [0, 1] => [0, 1]\n */\nmodule heat.easing {\n  // no easing, no acceleration\n  export function linear(t) { return t }\n  // accelerating from zero velocity\n  export function easeInQuad(t) { return t*t }\n  // decelerating to zero velocity\n  export function easeOutQuad(t) { return t*(2-t) }\n  // acceleration until halfway, then deceleration\n  export function easeInOutQuad(t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t }\n  // accelerating from zero velocity\n  export function easeInCubic(t) { return t*t*t }\n  // decelerating to zero velocity\n  export function easeOutCubic(t) { return (--t)*t*t+1 }\n  // acceleration until halfway, then deceleration\n  export function easeInOutCubic(t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 }\n  // accelerating from zero velocity\n  export function easeInQuart(t) { return t*t*t*t }\n  // decelerating to zero velocity\n  export function easeOutQuart(t) { return 1-(--t)*t*t*t }\n  // acceleration until halfway, then deceleration\n  export function easeInOutQuart(t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t }\n  // accelerating from zero velocity\n  export function easeInQuint(t) { return t*t*t*t*t }\n  // decelerating to zero velocity\n  export function easeOutQuint(t) { return 1+(--t)*t*t*t*t }\n  // acceleration until halfway, then deceleration\n  export function easeInOutQuint(t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\n}","heat.Loader.directive('inputClear', () => {\n  return {\n    restrict: 'A',\n    compile: function (element, attrs) {\n      var color = attrs.inputClear;\n      var action = attrs.ngModel + \" = ''\";\n      element.after(\n          '<md-button aria-label=\"Close\" class=\"animate-show md-icon-button md-accent\"' +\n          'ng-show=\"' + attrs.ngModel + '\" ng-click=\"' + action + '\"' +\n          'style=\"position: absolute; top: 0px; right: -2px; margin-right:0px;\">' +\n          '<md-icon style=\"color:black;font-size: 18px;\" md-font-library=\"material-icons\">close</md-icon>' +\n          '</md-button>');\n    }\n  };\n});","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nmodule heat {\n  export class Iterator<T> {\n    constructor(public array: Array<T>) {}\n\n    cursor: number = 0;\n\n    hasMore(): boolean {\n      return this.cursor < this.array.length;\n    }\n\n    next(): T {\n      return this.array[this.cursor++];\n    }\n\n    peek(): T {\n      return this.array[this.cursor];\n    }\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n/* Polyfill for Array.find - No support for find on IE and Opera */\ninterface Array<T> {\n  find(predicate: (search: T) => boolean) : T;\n}\n\nif (!Array.prototype['find']) {\n  Array.prototype['find'] = function(predicate) {\n    if (this === null) {\n      throw new TypeError('Array.prototype.find called on null or undefined');\n    }\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n    var list = Object(this);\n    var length = list.length >>> 0;\n    var thisArg = arguments[1];\n    var value;\n\n    for (var i = 0; i < length; i++) {\n      value = list[i];\n      if (predicate.call(thisArg, value, i, list)) {\n        return value;\n      }\n    }\n    return undefined;\n  };\n}\n\ninterface String {\n  repeat(count: number): string;\n}\n\nif (!String.prototype['repeat']) {\n  String.prototype['repeat'] = function(count) {\n    'use strict';\n    if (this == null) {\n      throw new TypeError('can\\'t convert ' + this + ' to object');\n    }\n    var str = '' + this;\n    count = +count;\n    if (count != count) {\n      count = 0;\n    }\n    if (count < 0) {\n      throw new RangeError('repeat count must be non-negative');\n    }\n    if (count == Infinity) {\n      throw new RangeError('repeat count must be less than infinity');\n    }\n    count = Math.floor(count);\n    if (str.length == 0 || count == 0) {\n      return '';\n    }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (str.length * count >= 1 << 28) {\n      throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n      if ((count & 1) == 1) {\n        rpt += str;\n      }\n      count >>>= 1;\n      if (count == 0) {\n        break;\n      }\n      str += str;\n    }\n    // Could we try:\n    // return Array(count + 1).join(this);\n    return rpt;\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare var BigInteger;\nmodule utils {\n\n  /**\n   * Remove commas notation from a float number\n   */\n  export function unformat(commaFormatted: string): string {\n    return commaFormatted ? commaFormatted.replace(/,/g,\"\") : \"0\";\n  }\n\n  export function commaFormat(amount) {\n    if (typeof amount == 'undefined') {\n      return '0';\n    }\n    amount     = amount.replace(/,/g,'');\n    var neg    = amount.indexOf('-') == 0;\n    if (neg) {\n      amount   = amount.substr(1);\n    }\n    amount     = amount.split('.'); // input is result of convertNQT\n    var parts  = amount[0].split(\"\").reverse().join(\"\").split(/(\\d{3})/).reverse();\n    var format = [];\n    for(var i=0;i<parts.length;i++) {\n      if (parts[i]) {\n        format.push(parts[i].split('').reverse().join(''));\n      }\n    }\n    return (neg?'-':'')+format.join(',')+(amount.length==2?('.'+amount[1]):'');\n  }\n\n  export function isNumber(value: string) {\n    var num = String(value).replace(/,/g,'');\n    if(num.match(/^\\d+$/)) {\n      return true;\n    }\n    else if(num.match(/^\\d+\\.\\d+$/)) {\n      return true;\n    }\n    return false;\n  }\n\n  export function isHex(value: string) {\n    return angular.isString(value) && (/^[0-9a-fA-F]+$/.test(value))\n  }\n\n  export function isTimeWithinThreasholdLimit(inputTime) {\n    return ((inputTime  * 1000) + 6 * 60 * 60 * 1000) > new Date().getTime()\n  }\n\n  /**\n   * Very forgiving test to determine if the number of fractional parts\n   * exceeds @decimals param.\n   *\n   * @param value String number value, can contain commas\n   * @param decimals Number max allowed number of decimals.\n   * @return boolean\n   */\n  export function hasToManyDecimals(value: string, decimals: number) {\n    var num = String(value).replace(/,/g,'');\n    var parts: Array<string> = num.split(\".\");\n    if (parts[1]) {\n      var fractional = parts[1].replace(/[\\s0]*$/g,\"\");\n      if (fractional.length > decimals)\n        return true;\n    }\n    return false;\n  }\n\n  export function parseResponse(response): any {\n    let parsed = {};\n    if(angular.isString(response)) {\n      try {\n        parsed = JSON.parse(response)\n      } catch(e) {\n        parsed = {heatUtilParsingError: response}\n      }\n    } else {\n      parsed = response;\n    }\n    return parsed;\n  }\n\n  export function ardorTimestampToDate(timestamp: number) {\n    return new Date(Date.UTC(2018, 0, 1, 0, 0, 0, 0) + timestamp * 1000);\n  }\n\n  /**\n   * Converts heat transaction timestamp to the real Date.\n   */\n  export function timestampToDate(timestamp: number) {\n    return new Date(Date.UTC(2013, 10, 24, 12, 0, 0, 0) + timestamp * 1000);\n  }\n\n  /**\n   * Converts real timestamp to the heat transaction timestamp.\n   */\n  export function epochTime(timestamp?: number) {\n    let t = timestamp ? timestamp : Date.now();\n    return (t - 1385294400000 + 500) / 1000;\n  }\n\n  export function roundTo(value: string, decimals: number): string {\n    return String(parseFloat(value).toFixed(decimals));\n  }\n\n  export function delayPromise<T>(promise: angular.IPromise<T>, delay: number): angular.IPromise<T> {\n    var $q = <angular.IQService> heat.$inject.get('$q');\n    let deferred = $q.defer<T>();\n    var result, resolved = false, rejected = false;\n    var timeout = setTimeout(function () {\n      timeout = null;\n      if (resolved) {\n        deferred.resolve(result);\n      }\n      else if (rejected) {\n        deferred.reject(result);\n      }\n    }, delay);\n    promise.then(\n      (r) => {\n        result = r;\n        resolved = true;\n        if (timeout === null) {\n          deferred.resolve(r);\n        }\n      },\n      (r) => {\n        result = r;\n        rejected = true;\n        if (timeout === null) {\n          deferred.reject(r);\n        }\n      });\n    return deferred.promise;\n  }\n\n  export function convertToNQT (amountNXT) {\n    if (typeof amountNXT == 'undefined') {\n      return '0';\n    }\n    amountNXT = String(amountNXT).replace(/,/g, '');\n    var parts = amountNXT.split(\".\");\n    var amount = parts[0];\n    if (parts.length == 1) {\n      var fraction;\n      fraction = \"00000000\";\n    }\n    else if (parts.length == 2) {\n      if (parts[1].length <= 8) {\n        var fraction = parts[1];\n      }\n      else {\n        var fraction = parts[1].substring(0, 8);\n      }\n    }\n    else {\n      throw \"Invalid input\";\n    }\n    for (var i = fraction.length; i < 8; i++) {\n      fraction += \"0\";\n    }\n    var result = amount + \"\" + fraction;\n    if (!/^\\d+$/.test(result)) {\n      throw \"Invalid input.\";\n    }\n    result = result.replace(/^0+/, \"\");\n    if (result === \"\") {\n      result = \"0\";\n    }\n    return result;\n  }\n\n  export function formatQNT(quantity: string, decimals?: number, returnNullZero?: boolean): string {\n    var asfloat = utils.convertToQNTf(quantity, decimals);\n    var cf = utils.commaFormat(asfloat);\n    var parts = cf.split('.');\n    var ret;\n    if (!parts[1])\n      ret = parts[0] + \".\" + \"0\".repeat(decimals);\n    else if (parts[1].length > decimals) {\n      var i=parts[1].length-1;\n      while (parts[1].length > decimals) {\n        if (parts[1][i]==\"0\") {\n          parts[1] = parts[i].slice(0,-1);\n          i--;\n          continue;\n        }\n        break;\n      }\n      ret = parts[0] + \".\" + parts[1];\n    }\n    else\n      ret = parts[0] + \".\" + parts[1] + \"0\".repeat(decimals-parts[1].length);\n    return returnNullZero && !ret.match(/[^0\\.]/) ? null : ret;\n  }\n\n  export function trimDecimals(formatted: string, decimals: number): string {\n    var parts = formatted.split(\".\");\n    if (!parts[1])\n      parts[1] = \"0\".repeat(decimals);\n    else\n      parts[1] = parts[1].substr(0, decimals);\n    if (parts[1].length < decimals)\n      parts[1] += \"0\".repeat(decimals-parts[1].length);\n    return parts[0]+\".\"+parts[1];\n  }\n\n  export function convertToQNTf(quantity: string, decimals?: number): string {\n    decimals = decimals || 8\n    if (typeof quantity == 'undefined') {\n      return '0';\n    }\n    if (quantity.length < decimals) {\n      for (var i = quantity.length; i < decimals; i++) {\n        quantity = \"0\" + quantity;\n      }\n    }\n    var afterComma = \"\";\n    if (decimals) {\n      afterComma = \".\" + quantity.substring(quantity.length - decimals);\n      quantity = quantity.substring(0, quantity.length - decimals);\n      if (!quantity) {\n        quantity = \"0\";\n      }\n      afterComma = afterComma.replace(/0+$/, \"\");\n      if (afterComma == \".\") {\n        afterComma = \"\";\n      }\n    }\n    return quantity + afterComma;\n  }\n\n  export function calculateTotalOrderPriceQNT(quantityQNT: string, priceQNT: string): string {\n    return new Big(quantityQNT).times(new Big(priceQNT).div(new Big(100000000))).round().toString();\n  }\n\n  export class ConvertToQNTError implements Error  {\n    public name = \"ConvertToQNTError\";\n    constructor(public message: string, public code: number) {}\n  }\n\n  /**\n   * Converts a float to a QNT based on the number of decimals to use.\n   * Note! That this method throws a ConvertToQNTError in case the\n   * input is invalid. Callers must catch and handle this situation.\n   *\n   * @throws utils.ConvertToQNTError\n   */\n  export function convertToQNT(quantity: string /*, decimals: number = 8 */): string {\n    var decimals = 8; // qnts all have 8 decimals.\n    var parts = quantity.split(\".\");\n    var qnt   = parts[0];\n    if (parts.length == 1) {\n      if (decimals) {\n        for (var i = 0; i < decimals; i++) {\n          qnt += \"0\";\n        }\n      }\n    }\n    else if (parts.length == 2) {\n      var fraction = parts[1];\n      if (fraction.length > decimals) {\n        throw new ConvertToQNTError(\"Fraction can only have \" + decimals + \" decimals max.\",1);\n      }\n      else if (fraction.length < decimals) {\n        for (var i = fraction.length; i < decimals; i++) {\n          fraction += \"0\";\n        }\n      }\n      qnt += fraction;\n    }\n    else {\n      throw new ConvertToQNTError(\"Incorrect input\",2);\n    }\n    //in case there's a comma or something else in there.. at this point there should only be numbers\n    if (!/^\\d+$/.test(qnt)) {\n      throw new ConvertToQNTError(\"Invalid input. Only numbers and a dot are accepted.\",3);\n    }\n    //remove leading zeroes\n    return qnt.replace(/^0+/, \"\");\n  }\n\n  /**\n   * Count bytes in a string's UTF-8 representation.\n   * @param   string\n   * @return  number\n   */\n  export function getByteLen(value: string): number {\n    var byteLen = 0;\n    for (var i = 0; i < value.length; i++) {\n      var c = value.charCodeAt(i);\n      byteLen += c < (1 <<  7) ? 1 :\n                c < (1 << 11) ? 2 :\n                c < (1 << 16) ? 3 :\n                c < (1 << 21) ? 4 :\n                c < (1 << 26) ? 5 :\n                c < (1 << 31) ? 6 : Number.NaN;\n    }\n    return byteLen;\n  }\n\n  export function debounce(func: Function, wait?: number, immediate?: boolean) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait||100);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  export function repeatWhile(delay: number, cb: ()=>boolean) {\n    var fn = () => {\n      if (cb()) {\n        clearInterval(interval);\n      }\n    }\n    var interval = setInterval(fn, delay);\n  }\n\n  export function emptyToNull(input: string): string {\n    return (angular.isString(input) && input.trim().length == 0) ? null : input;\n  }\n}\n","@Service('ardorCryptoService')\n@Inject('$window', 'user')\nclass ARDORCryptoService {\n\n  private nxtCrypto;\n\n  constructor(private $window: angular.IWindowService,\n    private user: UserService) {\n    this.nxtCrypto = $window.heatlibs.nxtCrypto;\n  }\n\n  /* Sets the seed to this wallet */\n  unlock(seedOrPrivateKey: any): Promise<WalletType> {\n    return new Promise((resolve, reject) => {\n      let walletType = { addresses: [] }\n      let publicKey = this.nxtCrypto.getPublicKey(seedOrPrivateKey)\n      let address = this.nxtCrypto.getAccountRSFromSecretPhrase(seedOrPrivateKey, 'ARDOR')\n      let accountId = this.nxtCrypto.getAccountId(publicKey)\n      walletType.addresses[0] = { address: address, privateKey: seedOrPrivateKey, accountId: accountId }\n      resolve(walletType);\n    });\n  }\n\n  refreshAdressBalances(wallet: WalletType) {\n    let userAccount = wallet.addresses[0].accountId;\n    return new Promise((resolve, reject) => {\n      let ardorBlockExplorerService: ArdorBlockExplorerService = heat.$inject.get('ardorBlockExplorerService')\n      ardorBlockExplorerService.getTransactions(userAccount, 0, 10).then(transactions => {\n        if (transactions.length != 0) {\n          ardorBlockExplorerService.getBalance(userAccount).then(balance => {\n            wallet.addresses[0].balance = new Big(utils.convertToQNTf(balance)).toFixed(8);\n            wallet.addresses[0].inUse = true;\n            ardorBlockExplorerService.getAccountAssets(userAccount).then(accountAssets => {\n              wallet.addresses[0].tokensBalances = []\n              let promises = []\n              accountAssets.forEach(asset => {\n                let promise = ardorBlockExplorerService.getAssetInfo(asset.asset).then(assetInfo => {\n                  wallet.addresses[0].tokensBalances.push({\n                    symbol: assetInfo?assetInfo.name:'',\n                    name: assetInfo?assetInfo.name:'',\n                    decimals: assetInfo.decimals,\n                    balance: utils.formatQNT(asset.unconfirmedQuantityQNT,assetInfo.decimals),\n                    address: asset.asset\n                  })\n                })\n                promises.push(promise)\n              });\n\n              Promise.all(promises).then(() => resolve(true))\n\n              if (accountAssets.length === 0)\n                resolve(true)\n            })\n          })\n        } else {\n          resolve(false)\n        }\n      })\n    })\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Inspired by: https://github.com/ConsenSys/abi-decoder\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('abiDecoder')\n@Inject('web3', '$window')\nclass AbiDecoderService {\n\n  private SolidityCoder: any\n  private Web3: any\n  private state = {\n    savedABIs: [],\n    methodIDs: {}\n  }\n\n  constructor(private web3: Web3Service,\n              private $window: angular.IWindowService) {\n    this.Web3 = $window.heatlibs.Web3\n    this.SolidityCoder = $window.heatlibs.__SolidityCoder\n  }\n\n  public getABIs() {\n    return this.state.savedABIs;\n  }\n\n  public addABI(abiArray) {\n    if (Array.isArray(abiArray)) {\n      // Iterate new abi to generate method id's\n      abiArray.map((abi) => {\n        if (abi.name) {\n          const signature = new (this.Web3)().sha3(abi.name + \"(\" + abi.inputs.map(function (input) { return input.type; }).join(\",\") + \")\");\n          //const signature = this.web3.web3.sha3(abi.name + \"(\" + abi.inputs.map(function(input) {return input.type;}).join(\",\") + \")\");\n          if (abi.type == \"event\") {\n            this.state.methodIDs[signature.slice(2)] = abi;\n          }\n          else {\n            this.state.methodIDs[signature.slice(2, 10)] = abi;\n          }\n        }\n      });\n      this.state.savedABIs = this.state.savedABIs.concat(abiArray);\n    }\n    else {\n      throw new Error(\"Expected ABI array, got \" + typeof abiArray);\n    }\n  }\n\n  public removeABI(abiArray) {\n    if (Array.isArray(abiArray)) {\n      // Iterate new abi to generate method id's\n      abiArray.map((abi) => {\n        if (abi.name) {\n          const signature = new (this.Web3)().sha3(abi.name + \"(\" + abi.inputs.map(function (input) { return input.type; }).join(\",\") + \")\");\n          //const signature = this.web3.web3.sha3(abi.name + \"(\" + abi.inputs.map(function(input) {return input.type;}).join(\",\") + \")\");\n          if (abi.type == \"event\") {\n            if (this.state.methodIDs[signature.slice(2)]) {\n              delete this.state.methodIDs[signature.slice(2)];\n            }\n          }\n          else {\n            if (this.state.methodIDs[signature.slice(2, 10)]) {\n              delete this.state.methodIDs[signature.slice(2, 10)];\n            }\n          }\n        }\n      });\n    }\n    else {\n      throw new Error(\"Expected ABI array, got \" + typeof abiArray);\n    }\n  }\n\n  public getMethodIDs() {\n    return this.state.methodIDs;\n  }\n\n  public decodeMethod(data) {\n    const methodID = data.slice(2, 10);\n    const abiItem = this.state.methodIDs[methodID];\n    if (abiItem) {\n      const params = abiItem.inputs.map(function (item) { return item.type; });\n      let decoded = this.SolidityCoder.decodeParams(params, data.slice(10));\n      //let decoded = this.web3.web3.eth.abi.decodeParameters(params, data.slice(10));\n      return {\n        name: abiItem.name,\n        params: decoded.map(function (param, index) {\n          let parsedParam = param;\n          const isUint = abiItem.inputs[index].type.indexOf(\"uint\") == 0;\n          const isInt = abiItem.inputs[index].type.indexOf(\"int\") == 0;\n\n          if (isUint || isInt) {\n            const isArray = Array.isArray(param);\n\n            if (isArray) {\n              parsedParam = param.map(val => new (this.Web3)().toBigNumber(val).toString());\n            } else {\n              parsedParam = new (this.Web3)().toBigNumber(param).toString();\n            }\n          }\n          return {\n            name: abiItem.inputs[index].name,\n            value: parsedParam,\n            type: abiItem.inputs[index].type\n          };\n        })\n      }\n    }\n  }\n\n  public padZeros(address) {\n    var formatted = address;\n    if (address.indexOf('0x') != -1) {\n      formatted = address.slice(2);\n    }\n\n    if (formatted.length < 40) {\n      while (formatted.length < 40) formatted = \"0\" + formatted;\n    }\n\n    return \"0x\" + formatted;\n  }\n\n  // decodeLogs(logs) {\n  //   return logs.map((logItem) => {\n  //     const methodID = logItem.topics[0].slice(2);\n  //     const method = this.state.methodIDs[methodID];\n  //     if (method) {\n  //       const logData = logItem.data;\n  //       let decodedParams = [];\n  //       let dataIndex = 0;\n  //       let topicsIndex = 1;\n\n  //       let dataTypes = [];\n  //       method.inputs.map(\n  //         function (input) {\n  //           if (!input.indexed) {\n  //             dataTypes.push(input.type);\n  //           }\n  //         }\n  //       );\n  //       const decodedData = this.SolidityCoder.decodeParams(dataTypes, logData.slice(2));\n  //       // Loop topic and data to get the params\n  //       method.inputs.map((param) => {\n  //         var decodedP:any = {\n  //           name: param.name,\n  //           type: param.type\n  //         };\n\n  //         if (param.indexed) {\n  //           decodedP.value = logItem.topics[topicsIndex];\n  //           topicsIndex++;\n  //         }\n  //         else {\n  //           decodedP.value = decodedData[dataIndex];\n  //           dataIndex++;\n  //         }\n\n  //         if (param.type == \"address\"){\n  //           decodedP.value = this.padZeros(new (this.Web3)().toBigNumber(decodedP.value).toString(16));\n  //         }\n  //         else if(param.type == \"uint256\" || param.type == \"uint8\" || param.type == \"int\" ){\n  //           decodedP.value = new (this.Web3)().toBigNumber(decodedP.value).toString(10);\n  //         }\n\n  //         decodedParams.push(decodedP);\n  //       });\n  //       return {\n  //         name: method.name,\n  //         events: decodedParams,\n  //         address: logItem.address\n  //       };\n  //     }\n  //   });\n  // }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nabstract class AbstractDataProvider<T> {\n\n  protected providers: Array<DataProvider<T>> = [];\n  protected data: T;\n  protected isLoading: boolean = false;\n\n  public createProvider($scope: angular.IScope) {\n    var provider = new DataProvider<T>($scope);\n    provider.data = this.getInitialData();\n    this.providers.push(provider);\n    $scope.$on('$destroy', () => { this.destroyProvider(provider) });\n    if (!this.isLoading) {\n      provider.update(this.data);\n    }\n    return provider;\n  }\n\n  private destroyProvider(provider: DataProvider<T>) {\n    this.providers = this.providers.filter((p) => p != provider);\n  }\n\n  abstract getData(): angular.IPromise<T>;\n  abstract getInitialData(): T;\n\n  protected refresh() {\n    this.providers.forEach((provider) => { provider.refreshBegin() });\n    this.isLoading = true;\n    this.getData().then((data: T) => {\n      this.isLoading = false;\n      this.data = data;\n      this.providers.forEach((provider) => { provider.update(data) });\n    });\n  }\n\n}\n\nclass DataProvider<T> {\n\n  public data: T;\n  public loading: boolean = true;\n\n  constructor(private $scope: angular.IScope) {}\n\n  public update(data: T) {\n    this.$scope.$evalAsync(() => {\n      this.loading = false;\n      this.data = data;\n    });\n  }\n\n  public refreshBegin() {\n    this.loading = true;\n    this.$scope.$evalAsync(angular.noop);\n  }\n}","@Service('ardorAssetInfo')\n@Inject('heat', '$q', 'ardorBlockExplorerService')\nclass ArdorAssetInfoService {\n\n  cache: IStringHashMap<AssetInfo> = {};\n\n  constructor(private heat: HeatService,\n              private $q: angular.IQService,\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\n\n    this.cache[\"ardor\"] = {\n      id: \"ardor\",\n      description: \"IGNIS Cryptocurrency based on ARDOR platform\",\n      descriptionUrl: \"\",\n      decimals: 8,\n      symbol: \"IGNIS\",\n      name: \"IGNIS\",\n      certified: true,\n      timestamp: 100149557,\n      issuer: \"ARDOR\",\n      issuerPublicName: \"ARDOR\"\n    };\n  }\n\n  getInfo(asset: string): angular.IPromise<AssetInfo> {\n    let deferred = this.$q.defer<AssetInfo>();\n    if (angular.isDefined(this.cache[asset])) {\n      deferred.resolve(this.cache[asset]);\n    } else {\n      this.ardorBlockExplorerService.getAssetInfo(asset).then((data) => {\n        var info: AssetInfo = {\n          id: asset,\n          description: null,\n          descriptionUrl: data.descriptionUrl,\n          decimals: data.decimals,\n          symbol: data.name,\n          name: data.name,\n          certified: false,\n          timestamp: data.timestamp,\n          issuer: data.account,\n          issuerPublicName: data.accountPublicName\n        };\n        this.cache[asset] = info;\n        deferred.resolve(info);\n      }, deferred.reject);\n    }\n    return deferred.promise;\n  }\n}","@Service('ardorBlockExplorerService')\n@Inject('$q', 'http')\nclass ArdorBlockExplorerService {\n  private url: string;\n\n  constructor(\n    private $q: angular.IQService,\n    private http: HttpService) {\n    this.setUrl()\n  }\n\n  public setUrl(url = 'https://bitnode.heatwallet.com:27876/') {\n    console.log(\"This is url\", url);\n    this.url = url;\n  }\n\n  getSocketUrl = () => {\n    return this.url\n  }\n\n  public getBlockchainStatus = () => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBlockchainStatus`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if (data) {\n        deferred.resolve(data)\n      }\n      else\n        deferred.reject()\n    });\n    return deferred.promise;\n  }\n\n  public getTransactions = (account, firstIndex, lastIndex) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBlockchainTransactions&account=${account}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&chain=1`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if (data.transactions) {\n        deferred.resolve(data.transactions)\n      }\n      else\n        deferred.reject()\n    });\n    return deferred.promise;\n  }\n\n  public getTransactionsCount = (account) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBlockchainTransactions&account=${account}&lastIndex=-1&chain=1`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if (data.transactions)\n        deferred.resolve(data.transactions.length)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public sendArdr = (txObject) => {\n    let deferred = this.$q.defer<any>();\n    this.http.post(this.url + txObject, {}).then(ret => {\n      let userService: UserService = heat.$inject.get('user')\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if(data.errorDescription) {\n\n        deferred.reject(data.errorDescription)\n      }\n      // deferred.resolve({txId: data.transactionJSON.transaction, fullHash: data.fullHash})\n      let attachment = JSON.stringify(data.transactionJSON.attachment);\n      var signature = heat.crypto.signBytes(data.unsignedTransactionBytes, converters.stringToHexString(userService.secretPhrase))\n      var payload = data.unsignedTransactionBytes.substr(0, 192) + signature + data.unsignedTransactionBytes.substr(320);\n      this.http.post(`${this.url}nxt?requestType=broadcastTransaction&transactionBytes=${payload}&prunableAttachmentJSON=${attachment}`, {}).then(ret => {\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n        if(data.errorDescription) {\n          deferred.reject(data.errorDescription)\n        }\n        deferred.resolve({ txId: data.transaction })\n      })\n    }, err => {\n      deferred.reject(err.errorDescription)\n    })\n    return deferred.promise;\n  }\n\n  public getTransactionStatus = (fullHash) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getTransaction&fullHash=${fullHash}&chain=1`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (!data.errorDescription)\n        deferred.resolve(data)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAccountAssets = (tx) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getAccountAssets&account=${tx}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.accountAssets)\n        deferred.resolve(data.accountAssets)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getBalance = (account: string, chain: number = 1) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBalance&account=${account}&chain=${chain}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.unconfirmedBalanceNQT)\n        deferred.resolve(data.unconfirmedBalanceNQT)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getPublicKeyFromAddress = (account: string) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getAccountPublicKey&account=${account}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.publicKey)\n        deferred.resolve(data.publicKey)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAssetInfo = (asset: string) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getAsset&asset=${asset}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.name)\n        deferred.resolve(data)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getTradesCount(ardorAsset: string, account?: string): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    let url = account ? `${this.url}nxt?requestType=getTrades&chain=2&ardorAsset=${ardorAsset}&firstIndex=0&lastIndex=-1&account=${account}` : `${this.url}nxt?requestType=getTrades&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.trades)\n        deferred.resolve(data.trades.length)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n\n  public getTrades(ardorAsset: string, firstIndex: number, lastIndex: number, account?: string): angular.IPromise<any> {\n    let deferred = this.$q.defer<any>();\n    let url = account ? `${this.url}nxt?requestType=getTrades&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&account=${account}` : `${this.url}nxt?requestType=getTrades&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.trades)\n        deferred.resolve(data.trades)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAskOrdersCount(ardorAsset: string): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    let url = `${this.url}nxt?requestType=getAskOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.askOrders)\n        deferred.resolve(data.askOrders.length)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAskOrders(ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\n    let deferred = this.$q.defer<any>();\n    let url = `${this.url}nxt?requestType=getAskOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.askOrders)\n        deferred.resolve(data.askOrders)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getBidOrdersCount(ardorAsset: string): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    let url = `${this.url}nxt?requestType=getBidOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.bidOrders)\n        deferred.resolve(data.bidOrders.length)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getBidOrders(ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\n    let deferred = this.$q.defer<any>();\n    let url = `${this.url}nxt?requestType=getBidOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.bidOrders)\n        deferred.resolve(data.bidOrders)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getMyPendingOrders(account: string, ardorAsset: string, firstIndex: number, lastIndex: number) {\n    let promises = [];\n    let deferred = this.$q.defer<any>();\n    promises.push(this.getAccountCurrentAskOrders(account, ardorAsset, firstIndex, lastIndex))\n    promises.push(this.getAccountCurrentBidOrders(account, ardorAsset, firstIndex, lastIndex))\n\n    let myPendingOrders = []\n    Promise.all(promises).then(values => {\n      values.forEach(value => {\n        myPendingOrders = myPendingOrders.concat(value)\n      })\n      deferred.resolve(myPendingOrders)\n    })\n    return deferred.promise;\n  }\n\n  public getMyPendingOrdersCount(account: string, ardorAsset: string) {\n    let promises = [];\n    let deferred = this.$q.defer<number>();\n    promises.push(this.getAccountCurrentAskOrdersCount(account, ardorAsset))\n    promises.push(this.getAccountCurrentBidOrdersCount(account, ardorAsset))\n\n    let myPendingOrdersCount = 0\n    Promise.all(promises).then(values => {\n      values.forEach(value => {\n        myPendingOrdersCount += value\n      })\n      deferred.resolve(myPendingOrdersCount)\n    })\n    return deferred.promise;\n  }\n\n  public getAccountCurrentBidOrders(account: string, ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\n    let deferred = this.$q.defer<any>();\n    let url = `${this.url}nxt?requestType=getAccountCurrentBidOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&account=${account}`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.bidOrders)\n        deferred.resolve(data.bidOrders)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAccountCurrentBidOrdersCount(account: string, ardorAsset: string): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    let url = `${this.url}nxt?requestType=getAccountCurrentBidOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1&account=${account}`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.bidOrders)\n        deferred.resolve(data.bidOrders.length)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAccountCurrentAskOrders(account: string, ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\n    let deferred = this.$q.defer<any>();\n    let url = `${this.url}nxt?requestType=getAccountCurrentAskOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&account=${account}`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.askOrders)\n        deferred.resolve(data.askOrders)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAccountCurrentAskOrdersCount(account: string, ardorAsset: string): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    let url = `${this.url}nxt?requestType=getAccountCurrentAskOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1&account=${account}`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.askOrders)\n        deferred.resolve(data.askOrders.length)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAllAssets(): angular.IPromise<any> {\n    let deferred = this.$q.defer<any>();\n    let url = `${this.url}nxt?requestType=getAllAssets&firstIndex=0&lastIndex=-1`\n    this.http.get(url).then(response => {\n      let data = angular.isString(response) ? JSON.parse(response) : response;\n      if (data.assets)\n        deferred.resolve(data.assets)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public sendTransactionWithSecret = (endpoint) => {\n    let deferred = this.$q.defer<any>();\n    this.http.post(`${this.url}nxt?requestType=${endpoint}`, {}).then(ret => {\n      let data = JSON.parse(JSON.stringify(ret))\n      if (data.errorDescription) {\n        deferred.reject(data.errorDescription)\n      }\n      deferred.resolve({ txId: data.transaction })\n    })\n    return deferred.promise;\n  }\n\n}\n","@Service('ardorPendingTransactions')\n@Inject('$q', 'http', 'settings')\nclass ArdorPendingTransactionsService {\n\n  public pending: {[address:string]:Array<{txId:string,time:number, fullHash: string}>} = {}\n  private listeners: Array<(removed?: boolean)=>void> = []\n\n  constructor(public $q: angular.IQService,\n              private http: HttpService,\n              private settings: SettingsService) {\n    this.readLocalStorage()\n  }\n\n  readLocalStorage() {\n    this.pending = {}\n    for (let i=0; i<window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      if (key.startsWith('ardrPendingTxn:')) {\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3]), fullHash = parts[4]\n        this.pending[addr] = this.pending[addr] || []\n        this.pending[addr].push({txId:txId, time: time, fullHash: fullHash});\n      }\n    }\n  }\n\n  add(address:string, txId:string, timestamp: number, fullHash: string) {\n    window.localStorage.setItem(`ardrPendingTxn:${address}:${txId}:${timestamp}:${fullHash}`, \"1\")\n    this.readLocalStorage()\n    this.notifyListeners(false)\n  }\n\n  remove(address:string, txId:string, timestamp: number, fullHash: string) {\n    window.localStorage.removeItem(`ardrPendingTxn:${address}:${txId}:${timestamp}:${fullHash}`)\n    this.readLocalStorage()\n    this.notifyListeners(true)\n  }\n\n  addListener(func: (removed?: boolean)=>void) {\n    this.removeListener(func)\n    this.listeners.push(func)\n  }\n\n  removeListener(func: (removed?: boolean)=>void) {\n    this.listeners = this.listeners.filter(fn => fn !== func)\n  }\n\n  notifyListeners(removed: boolean) {\n    this.listeners.forEach(fn => fn(removed))\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface AssetInfo {\n  id: string;\n  description: string;\n  descriptionUrl: string;\n  decimals: number;\n  symbol: string;\n  name: string;\n  certified: boolean;\n  timestamp: number;\n  issuer: string;\n  issuerPublicName: string;\n  userBalance?: string;\n}\n\ninterface AssetPropertiesProtocol1 {\n  symbol: string;\n  name: string;\n  certified?: boolean;\n}\n\n@Service('assetInfo')\n@Inject('heat', '$q','assetCertification','http')\nclass AssetInfoService {\n\n  // Heat Ledger Ltd certified assets symbols.\n  certifiedSymbols = {\n    \"btc\": \"5592059897546023466\",\n    \"fimk\": \"8593933499455210945\",\n    \"gnt\": \"12638687347417181640\",\n    \"xrp\": \"3861265706988762530\",\n    \"nxt\": \"12723185826655406325\",\n    \"ardr\": \"17622812277075597103\"\n  };\n\n  cache: IStringHashMap<AssetInfo> = {};\n\n  constructor(private heat: HeatService,\n              private $q: angular.IQService,\n              private assetCertification: AssetCertificationService,\n              private http: HttpService) {\n    this.cache[\"0\"] = {\n      id: \"0\",\n      description: \"HEAT Cryptocurrency\",\n      descriptionUrl: \"\",\n      decimals: 8,\n      symbol: \"HEAT\",\n      name: \"HEAT Cryptocurrency\",\n      certified: true,\n      timestamp: 100149557,\n      issuer: \"8150091319858025343\",\n      issuerPublicName: \"HEAT blockchain Genesis account\"\n    };\n  }\n\n  getDisplaySymbol(asset: string, symbol: string) {\n    let lowerCaseSymbol = symbol.toLowerCase();\n    if (angular.isString(this.certifiedSymbols[lowerCaseSymbol])) {\n      if (this.certifiedSymbols[lowerCaseSymbol] != asset) {\n        return symbol.slice(0, -1) + '-';\n      }\n    }\n    return symbol;\n  }\n\n  getInfo(asset: string): angular.IPromise<AssetInfo> {\n    let deferred = this.$q.defer<AssetInfo>();\n    if (angular.isDefined(this.cache[asset])) {\n      deferred.resolve(this.cache[asset]);\n    }\n    else {\n      this.heat.api.getAssetProperties(asset, \"0\", 1).then((data) => {\n        var properties = this.parseProperties(data.properties, {\n          symbol: asset.substring(0, 4),\n          name: asset,\n          certified: false\n        });\n        var info: AssetInfo = {\n          id: asset,\n          description: null,\n          descriptionUrl: data.descriptionUrl,\n          decimals: data.decimals,\n          symbol: this.getDisplaySymbol(asset, properties.symbol||''),\n          name: properties.name,\n          certified: false,\n          timestamp: data.timestamp,\n          issuer: data.account,\n          issuerPublicName: data.accountPublicName\n        };\n        this.cache[asset] = info;\n        this.assetCertification.getInfo(asset).then((certificationData)=> {\n          if (certificationData.certified) {\n            info.symbol = certificationData.symbol;\n            info.name = certificationData.name;\n            info.certified = certificationData.certified;\n          }\n          deferred.resolve(info);\n        }, deferred.reject);\n      }, deferred.reject);\n    }\n    return deferred.promise;\n  }\n\n  public parseProperties(properties: string, fallback: AssetPropertiesProtocol1): AssetPropertiesProtocol1 {\n    try {\n      var json = JSON.parse(properties);\n      return {\n        symbol: json[0],\n        name: json[1],\n        certified: false\n      };\n    } catch (e) {\n      //console.error(e);\n    }\n    return fallback;\n  }\n\n  public stringifyProperties(properties: AssetPropertiesProtocol1) {\n    return JSON.stringify([properties.symbol, properties.name]);\n  }\n\n  public getAssetDescription(info: AssetInfo): angular.IPromise<string> {\n    let deferred = this.$q.defer<string>();\n    let noDescription = \"No description available ...\";\n    if (angular.isString(info.description) || !info.descriptionUrl) {\n      deferred.resolve(info.description||noDescription);\n    }\n    else {\n      this.http.get(info.descriptionUrl).then((text)=>{\n        info.description = text;\n        deferred.resolve(text);\n      }, () => {\n        deferred.resolve(noDescription);\n      });\n    }\n    return deferred.promise;\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('assetCertification')\n@Inject('heat', '$q','settings')\nclass AssetCertificationService {\n\n  cache: IStringHashMap<IHeatAssetCertification> = {};\n\n  constructor(private heat: HeatService, private $q: angular.IQService, private settings: SettingsService) {\n    this.cache[\"0\"] = {\n      asset: \"0\",\n      certified: true,\n      symbol: \"HEAT\",\n      name: \"HEAT Currency\",\n      certifierAccount: this.settings.get(SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT)\n    };\n  }\n\n  getInfo(asset: string): angular.IPromise<IHeatAssetCertification> {\n    let deferred = this.$q.defer<IHeatAssetCertification>();\n    if (angular.isDefined(this.cache[asset])) {\n      deferred.resolve(this.cache[asset]);\n    }\n    else {\n      this.heat.api.getAssetCertification(asset, this.settings.get(SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT)).then((data) => {\n        this.cache[asset] = data;\n        deferred.resolve(this.cache[asset]);\n      }, deferred.reject);\n    }\n    return deferred.promise;\n  }\n}","\n@Service('btcBlockExplorerService')\n@Inject('http', '$q', 'btcBlockExplorerHeatNodeService', 'btcBlockExplorer3rdPartyService', '$interval')\nclass BtcBlockExplorerService {\n\n  private btcProvider: IBitcoinAPIList;\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private btcBlockExplorerHeatNodeService: BtcBlockExplorerHeatNodeService,\n              private btcBlockExplorer3rdPartyService: BtcBlockExplorer3rdPartyService,\n              private $interval: angular.IIntervalService) {\n    let interval = $interval(() => { this.refresh() }, 60 * 1000, 0, false);\n  }\n\n  public refresh = () => {\n    return this.btcBlockExplorerHeatNodeService.isBlockchainSyncing().then(() => {\n      this.btcProvider = this.btcBlockExplorerHeatNodeService;\n    }, () => {\n      this.btcProvider = this.btcBlockExplorer3rdPartyService;\n    })\n  }\n\n  public getBalance = (address: string) => {\n    return this.btcProvider.getBalance(address)\n  }\n\n  public getTransactions = (address: string, from: number, to: number): angular.IPromise<any> => {\n    return this.btcProvider.getTransactions(address, from, to)\n  }\n\n  public getAddressInfo = (address: string): angular.IPromise<any> => {\n    let deferred = this.$q.defer<any>();\n    this.btcProvider.getAddressInfo(address).then(info => {\n      let data = Update3rdPartyAPIResponsesUtil.updateBTCGetAddressInfo(info, this.btcProvider)\n      deferred.resolve(data)\n    }, ()=> {\n      deferred.reject()\n    })\n    return deferred.promise\n  }\n\n  public getEstimatedFee = () => {\n    return this.btcProvider.getEstimatedFee()\n  }\n\n  public getTxInfo = (txId: string) => {\n    let deferred = this.$q.defer<any>();\n    this.btcProvider.getTxInfo(txId).then(info => {\n      let data = Update3rdPartyAPIResponsesUtil.updateBTCGetTxInfo(info, this.btcProvider)\n      deferred.resolve(data)\n    }, ()=> {\n      deferred.reject()\n    })\n    return deferred.promise\n  }\n\n  public broadcast = (rawTx: string) : any => {\n    return this.btcProvider.broadcast(rawTx)\n  }\n\n  public getUnspentUtxos = (from: string) :  any => {\n    return this.btcProvider.getUnspentUtxos(from)\n  }\n}","@Service('bitcoinMessagesService')\nclass BitcoinMessagesService {\n\n  public messages: {[address:string]:Array<{txId:string,message:string}>} = {}\n  private listeners: Array<(removed?: boolean)=>void> = []\n\n  constructor() {\n    this.readLocalStorage()\n  }\n\n  readLocalStorage() {\n    this.messages = {}\n    for (let i=0; i<window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      if (key.startsWith('btcMessages:')) {\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], message = `${parts[3]}:${parts[4]}`\n        this.messages[addr] = this.messages[addr] || []\n        this.messages[addr].push({txId, message});\n      }\n    }\n  }\n\n  add(address:string, txId:string, message: string) {\n    window.localStorage.setItem(`btcMessages:${address}:${txId}:${message}`, \"1\")\n    this.readLocalStorage()\n    this.notifyListeners(false)\n  }\n\n  remove(address:string, txId:string, message: string) {\n    window.localStorage.removeItem(`btcMessages:${address}:${txId}:${message}`)\n    this.readLocalStorage()\n    this.notifyListeners(true)\n  }\n\n  addListener(func: (removed?: boolean)=>void) {\n    this.removeListener(func)\n    this.listeners.push(func)\n  }\n\n  removeListener(func: (removed?: boolean)=>void) {\n    this.listeners = this.listeners.filter(fn => fn !== func)\n  }\n\n  notifyListeners(removed: boolean) {\n    this.listeners.forEach(fn => fn(removed))\n  }\n}","@Service('bitcoinPendingTransactions')\n@Inject('$q', 'http', 'settings','btcBlockExplorerService')\nclass BitcoinPendingTransactionsService {\n\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\n  private listeners: Array<(removed?: boolean)=>void> = []\n\n  constructor(public $q: angular.IQService,\n              private http: HttpService,\n              private settings: SettingsService,\n              private btcBlockExplorerService: BtcBlockExplorerService) {\n    this.readLocalStorage()\n  }\n\n  readLocalStorage() {\n    this.pending = {}\n    for (let i=0; i<window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      if (key.startsWith('btcPendingTxn:')) {\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\n        this.pending[addr] = this.pending[addr] || []\n        this.pending[addr].push({txId:txId, time: time});\n      }\n    }\n  }\n\n  add(address:string, txId:string, timestamp: number) {\n    window.localStorage.setItem(`btcPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\n    this.readLocalStorage()\n    this.notifyListeners(false)\n  }\n\n  remove(address:string, txId:string, timestamp: number) {\n    window.localStorage.removeItem(`btcPendingTxn:${address}:${txId}:${timestamp}`)\n    this.readLocalStorage()\n    this.notifyListeners(true)\n  }\n\n  addListener(func: (removed?: boolean)=>void) {\n    this.removeListener(func)\n    this.listeners.push(func)\n  }\n\n  removeListener(func: (removed?: boolean)=>void) {\n    this.listeners = this.listeners.filter(fn => fn !== func)\n  }\n\n  notifyListeners(removed: boolean) {\n    this.listeners.forEach(fn => fn(removed))\n  }\n}","@Service('bitcoreService')\n@Inject('$window')\nclass BitcoreService {\n\n  static readonly BIP44 = \"m/44'/0'/0'/0/\";\n  private bitcore;\n  private bip39;\n\n  constructor($window: angular.IWindowService) {\n    this.bitcore = $window.heatlibs.bitcore;\n    this.bip39 = $window.heatlibs.bip39;\n  }\n\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\n  unlock(seedOrPrivateKey: any): Promise<WalletType> {\n    return new Promise((resolve, reject) => {\n      if (this.bip39.validateMnemonic(seedOrPrivateKey)) {\n        let walletType = this.getNWalletsFromMnemonics(seedOrPrivateKey, 20)\n        if (walletType.addresses.length === 20) {\n          resolve(walletType);\n        }\n      } else if (this.bitcore.PrivateKey.isValid(seedOrPrivateKey)) {\n        try {\n          let privateKey = this.bitcore.PrivateKey.fromWIF(seedOrPrivateKey)\n          let address = privateKey.toAddress();\n          let walletType = { addresses: [] }\n          walletType.addresses[0] = { address: address.toString(), privateKey: privateKey.toString() }\n          resolve(walletType)\n        } catch (e) {\n          // resolve empty promise if private key is not of this network so that next .then executes\n          resolve()\n        }\n      }\n      else {\n        reject();\n      }\n    });\n  }\n\n  getNWalletsFromMnemonics(mnemonic: string, keyCount: number) {\n    let walletType = { addresses: [] }\n    for (let i = 0; i < keyCount; i++) {\n      let wallet = this.getBitcoinWallet(mnemonic, i)\n      walletType.addresses[i] = { address: wallet.address, privateKey: wallet.privateKey, index: i, balance: \"0\", inUse: false }\n    }\n    return walletType;\n  }\n\n  refreshAdressBalances(wallet: WalletType) {\n    /* list all addresses in bip44 order */\n    let addresses = wallet.addresses.map(a => a.address)\n\n    function processNext() {\n      return new Promise((resolve, reject) => {\n\n        /* get the first element from the list */\n        let address = addresses[0]\n        addresses.shift()\n\n        /* look up its data on btcBlockExplorerService */\n        let btcBlockExplorerService: BtcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\n        btcBlockExplorerService.refresh().then(() => {\n          btcBlockExplorerService.getAddressInfo(address).then(info => {\n\n            /* lookup the 'real' WalletAddress */\n            let walletAddress = wallet.addresses.find(x => x.address == address)\n            if (!walletAddress)\n              return\n\n            walletAddress.inUse = info.txApperances != 0\n            if (!walletAddress.inUse) {\n              resolve(false)\n              return\n            }\n\n            walletAddress.balance = info.balanceSat / 100000000 + \"\"\n            resolve(true)\n          }, () => {\n            resolve(false)\n          })\n        })\n      })\n    }\n\n    let recurseToNext = function recurseToNext(resolve) {\n      processNext().then(\n        hasMore => {\n          if (hasMore) {\n            setTimeout(function () {\n              recurseToNext(resolve)\n            }, 100)\n          }\n          else {\n            resolve()\n          }\n        }\n      )\n    }\n\n    return new Promise(resolve => {\n      recurseToNext(resolve)\n    })\n  }\n\n  signTransaction(txObject: any, uncheckedSerialize: boolean = false): Promise<string> {\n    let btcBlockExplorerService: BtcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\n    return new Promise((resolve, reject) => {\n      btcBlockExplorerService.getUnspentUtxos(txObject.from).then(\n        utxos => {\n          try {\n            let tx = this.bitcore.Transaction();\n            tx.from(utxos)\n            tx.to(txObject.to, txObject.amount)\n            tx.change(txObject.from)\n            tx.fee(txObject.fee)\n            tx.sign(txObject.privateKey)\n            let rawTx;\n            if(uncheckedSerialize)\n              rawTx = tx.uncheckedSerialize()\n            else\n              rawTx = tx.serialize()\n            resolve(rawTx)\n\n          } catch (err) {\n            reject(err)\n          }\n        },\n        err => {\n          reject(err)\n        }\n      )\n    })\n  }\n\n  sendBitcoins(txObject: any): Promise<{ txId: string, message: string }> {\n    let btcBlockExplorerService: BtcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\n    return new Promise((resolve, reject) => {\n      this.signTransaction(txObject).then(rawTx => {\n        btcBlockExplorerService.broadcast(rawTx).then(\n          txId => {\n            resolve({txId : txId.txId, message: ''})\n          },\n          error => {\n            reject(error)\n          }\n        )\n      })\n    })\n  }\n\n  getBitcoinWallet(mnemonic: string, index: Number = 0) {\n\n    let seedHex = this.bip39.mnemonicToSeedHex(mnemonic)\n    let HDPrivateKey = this.bitcore.HDPrivateKey;\n    let hdPrivateKey = HDPrivateKey.fromSeed(seedHex, 'mainnet')\n\n    let derived = hdPrivateKey.derive(BitcoreService.BIP44 + index);\n    let address = derived.privateKey.toAddress();\n    let privateKey = derived.privateKey.toWIF();\n    return {\n      address: address.toString(),\n      privateKey: privateKey.toString()\n    }\n  }\n}","@Service('btcBlockExplorer3rdPartyService')\n@Inject('http', '$q', '$window')\nclass BtcBlockExplorer3rdPartyService implements IBitcoinAPIList {\n\n  public static endPoint: string;\n  private static token = 'd7995959366d4369976aabb3355c7216'\n  private bitcore;\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private $window: angular.IWindowService) {\n    BtcBlockExplorer3rdPartyService.endPoint = 'https://api.blockcypher.com/v1/btc/main';\n    this.bitcore = $window.heatlibs.bitcore;\n  }\n\n  public getBalance = (address: string) => {\n    let deferred = this.$q.defer<number>();\n    this.getAddressInfo(address).then(response => {\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\n      deferred.resolve(parsed.final_balance)\n    }, () => {\n      deferred.reject()\n    })\n    return deferred.promise\n  }\n\n  public getTransactions = (address: string, from: number, to: number): angular.IPromise<any> => {\n    let pageNum = 0;\n    pageNum = (to / 10) - 1;\n    let getTransactionsApi = `https://blockexplorer.com/api/txs/?address=${address}&pageNum=${pageNum}`;\n    let deferred = this.$q.defer();\n    this.http.get(getTransactionsApi).then(response => {\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\n      deferred.resolve(parsed.txs)\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise;\n  }\n\n  public getAddressInfo = (address: string): angular.IPromise<any> => {\n    let getTransactionsApi = `${BtcBlockExplorer3rdPartyService.endPoint}/addrs/${address}?token=${BtcBlockExplorer3rdPartyService.token}`;\n    let deferred = this.$q.defer<any>();\n    this.http.get(getTransactionsApi).then(response => {\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\n      deferred.resolve(parsed);\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise\n  }\n\n  public getEstimatedFee = () => {\n    let getEstimatedFeeApi = `https://bitcoinfees.earn.com/api/v1/fees/list`;\n    let deferred = this.$q.defer();\n    let fee = 20;\n    this.http.get(getEstimatedFeeApi).then(response => {\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\n      parsed.fees.forEach(feeObject => {\n        if (feeObject.maxDelay == 1) {\n          fee = feeObject.minFee\n        }\n      });\n      if (!fee)\n        fee = 20\n      deferred.resolve(fee);\n    }, () => {\n      deferred.resolve(fee);\n    })\n    return deferred.promise\n  }\n\n  public getTxInfo = (txId: string) => {\n    let getTxInfoApi = `${BtcBlockExplorer3rdPartyService.endPoint}/tx/${txId}?token=${BtcBlockExplorer3rdPartyService.token}`;\n    let deferred = this.$q.defer<any>();\n    this.http.get(getTxInfoApi).then(response => {\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\n      deferred.resolve(parsed);\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise\n  }\n\n  public getUnspentUtxos(addresses) {\n    const Address = this.bitcore.Address;\n    const Transaction = this.bitcore.Transaction;\n    const UnspentOutput = Transaction.UnspentOutput;\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(addresses)) {\n        addresses = [addresses];\n      }\n      addresses = addresses.map((address) => new Address(address));\n      this.http.post(`https://insight.bitpay.com/api/addrs/utxo`, {\n        addrs: addresses.map((address) => address.toString()).join(',')\n      }).then(\n        response => {\n          try {\n            resolve((<[any]>response).map(unspent => new UnspentOutput(unspent)))\n          } catch (ex) {\n            reject(ex);\n          }\n        },\n        error => {\n          reject(error)\n        }\n      )\n    })\n  }\n\n  public broadcast = (rawTx: string) => {\n    return new Promise<{ txId: string }>((resolve, reject) => {\n      this.http.post(`https://insight.bitpay.com/api/tx/send`, { rawtx: rawTx }).then(\n        response => {\n          let txId = response ? response['txid'] : null\n          resolve({ txId: txId })\n        },\n        error => {\n          reject(error)\n        }\n      )\n    })\n  }\n}","\n@Service('btcBlockExplorerHeatNodeService')\n@Inject('http', '$q', '$window')\nclass BtcBlockExplorerHeatNodeService implements IBitcoinAPIList {\n\n  static endPoint: string;\n  private bitcore;\n\n  constructor(private http: HttpService,\n              private $q: angular.IQService,\n              private $window: angular.IWindowService) {\n    BtcBlockExplorerHeatNodeService.endPoint = 'https://bitnode.heatwallet.com/insight-api';\n    this.bitcore = $window.heatlibs.bitcore;\n  }\n\n  public getBalance = (address: string) => {\n    let deferred = this.$q.defer<number>();\n    this.getAddressInfo(address).then(response => {\n      let parsed = utils.parseResponse(response)\n      if(parsed.heatUtilParsingError)\n        deferred.reject()\n      deferred.resolve(parsed.balanceSat + parsed.unconfirmedBalanceSat)\n    }, () => {\n      deferred.reject()\n    })\n    return deferred.promise\n  }\n\n  public getTransactions = (address: string, from: number, to: number): angular.IPromise<any> => {\n    let getTransactionsApi = `${BtcBlockExplorerHeatNodeService.endPoint}/addrs/${address}/txs?from=${from}&to=${to}`;\n    let deferred = this.$q.defer();\n    this.http.get(getTransactionsApi).then(response => {\n      let parsed = utils.parseResponse(response)\n      if(parsed.heatUtilParsingError)\n        deferred.reject()\n      deferred.resolve(parsed.items)\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise;\n  }\n\n  public getAddressInfo = (address: string): angular.IPromise<any> => {\n    let getTransactionsApi = `${BtcBlockExplorerHeatNodeService.endPoint}/addr/${address}`;\n    let deferred = this.$q.defer<any>();\n    this.http.get(getTransactionsApi).then(response => {\n      let parsed = utils.parseResponse(response)\n      if(parsed.heatUtilParsingError)\n        deferred.reject()\n      deferred.resolve(parsed);\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise\n  }\n\n  public getEstimatedFee = () => {\n    let getEstimatedFeeApi = `https://bitcoinfees.earn.com/api/v1/fees/list`;\n    let deferred = this.$q.defer();\n    let fee = 20;\n    this.http.get(getEstimatedFeeApi).then(response => {\n      let parsed = utils.parseResponse(response)\n      if(parsed.heatUtilParsingError)\n        deferred.reject()\n      parsed.fees.forEach(feeObject => {\n        if (feeObject.maxDelay == 1) {\n          fee = feeObject.minFee\n        }\n      });\n      if (!fee)\n        fee = 20\n      deferred.resolve(fee);\n    }, () => {\n      deferred.resolve(fee);\n    })\n    return deferred.promise\n  }\n\n  public getTxInfo = (txId: string) => {\n    let getTxInfoApi = `${BtcBlockExplorerHeatNodeService.endPoint}/tx/${txId}`;\n    let deferred = this.$q.defer<any>();\n    this.http.get(getTxInfoApi).then(response => {\n      let parsed = utils.parseResponse(response)\n      if(parsed.heatUtilParsingError)\n        deferred.reject()\n      deferred.resolve(parsed);\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise\n  }\n\n  public getLatestBlockHash = () => {\n    let getLatestBlockHash = `${BtcBlockExplorerHeatNodeService.endPoint}/status?q=getLastBlockHash`\n    let deferred = this.$q.defer<any>();\n    this.http.get(getLatestBlockHash).then(response => {\n      let parsed = utils.parseResponse(response)\n      deferred.resolve(parsed.lastblockhash);\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise\n  }\n\n  public isBlockchainSyncing = () => {\n    let deferred = this.$q.defer<any>();\n    this.getLatestBlockHash().then(blockHash => {\n      this.getBlockByHash(blockHash).then(response => {\n        let parsed = utils.parseResponse(response)\n        if(utils.isTimeWithinThreasholdLimit(parsed.time))\n          deferred.resolve()\n        else\n          deferred.reject()\n      })\n    })\n    return deferred.promise\n  }\n\n  public getBlockByHash = (blockHash) => {\n    let getBlockByHash = `${BtcBlockExplorerHeatNodeService.endPoint}/block/${blockHash}`\n    let deferred = this.$q.defer<any>();\n    this.http.get(getBlockByHash).then(response => {\n      let parsed = utils.parseResponse(response)\n      deferred.resolve(parsed);\n    }, () => {\n      deferred.reject();\n    })\n    return deferred.promise\n  }\n\n  public getUnspentUtxos(addresses) {\n    const Address = this.bitcore.Address;\n    const Transaction = this.bitcore.Transaction;\n    const UnspentOutput = Transaction.UnspentOutput;\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(addresses)) {\n        addresses = [addresses];\n      }\n      addresses = addresses.map((address) => new Address(address));\n      this.http.post(`${BtcBlockExplorerHeatNodeService.endPoint}/addrs/utxo`, {\n        addrs: addresses.map((address) => address.toString()).join(',')\n      }).then(\n        response => {\n          try {\n            resolve((<[any]>response).map(unspent => new UnspentOutput(unspent)))\n          } catch (ex) {\n            reject(ex);\n          }\n        },\n        error => {\n          reject(error)\n        }\n      )\n    })\n  }\n\n  public broadcast = (rawTx: string) => {\n    return new Promise<{ txId: string }>((resolve, reject) => {\n      this.http.post(`${BtcBlockExplorerHeatNodeService.endPoint}/tx/send`, { rawtx: rawTx }).then(\n        response => {\n          let txId = response ? response['txid'] : null\n          resolve({ txId: txId })\n        },\n        error => {\n          reject(error)\n        }\n      )\n    })\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare var Clipboard: any;\n@Service('clipboard')\n@Inject('$q', '$mdToast')\nclass ClipboardService {\n\n  constructor(private $q: angular.IQService,\n              private $mdToast: angular.material.IToastService) {}\n\n  /**\n   * Copies the text contents of the element and returns a promise.\n   *\n   * In case text could not be copied since we are on a device that does\n   * not support `document.execCommand` (like Safari). The promise is\n   * rejected but the text contents of the element will remain selected,\n   * the user now has to copy the text by pressing CTRL+C.\n   */\n  copy(element: Element): angular.IPromise<any> {\n    var deferred = this.$q.defer();\n\n    window.getSelection().removeAllRanges();\n    var range = document.createRange();\n    range.selectNode(element);\n    window.getSelection().addRange(range);\n\n    try {\n      if (document.execCommand('copy')) {\n        window.getSelection().removeAllRanges();\n        deferred.resolve();\n      }\n      else {\n        deferred.reject();\n      }\n    } catch (e) {\n      deferred.reject();\n    }\n    return deferred.promise;\n  }\n\n  copyText(text: string, successMessage?: string) {\n    var tempInput = <any> document.createElement(\"input\");\n    tempInput.style = \"position: absolute; left: -1000px; top: -1000px\";\n    tempInput.value = text;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(tempInput);\n    if (successMessage) {\n      this.$mdToast.show(\n        this.$mdToast.simple().textContent(successMessage).hideDelay(5000)\n      )\n    }\n  }\n\n  /**\n   * Copies the text contents of the element and displays a TOAST upon\n   * success, in case the text could not be copied but an instruction is\n   * displayed to use CTRL+C.\n   */\n  copyWithUI(element: Element, successMessage: string) : angular.IPromise<any> {\n    return this.copy(element).then(\n      () => {\n        this.$mdToast.show(\n          this.$mdToast.simple()\n              .textContent(successMessage)\n              .hideDelay(5000)\n        )\n      },\n      () => {\n        this.$mdToast.show(\n          this.$mdToast.simple()\n              .textContent(\"Press CTRL+C to copy\")\n              .hideDelay(10000)\n        )\n      }\n    )\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n/* https://github.com/electron/electron/blob/master/docs/api/web-contents.md#contentsopendevtoolsoptions */\nenum OpenDevToolsMode {\n  \"right\",\n  \"bottom\",\n  \"undocked\",\n  \"detach\"\n}\n\n@Service('electron')\n@Inject('env')\nclass ElectronService {\n\n  private enabled: boolean = false;\n\n  /* @see https://github.com/electron/electron/blob/master/docs/api/web-contents.md */\n  constructor(env: EnvService) {\n    this.enabled = env.type == EnvType.NODEJS;\n  }\n\n  /* Return the first instance since the second one is the dev-tools window,\n     when we start using multi-window ui this needs a look. */\n  // TODO\n  private getMainWindowWebContents() {\n    try {\n      return require('electron').remote.webContents.getAllWebContents()[0];\n    } catch (e) {\n      if (this.enabled)\n        throw e;\n      console.log(\"Do not access the `electron` service in browser env\", e);\n    }\n  }\n\n  openDevTools(option: OpenDevToolsMode) {\n    this.enabled && this.getMainWindowWebContents().openDevTools({mode:option});\n  }\n\n  toggleDevTools() {\n    this.enabled && this.getMainWindowWebContents().toggleDevTools();\n  }\n\n  isDevToolsOpened() {\n    return this.enabled && this.getMainWindowWebContents().isDevToolsOpened();\n  }\n\n  reload() {\n    this.enabled && this.getMainWindowWebContents().reload();\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nenum EnvType {\n  NODEJS,\n  BROWSER\n}\n@Service('env')\nclass EnvService {\n  public type: EnvType;\n  constructor() {\n    try {\n      if (typeof window['require'] == 'function' && window['require']('child_process')) {\n        this.type = EnvType.NODEJS;\n      }\n      else {\n        this.type = EnvType.BROWSER;\n      }\n    } catch (e) {\n      this.type = EnvType.BROWSER;\n    }\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface EthplorerAddressTransactionExtended extends EthplorerAddressTransaction {\n  abi?: {\n    symbol: string;\n    name: string;\n    decimals: number;\n    address: string;\n    decodedData?: {\n      name: string;\n      params: any;\n    }\n  }\n}\n\ndeclare type JSONTokenMap = {[address:string]:{symbol:string,decimal:number}}\n@Service('ethTransactionParser')\n@Inject('$q','abiDecoder','http','settings','ethplorer')\nclass EthTransactionParserService {\n\n  /* The ERC-20 standard ABI */\n  private erc20Abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]\n\n  /* The EtherDelta ABI */\n  private etherDeltaAbi = [{\"constant\":false,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"trade\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"order\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderFills\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"amountFilled\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeMake_\",\"type\":\"uint256\"}],\"name\":\"changeFeeMake\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeMake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeRebate_\",\"type\":\"uint256\"}],\"name\":\"changeFeeRebate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"testTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeAccount_\",\"type\":\"address\"}],\"name\":\"changeFeeAccount\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRebate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeTake_\",\"type\":\"uint256\"}],\"name\":\"changeFeeTake\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountLevelsAddr_\",\"type\":\"address\"}],\"name\":\"changeAccountLevelsAddr\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accountLevelsAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"availableVolume\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"admin_\",\"type\":\"address\"},{\"name\":\"feeAccount_\",\"type\":\"address\"},{\"name\":\"accountLevelsAddr_\",\"type\":\"address\"},{\"name\":\"feeMake_\",\"type\":\"uint256\"},{\"name\":\"feeTake_\",\"type\":\"uint256\"},{\"name\":\"feeRebate_\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"expires\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"expires\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"v\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"r\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"get\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"give\",\"type\":\"address\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]\n\n  constructor(private $q: angular.IQService,\n              private abiDecoder: AbiDecoderService,\n              private http: HttpService,\n              private settings: SettingsService,\n              private ethplorer: EthplorerService) {\n    this.abiDecoder.addABI(this.erc20Abi)\n    this.abiDecoder.addABI(this.etherDeltaAbi)\n  }\n\n  parse(transactions: EthplorerAddressTransaction[]): Array<EthplorerAddressTransactionExtended> {\n    let result: Array<EthplorerAddressTransactionExtended> = []\n    transactions.forEach(transaction => {\n      if (!transaction)\n        return\n\n      let extended: EthplorerAddressTransactionExtended = <any>transaction\n      result.push(extended)\n\n      /* Is recipient a token contract address ? */\n      let tokenInfo = this.ethplorer.tokenInfoCache[transaction.to]\n      if (tokenInfo) {\n        extended.abi = {\n          symbol: tokenInfo.symbol,\n          name: tokenInfo.name,\n          decimals: tokenInfo.decimals,\n          address: tokenInfo.address,\n          decodedData: null\n        }\n\n        /* Now try and interpret the ABI data */\n        try {\n          extended.abi.decodedData = this.abiDecoder.decodeMethod(transaction.input)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    })\n    return result\n  }\n\n  // /* This loads the ABI from etherscan but is needed only in case the token is non erc20 */\n  // loadAbi(contractAddress: string) {\n  //   if (this.abiDataPromises[contractAddress])\n  //     return this.abiDataPromises[contractAddress]\n\n  //   let deferred = this.$q.defer<{}>()\n  //   this.abiDataPromises[contractAddress] = deferred.promise\n\n  //   let url = this.settings.get(SettingsService.ETHERSCAN_CONTRACT_ABI)\n  //     .replace(\":addresses\", contractAddress)\n  //     .replace(\":apiToken\", this.settings.get(SettingsService.ETHERSCAN_API_TOKEN))\n  //   this.http.get(url).then(\n  //     response => {\n  //       if (response['status']=='1') {\n  //         deferred.resolve(JSON.parse(response['result']))\n  //       }\n  //       else {\n  //         console.log(`Could not load ABI for ${contractAddress}`)\n  //         deferred.resolve([])\n  //       }\n  //     },\n  //     (err) => {\n  //       console.log(err)\n  //       delete this.abiDataPromises[contractAddress] // we delete the promise in case of failure which means we try again later\n  //     }\n  //   )\n  //   return this.abiDataPromises[contractAddress]\n  // }\n\n  // loadEthTokens(): angular.IPromise<JSONTokenMap> {\n  //   if (this.jsonTokensPromise)\n  //     return this.jsonTokensPromise\n\n  //   let deferred = this.$q.defer<any>()\n  //   this.jsonTokensPromise = deferred.promise\n  //   this.http.get('https://raw.githubusercontent.com/kvhnuke/etherwallet/mercury/app/scripts/tokens/ethTokens.json').then(\n  //     json => {\n  //       let arr = angular.isString(json) ? JSON.parse(json) : json\n  //       let map = {}\n  //       arr.forEach(e => {\n  //         map[e.address] = {\n  //           symbol: e.symbol,\n  //           decimal: e.decimal\n  //         }\n  //       })\n  //       deferred.resolve(map)\n  //     },\n  //     deferred.reject\n  //   )\n  //   return this.jsonTokensPromise\n  // }\n\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('ethereumPendingTransactions')\n@Inject('$q', 'http', 'settings','web3','ethplorer')\nclass EthereumPendingTransactionsService {\n\n  public pending: {[address:string]:Array<{txHash:string,timestamp:number}>} = {}\n  private listeners: Array<(removed?: boolean)=>void> = []\n\n  constructor(public $q: angular.IQService,\n              private http: HttpService,\n              private settings: SettingsService,\n              private web3: Web3Service,\n              private ethplorer: EthplorerService) {\n    this.readLocalStorage()\n  }\n\n  readLocalStorage() {\n    this.pending = {}\n    for (let i=0; i<window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      if (key.startsWith('ethPendingTxn:')) {\n        let parts = key.split(':'), addr = parts[1],  txHash = parts[2], timestamp = parseInt(parts[3])\n        this.pending[addr] = this.pending[addr] || []\n        this.pending[addr].push({txHash:txHash, timestamp: timestamp});\n      }\n    }\n  }\n\n  add(address:string, txHash:string, timestamp: number) {\n    window.localStorage.setItem(`ethPendingTxn:${address}:${txHash}:${timestamp}`, \"1\")\n    this.readLocalStorage()\n    this.notifyListeners(false)\n  }\n\n  remove(address:string, txHash:string, timestamp: number) {\n    window.localStorage.removeItem(`ethPendingTxn:${address}:${txHash}:${timestamp}`)\n    this.readLocalStorage()\n    this.notifyListeners(true)\n  }\n\n  addListener(func: (removed?: boolean)=>void) {\n    this.removeListener(func)\n    this.listeners.push(func)\n  }\n\n  removeListener(func: (removed?: boolean)=>void) {\n    this.listeners = this.listeners.filter(fn => fn !== func)\n  }\n\n  notifyListeners(removed: boolean) {\n    this.listeners.forEach(fn => fn(removed))\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ninterface EthplorerTokenInfo {\n  address: string;\n  totalSupply: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n  // token price (false, if not available)\n  price: {\n    rate: string;\n    currency: string;\n    diff: number;\n    ts: number;\n  };\n  owner: string;\n  countOps: string;\n  totalIn: number;\n  totalOut: number;\n  holdersCount: number;\n  issuancesCount: number;\n}\n\ninterface EthplorerAddressInfo {\n  address: string;\n  ETH: {\n    balance: string;\n    totalIn: string;\n    totalOut: string;\n  };\n  // exists if specified address is a contract\n  contractInfo: {\n    creatorAddress: string;\n    transactionHash: string;\n    timestamp: number;\n  };\n  // exists if specified address is a token contract address (same format as token info),\n  tokenInfo: EthplorerTokenInfo;\n  // exists if specified address has any token balances\n  tokens: Array<{\n    tokenInfo: EthplorerTokenInfo;\n    // token balance (as is, not reduced to a floating point value)\n    balance: string;\n    totalIn: string;\n    totalOut: string;\n  }>;\n  // Total count of incoming and outcoming transactions (including creation one)\n  countTxs: number;\n}\n\n/* These are all address transactions including 0x txns  */\ninterface EthplorerAddressTransaction {\n  // operation timestamp\n  timestamp: number\n  // source address (if two addresses involved)\n  from: string\n  // destination address (if two addresses involved)\n  to: string\n  // transaction hash\n  hash: string\n  // ETH value (as is, not reduced to a floating point value)\n  value: string\n  // input data\n  input: string\n  // true if transactions was completed, false if failed\n  success: boolean\n}\n\n/* These are all address operations, these contain parsed input data turned into operations */\ninterface EthplorerAddressHistoryOperation {\n  // operation timestamp\n  timestamp: number\n  transactionHash: string;\n  // token data (same format as token info)\n  tokenInfo: EthplorerTokenInfo\n  // operation type (transfer, approve, issuance, mint, burn, etc)\n  type: string\n  // operation target address (if one)\n  address: string\n  // source address (if two addresses involved),\n  from: string\n  // destination address (if two addresses involved),\n  to: string\n  // operation value (as is, not reduced to a floating point value),\n  value: string\n}\n\ninterface EthplorerTxInfo {\n  // transaction hash\n  hash: string\n  // transaction block time\n  timestamp: number\n  // transaction block number\n  blockNumber: number\n  // number of confirmations\n  confirmations: number\n  // true if there were no errors during tx execution\n  success: boolean\n  // source address\n  from: string\n  // destination address\n  to: string\n  // ETH send value\n  value: string\n  // transaction input data (hex)\n  input: string\n  // gas limit set to this transaction\n  gasLimit: string\n  // gas used for this transaction\n  gasUsed: string\n}\n\nclass EthplorerTransactionPaginator {\n  private $q: angular.IQService\n  private pool: Array<EthplorerAddressTransaction> = []\n  private endReached = false\n\n  constructor(private address: string, private ethplorer: EthplorerService) {\n    this.$q = this.ethplorer.$q\n  }\n\n  /* Loads the next batch of 50 transactions, if there are no more transactions the\n     promise returns false, if there are more transactions the promise returns true */\n  getNextBatch(): angular.IPromise<boolean> {\n    let deferred = this.$q.defer<boolean>();\n    if (this.endReached) {\n      deferred.resolve(false)\n    }\n    else {\n      // the last timestamp is where we start\n      let timestamp = this.pool.length ? this.pool[this.pool.length-1].timestamp : 0\n      this.ethplorer.getAddressTransactions(this.address, timestamp).then(\n        transactions => {\n          /* To prevent overlap check if transaction exists before placing in pool */\n          transactions.forEach(txn => {\n            if (!this.pool.find(tx => tx.hash == txn.hash)) {\n              this.pool.push(txn)\n            }\n          })\n          this.endReached = transactions.length != 50\n          deferred.resolve(!this.endReached)\n        },\n        deferred.reject\n      )\n    }\n    return deferred.promise\n  }\n\n  /* Loads more operations and transactions up until we have enough\n     entries in our pool to match 'minLength' the length of the pool is returned\n     in the promise.\n     Note that the max number of transactions is limited to 100 in this version\n     so expect minLength to never exceed 150\n  */\n  ensurePoolLength(minLength: number): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n\n    /* We have enough entries in our pool */\n    if (this.pool.length > minLength) {\n      deferred.resolve(this.pool.length)\n    }\n    else {\n      /* Loads and stores in pool the next batch of 50 transactions */\n      this.getNextBatch().then(hasMore => {\n        if (this.pool.length-1 > minLength || !hasMore) {\n          deferred.resolve(this.pool.length)\n        }\n        else {\n\n          // we simply place the next batch to load in here - when supporting unlimited\n          // number of transactions this has to updated of course.\n\n          this.getNextBatch().then(hasMore => {\n            if (this.pool.length-1 > minLength || !hasMore) {\n              deferred.resolve(this.pool.length)\n            }\n            else {\n\n              // we simply place the next batch to load in here - when supporting unlimited\n              // number of transactions this has to updated of course.\n              this.getNextBatch().then(hasMore => {\n                deferred.resolve(this.pool.length)\n              }, deferred.reject)\n\n            }\n          }, deferred.reject)\n        }\n      }, deferred.reject)\n    }\n    return deferred.promise\n  }\n\n  /* Transaction count is hardcoded to return max 150 results */\n  getCount(): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    this.ethplorer.getEthplorerTransactionCount(this.address).then(\n      count => {\n        deferred.resolve(Math.min(count, 1000))\n      }, deferred.reject\n    )\n    return deferred.promise\n  }\n\n  getItems(from:number, to:number): angular.IPromise<Array<EthplorerAddressTransaction>> {\n    let deferred = this.$q.defer<Array<EthplorerAddressTransaction>>();\n    this.ensurePoolLength(to-1).then( poolLength => {\n      let result = []\n      for (let i=from; i<to; i++) {\n        result.push(this.pool[i])\n      }\n      deferred.resolve(result)\n    }, deferred.reject)\n    return deferred.promise\n  }\n}\n\n@Service('ethplorer')\n@Inject('$q', 'http', 'settings','web3')\nclass EthplorerService {\n\n  public tokenInfoCache: {[key:string]: EthplorerTokenInfo} = {}\n  private cachedGetCachedAddressInfo = null\n\n  constructor(public $q: angular.IQService,\n              private http: HttpService,\n              private settingsService: SettingsService,\n              private web3: Web3Service) {\n    http.get('https://raw.githubusercontent.com/dmdeklerk/ethereum-lists/master/dist/tokens/eth/tokens-eth.min.json').then(response => {\n      let array = angular.isString(response) ? JSON.parse(response) : response\n      array.forEach(x => {\n        this.tokenInfoCache[x.address] = <any> {\n          address: x.address,\n          totalSupply: 0,\n          name: x.name,\n          symbol: x.symbol,\n          decimals: x.decimals\n        }\n      })\n    })\n  }\n\n  createPaginator(address: string) : EthplorerTransactionPaginator {\n    return new EthplorerTransactionPaginator(address, this);\n  }\n\n  public getErc20Tokens(address: string): angular.IPromise<any> {\n    let deferred = this.$q.defer<any>();\n    this.getCachedAddressInfo(address).then(response => {\n      deferred.resolve(response)\n    }, err => {\n      console.log(err)\n      deferred.resolve([])\n    })\n    return deferred.promise\n  }\n\n  public getEthplorerTransactionCount(address: string): angular.IPromise<number> {\n    let deferred = this.$q.defer<number>();\n    this.getCachedAddressInfo(address).then(info => {\n      deferred.resolve(info.countTxs)\n    }, deferred.reject)\n    return deferred.promise;\n  }\n\n  public getBalance(address: string): angular.IPromise<string> {\n    let deferred = this.$q.defer<string>();\n    this.getCachedAddressInfo(address).then(info => {\n      deferred.resolve(info.ETH.balance)\n    }, deferred.reject)\n    return deferred.promise;\n  }\n\n  /* Calls ethplorer getAddressInfo and caches the result for 10 seconds,\n     this is needed since both the virtual repeat and the erc20 token list call this method\n     on page load and refresh */\n  private getCachedAddressInfo(address: string): angular.IPromise<EthplorerAddressInfo> {\n    if (this.cachedGetCachedAddressInfo)\n      return this.cachedGetCachedAddressInfo\n\n    let deferred = this.$q.defer();\n    this.cachedGetCachedAddressInfo = deferred.promise\n    this.getAddressInfo(address).then(deferred.resolve, deferred.reject)\n    this.cachedGetCachedAddressInfo.finally(() => {\n      setTimeout(()=> {\n        this.cachedGetCachedAddressInfo = null\n      }, 5*1000)\n    })\n    return this.cachedGetCachedAddressInfo\n  }\n\n  public getAddressInfo(address: string): angular.IPromise<EthplorerAddressInfo> {\n    let deferred = this.$q.defer<EthplorerAddressInfo>();\n    let url = `https://api.ethplorer.io/getAddressInfo/${address}?apiKey=lwA5173TDKj60`\n    this.http.get(url)\n        .then((response) => {\n          var parsed = angular.isString(response) ? JSON.parse(response) : response;\n          if (parsed.error) {\n            console.log(`Ethplorer Error: ${JSON.stringify(parsed)}`)\n            deferred.reject(parsed.error)\n          }\n          else {\n\n            /* Extract all TokenInfo data and persist that to the tokenInfoCache\n               this is used for synchronized access to token data based on contract\n               address */\n            let info: EthplorerAddressInfo = parsed\n            if (info.tokens) {\n              info.tokens.forEach(token => {\n                if (token.tokenInfo) {\n                  this.tokenInfoCache[token.tokenInfo.address] = token.tokenInfo\n                }\n              })\n            }\n\n            deferred.resolve(info);\n          }\n        }, () => {\n          console.log(`HTTP reject for ${url}`)\n          deferred.reject(null);\n        });\n    return deferred.promise\n  }\n\n  /**\n   * These are our raw ether transactions, these include all ETHER transfers plus all\n   * token contract invocations but all data is provided as hex encoded data.\n   *\n   * We paginate through transactions using the unix timestamp which is a number.\n   * To get a unix timestamp use\n   *\n   *    var ts = Math.round((new Date()).getTime() / 1000);\n   */\n  public getAddressTransactions(address: string, timestamp: number, showZeroValues?: number): angular.IPromise<Array<EthplorerAddressTransaction>> {\n    let deferred = this.$q.defer<Array<EthplorerAddressTransaction>>();\n    showZeroValues = showZeroValues || 1\n    let url = `https://api.ethplorer.io/getAddressTransactions/${address}?apiKey=lwA5173TDKj60&limit=50&timestamp=${timestamp}&showZeroValues=${showZeroValues}`\n    this.http.get(url)\n        .then((response) => {\n          var parsed = angular.isString(response) ? JSON.parse(response) : response;\n          if (parsed.error) {\n            console.log(`Ethplorer Error: ${JSON.stringify(parsed)}`)\n            deferred.resolve([])\n          }\n          else {\n            deferred.resolve(parsed);\n          }\n        }, () => {\n          console.log(`HTTP reject for ${url}`)\n          deferred.resolve([]);\n        });\n    return deferred.promise\n  }\n\n  /**\n   * [[\n   *    THIS IS NOT USED AT THIS TIME, WE USE RAW TRANSACTIONS INSTEAD WHICH WE PARSE.\n   *    TOKEN NAMES, SYMBOLS AND DECIMALS ARE OBTAINED THROUGH getAddressInfo AND\n   *    ARE CACHED FOR SYNCED ACCESS FROM TXN RENDER SERVICE\n   * ]]\n   *\n   * These are our token operations, these are constructed by parsing the transactions inputs\n   * and are collected by ethplorer.\n   *\n   * Pagination happens through timestamp param.\n   */\n  public getAddressHistory(address: string, timestamp: number): angular.IPromise<Array<EthplorerAddressHistoryOperation>> {\n    let deferred = this.$q.defer<Array<EthplorerAddressHistoryOperation>>();\n    let url = `https://api.ethplorer.io/getAddressHistory/${address}?apiKey=lwA5173TDKj60&limit=10&timestamp=${timestamp}`\n    this.http.get(url)\n        .then((response) => {\n          var parsed = angular.isString(response) ? JSON.parse(response) : response;\n          if (parsed.error) {\n            console.log(`Ethplorer Error: ${JSON.stringify(parsed)}`)\n            deferred.resolve([])\n          }\n          else {\n            deferred.resolve(parsed.operations);\n          }\n        }, () => {\n          console.log(`HTTP reject for ${url}`)\n          deferred.resolve([]);\n        });\n    return deferred.promise\n  }\n\n  public getTxInfo(txHash: string): angular.IPromise<EthplorerTxInfo> {\n    let deferred = this.$q.defer<EthplorerTxInfo>();\n    let url = `https://api.ethplorer.io/getTxInfo/${txHash}?apiKey=lwA5173TDKj60`\n    this.http.get(url)\n        .then((response) => {\n          var parsed = angular.isString(response) ? JSON.parse(response) : response;\n          if (parsed.error) {\n            console.log(`Ethplorer Error: ${JSON.stringify(parsed)}`)\n            deferred.reject(parsed.error)\n          }\n          else {\n            deferred.resolve(parsed);\n          }\n        }, error => {\n          console.log(`HTTP reject for ${url}`)\n          deferred.reject(error)\n        });\n    return deferred.promise\n  }\n\n}","@Service('fimkCryptoService')\n@Inject('$window', 'mofoSocketService', '$rootScope')\nclass FIMKCryptoService {\n\n  private nxtCrypto;\n\n  constructor(private $window: angular.IWindowService,\n    private mofoSocketService: MofoSocketService,\n    private $rootScope: angular.IRootScopeService) {\n    this.nxtCrypto = $window.heatlibs.nxtCrypto;\n  }\n\n  /* Sets the seed to this wallet */\n  unlock(seedOrPrivateKey: any): Promise<WalletType> {\n    return new Promise((resolve, reject) => {\n      let walletType = { addresses: [] }\n      walletType.addresses[0] = { address: this.nxtCrypto.getAccountRSFromSecretPhrase(seedOrPrivateKey, 'FIM'), privateKey: seedOrPrivateKey }\n      resolve(walletType);\n    });\n  }\n\n\n  refreshAdressBalances(wallet: WalletType) {\n    let address = wallet.addresses[0].address\n    return new Promise((resolve, reject) => {\n      let mofoSocketService: MofoSocketService = heat.$inject.get('mofoSocketService')\n      mofoSocketService.getTransactions(address).then(transactions => {\n        mofoSocketService.getAccount(address).then(info => {\n          wallet.addresses[0].inUse = true;\n          let balance = parseInt(info.unconfirmedBalanceNQT) / 100000000;\n          let formattedBalance = new Big(balance + \"\")\n          let balanceUnconfirmed = new Big(formattedBalance).toFixed(8);\n          wallet.addresses[0].balance = balanceUnconfirmed\n          mofoSocketService.getAccountAssets(address).then(accountAssets => {\n            wallet.addresses[0].tokensBalances = []\n            accountAssets.forEach(asset => {\n              wallet.addresses[0].tokensBalances.push({\n                symbol: asset?asset.name:'',\n                name: asset?asset.name:'',\n                decimals: asset.decimals,\n                balance: utils.formatQNT(asset.unconfirmedQuantityQNT,asset.decimals),\n                address: asset.asset\n              })\n            });\n            resolve(true)\n          })\n        })\n      }, err => {\n          resolve(false)\n      })\n    })\n  }\n}","@Service('fimkPendingTransactions')\n@Inject('$q', 'http', 'settings','mofoSocketService')\nclass FimkPendingTransactionsService {\n\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\n  private listeners: Array<(removed?: boolean)=>void> = []\n\n  constructor(public $q: angular.IQService,\n              private http: HttpService,\n              private settings: SettingsService,\n              private mofoSocketService: MofoSocketService) {\n    this.readLocalStorage()\n  }\n\n  readLocalStorage() {\n    this.pending = {}\n    for (let i=0; i<window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      if (key.startsWith('fimkPendingTxn:')) {\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\n        this.pending[addr] = this.pending[addr] || []\n        this.pending[addr].push({txId:txId, time: time});\n      }\n    }\n  }\n\n  add(address:string, txId:string, timestamp: number) {\n    window.localStorage.setItem(`fimkPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\n    this.readLocalStorage()\n    this.notifyListeners(false)\n  }\n\n  remove(address:string, txId:string, timestamp: number) {\n    window.localStorage.removeItem(`fimkPendingTxn:${address}:${txId}:${timestamp}`)\n    this.readLocalStorage()\n    this.notifyListeners(true)\n  }\n\n  addListener(func: (removed?: boolean)=>void) {\n    this.removeListener(func)\n    this.listeners.push(func)\n  }\n\n  removeListener(func: (removed?: boolean)=>void) {\n    this.listeners = this.listeners.filter(fn => fn !== func)\n  }\n\n  notifyListeners(removed: boolean) {\n    this.listeners.forEach(fn => fn(removed))\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ninterface QueuedRequest {\n  url: string;\n  promise: angular.IPromise<string>\n}\n\n@Service('http')\n@Inject('$http','env','$q')\nclass HttpService {\n\n  /**\n   * The queue index in this.queues is obtained by comparing the url of the GET request\n   * to the prefixes in this.throttled. If the url starts with this.throttled[0] the index\n   * in this.queues should be 0, if it starts with this.throttled[1] the index is 1 etc.\n   *\n   * When no QueuedRequest are in the this.queues[index] one is created and the request\n   * is performed immediately, if there is anything in the queue the request\n   */\n  private throttled = ['https://blockexplorer.com', 'https://api.ethplorer.io', 'https://insight.bitpay.com']\n  private queues: Array<Array<QueuedRequest>>\n\n  constructor(private $http: angular.IHttpService,\n              private env: EnvService,\n              private $q: angular.IQService) {\n    this.queues = []\n    for (let i=0; i<this.throttled.length; i++)\n      this.queues.push([])\n  }\n\n  /*private dumpQueue() {\n    let s = ['HTTP QUEUES :: -->']\n    for (let i=0; i<this.throttled.length; i++) {\n      for (let j=0; j<this.queues[i].length; j++) {\n        s.push(this.queues[i][j].url)\n      }\n    }\n    console.log(s.join('\\n'))\n  }*/\n\n  /**\n   * The promise gets resolved or rejected when the internal GET request completes.\n   * It is our signal to look in the queue of pending requests for the next\n   * request whose turn it is to execute.\n   **/\n  private waitTurn(url: string, promise: angular.IPromise<any>) {\n\n    /* Find the index for the domain */\n    let index = -1\n    for (let i=0; i<this.throttled.length; i++) {\n      if (url.startsWith(this.throttled[i])) {\n        index = i\n        break\n      }\n    }\n\n    /* Not a throttled domain - return resolved promise so request can run right away */\n    if (index == -1) {\n      let deferred = this.$q.defer();\n      deferred.resolve()\n      return deferred.promise\n    }\n\n    /* Request must be throttled do so by placing it on the queue, register a listener\n       for when it completes so it can be autoremoved from the queue. We cleanup the\n       first entry from the queue since thats the one being executed. */\n    let queue = this.queues[index]\n    let nextRequest = queue[queue.length-1] // we will run AFTER this request (if any)\n    let request: QueuedRequest = {\n      url: url,\n      promise: promise\n    }\n    queue.push(request)\n    // this.dumpQueue()\n    request.promise.finally(()=>{\n      let i = queue.indexOf(request)\n      if (i != -1) queue.splice(i, 1)\n      // this.dumpQueue()\n    })\n\n    let deferred = this.$q.defer();\n\n    /* Trigger promise after the last request in the pool completes */\n    if (nextRequest) {\n      nextRequest.promise.finally(deferred.resolve)\n    }\n    else {\n      deferred.resolve()\n    }\n    return deferred.promise\n  }\n\n  public get(url:string): angular.IPromise<string> {\n    let deferred = this.$q.defer<string>();\n    let promise = deferred.promise\n    this.waitTurn(url, promise).then(() => {\n      if (this.env.type == EnvType.BROWSER) {\n        this.browserHttpGet(url, deferred.resolve, deferred.reject);\n      }\n      else {\n        this.nodeHttpGet(url, deferred.resolve, deferred.reject);\n      }\n    })\n    return promise;\n  }\n\n  private browserHttpGet(url: string, onSuccess: Function, onFailure: Function) {\n    this.$http.get(url, {\n        headers: {\n          'Content-Type': 'application/text'\n        }\n      }).then(\n      (response: any) => { onSuccess(response.data) },\n      (response) => { onFailure(response.data) }\n    )\n  }\n\n  private nodeHttpGet(url: string, onSuccess: Function, onFailure: Function) {\n    var _url = require('url').parse(url);\n    var options = {\n      hostname: _url.hostname, port: _url.port, path: _url.path, method: 'GET',\n      headers: {\n      'Content-Type': 'application/text'\n      }\n    };\n\n    var http = require(_url.protocol.indexOf('https')==0 ? 'https':'http');\n    var req = http.request(options, (res) => {\n      res.setEncoding('utf8');\n      var body = [];\n      res.on('data', (chunk) => {\n        body.push(chunk)\n      });\n      res.on('end', () => {\n        onSuccess(body.join(''))\n      });\n    });\n    req.on('error', (e) => {\n      onFailure(e)\n    });\n    req.end();\n  }\n\n  public post(url:string, data:{[key:string]:any}): angular.IPromise<Object> {\n    let deferred = this.$q.defer<Object>();\n    if (this.env.type == EnvType.BROWSER) {\n      this.browserHttpPost(url, data, deferred.resolve, deferred.reject);\n    }\n    else {\n      let a = document.createElement('a')\n      a.href = url\n      let hostname = a.hostname\n      let isHttps = a.protocol == 'https:'\n      let port = a.port ? parseInt(a.port) : (isHttps ? 443 : 80);\n      let path = a.pathname\n      this.nodeHttpPost(isHttps, hostname, port, path, data, deferred.resolve, deferred.reject);\n    }\n    return deferred.promise;\n  }\n\n  private browserHttpPost(url: string, data:{[key:string]:any}, onSuccess: Function, onFailure: Function) {\n    this.$http({\n      method: 'POST',\n      url: url,\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      transformRequest: function(obj) {\n        var str = [];\n        for(var p in obj)\n          str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n        return str.join(\"&\");\n      },\n      data: data\n  }).then(\n    (response:any) => { onSuccess(response.data) },\n    (response) => { onFailure(response.data) }\n  );\n  }\n\n  private nodeHttpPost(isHttps: boolean, hostname: string, port: number, path: string, request: any, onSuccess: Function, onFailure: Function) {\n    var querystring = require('querystring');\n    var body = querystring.stringify(request);\n    var options = {\n      hostname: hostname, port: port, path: path, method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        \"Content-Length\": body.length\n      }\n    };\n    var http = require(isHttps ? 'https':'http');\n    var req = http.request(options, (res) => {\n      res.setEncoding('utf8');\n      var body = [];\n      res.on('data', (chunk) => { body.push(chunk) });\n      res.on('end', () => {\n        onSuccess(JSON.parse(body.join('')))\n      });\n    });\n    req.on('error', (e) => { onFailure(e) });\n    req.write(body);\n    req.end();\n  }\n}","@Service('iotaBlockExplorerService')\n@Inject('$q', 'http', '$window')\nclass IotaBlockExplorerService {\n  private url: string;\n  private iotaCore;\n  private api;\n  private cachedGetCachedAccountInfo: Map<string, any> = new Map<string, any>();\n\n  constructor(\n    private $q: angular.IQService,\n    private http: HttpService,\n    private $window: angular.IWindowService) {\n\n    this.iotaCore = $window.heatlibs.IotaCore;\n    this.setUrl()\n  }\n\n  public setUrl(url = 'https://nodes.thetangle.org:443') {\n    this.url = url;\n    this.api = this.iotaCore.composeAPI({\n      provider: 'https://nodes.thetangle.org:443'\n    });\n  }\n\n  private getTransactions = (seed: string, startKeyIndex: number = 0, security: number = 2) => {\n    let deferred = this.$q.defer<IotaGetAccount>();\n    this.api.getAccountData(seed, { startKeyIndex, security }).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.transfers) {\n        deferred.resolve(data)\n      }\n      else\n        deferred.reject(`Unable to fetch IOTA address data`)\n    });\n    return deferred.promise;\n  }\n\n  private getCachedAccountInfo = (seed: string, startKeyIndex: number = 0, security: number = 2) => {\n    if (this.cachedGetCachedAccountInfo.get(seed))\n      return this.cachedGetCachedAccountInfo.get(seed)\n    let deferred = this.$q.defer<IotaGetAccount>();\n    this.cachedGetCachedAccountInfo.set(seed, deferred.promise)\n    this.getTransactions(seed).then(deferred.resolve, deferred.reject)\n    this.cachedGetCachedAccountInfo.get(seed).finally(() => {\n      setTimeout(() => {\n        this.cachedGetCachedAccountInfo.set(seed, null);\n      }, 30 * 1000)\n    })\n    return this.cachedGetCachedAccountInfo.get(seed)\n  }\n\n  public getAccountInfo = (seed: string, startKeyIndex: number = 0, security: number = 2) => {\n    let deferred = this.$q.defer<IotaGetAccount>();\n    this.getCachedAccountInfo(seed, startKeyIndex, security).then(info => {\n      deferred.resolve(info)\n    }, deferred.reject)\n    return deferred.promise;\n  }\n\n  public sendIota = (seed: string, transfers: any[]) => {\n    let deferred = this.$q.defer<any>();\n    const depth = 3\n    const minWeightMagnitude = 14\n\n    this.api.prepareTransfers(seed, transfers)\n      .then(trytes => this.api.sendTrytes(trytes, depth, minWeightMagnitude))\n      .then(bundle => deferred.resolve(bundle))\n      .catch(err => {\n        deferred.reject(err)\n      })\n    return deferred.promise;\n  }\n\n  public getBalance = (address: string) => {\n    if (address.length === 90)\n      address = address.slice(0, 81)\n    let deferred = this.$q.defer<any>();\n    this.api.getBalances([address], 100)\n      .then(ret => {\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n        deferred.resolve(data.balances[0])\n      })\n      .catch(err => {\n        deferred.reject(err)\n      })\n    return deferred.promise;\n  }\n\n  public getAddressBundles = (address: string) => {\n    if (address.length === 90)\n      address = address.slice(0, 81)\n    let deferred = this.$q.defer<any>();\n    this.api.getBundlesFromAddresses([address])\n      .then(ret => {\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n        deferred.resolve(data)\n      })\n      .catch(err => {\n        deferred.reject(err)\n      })\n    return deferred.promise;\n  }\n\n  public getInputs = (seed: string) => {\n    let deferred = this.$q.defer<any>();\n    this.api.getInputs(seed, {start: 0, security: 2})\n      .then(ret => {\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n        deferred.resolve(data)\n      })\n      .catch(err => {\n        deferred.reject(err)\n      })\n    return deferred.promise;\n  }\n\n  public checkAddressReuse = (address: string) => {\n    if (address.length === 90)\n      address = address.slice(0, 81)\n    let deferred = this.$q.defer<any>();\n    this.getAddressBundles(address).then(bundles => {\n      bundles.forEach(transactions => {\n        transactions.forEach(tx => {\n          if (tx.address === address && tx.value < 0) {\n            deferred.resolve(true)\n            return true;\n          }\n        });\n      });\n      deferred.resolve(false)\n    }).catch(err => {\n      deferred.reject(err)\n    })\n    return deferred.promise;\n  }\n}\n\ninterface IotaGetAccount {\n  transactions: any[],\n  transfers: any[],\n  balance: number,\n  addresses: string[]\n}\n","@Service('iotaCoreService')\n@Inject('$window')\nclass IotaCoreService {\n\n  private iotaCore;\n\n  constructor($window: angular.IWindowService) {\n    this.iotaCore = $window.heatlibs.IotaCore;\n  }\n\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\n  unlock(seed: string): Promise<WalletType> {\n    return new Promise((resolve, reject) => {\n      let walletType = this.getNWalletsFromMnemonics(seed, 1)\n      resolve(walletType);\n    });\n  }\n\n  getNWalletsFromMnemonics(mnemonic: string, keyCount: number) {\n    let walletType = { addresses: [] }\n    for (let i = 0; i < keyCount; i++) {\n      let wallet = this.getWallet(mnemonic, i, 2)\n      walletType.addresses[i] = { address: wallet.address, privateKey: wallet.privateKey, index: i, balance: \"0\", inUse: false }\n    }\n    return walletType;\n  }\n\n  getWallet(mnemonic: string, index: Number = 0, securityLevel: number = 2): any {\n    const address = this.iotaCore.generateAddress(mnemonic, index, securityLevel, true)\n    return {\n      address,\n      privateKey: mnemonic\n    }\n  }\n\n\n  refreshAdressBalances(wallet: WalletType) {\n    return new Promise((resolve, reject) => {\n      let secretPhrase = wallet.addresses[0].privateKey;\n      let iotaBlockExplorerService: IotaBlockExplorerService = heat.$inject.get('iotaBlockExplorerService')\n      iotaBlockExplorerService.getInputs(wallet.addresses[0].privateKey).then(info => {\n        if (info.inputs && info.inputs.length !== 0) {\n          let index = 0;\n          wallet.addresses = [];\n          info.inputs.forEach(input => {\n            let walletAddress: any = {};\n            walletAddress.inUse = true;\n            walletAddress.balance = input.balance + \"\"\n            walletAddress.privateKey = secretPhrase // keep same private key (should be treated as seed) until iota offline signing is done\n            walletAddress.address = this.getWallet(secretPhrase, input.keyIndex).address // using address from getWallet instead of api returned address since users need address with cehcksum\n            wallet.addresses.push(walletAddress)\n          })\n          let zeroBalanceAccount = this.getWallet(secretPhrase, ++index)\n          zeroBalanceAccount.inUse = true;\n          zeroBalanceAccount.balance = \"0\"\n          wallet.addresses.push(zeroBalanceAccount)\n        }\n        else {\n          let zeroBalanceAccount = this.getWallet(secretPhrase)\n          zeroBalanceAccount.inUse = true;\n          zeroBalanceAccount.balance = \"0\"\n          wallet.addresses.push(zeroBalanceAccount)\n        }\n        resolve(true)\n      }, () => {\n        resolve(false)\n      })\n    })\n  }\n}","@Service('iotaPendingTransactions')\n@Inject('$q', 'http', 'settings')\nclass IotaPendingTransactionsService {\n\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\n  private listeners: Array<(removed?: boolean)=>void> = []\n\n  constructor(public $q: angular.IQService,\n              private http: HttpService,\n              private settings: SettingsService) {\n    this.readLocalStorage()\n  }\n\n  readLocalStorage() {\n    this.pending = {}\n    for (let i=0; i<window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      if (key.startsWith('iotaPendingTxn:')) {\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\n        this.pending[addr] = this.pending[addr] || []\n        this.pending[addr].push({txId:txId, time: time});\n      }\n    }\n  }\n\n  add(address:string, txId:string, timestamp: number) {\n    window.localStorage.setItem(`iotaPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\n    this.readLocalStorage()\n    this.notifyListeners(false)\n  }\n\n  remove(address:string, txId:string, timestamp: number) {\n    window.localStorage.removeItem(`iotaPendingTxn:${address}:${txId}:${timestamp}`)\n    this.readLocalStorage()\n    this.notifyListeners(true)\n  }\n\n  addListener(func: (removed?: boolean)=>void) {\n    this.removeListener(func)\n    this.listeners.push(func)\n  }\n\n  removeListener(func: (removed?: boolean)=>void) {\n    this.listeners = this.listeners.filter(fn => fn !== func)\n  }\n\n  notifyListeners(removed: boolean) {\n    this.listeners.forEach(fn => fn(removed))\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare type WalletAddress = {\n  /* Ethereum address */\n  address: string;\n\n  /* ks.exportPrivateKey */\n  privateKey: string;\n\n  /* BIP44 key index */\n  index: number;\n\n  /* Balance is full ETH */\n  balance: string;\n\n  /* Indicates if address is in use, two indexes at 0 balance indicates key not in use\n      (not completely accurate since a user can use an address which has a zero balance) */\n  inUse: boolean;\n\n  accountId: string;\n\n  /* ERC20 token balances */\n  tokensBalances: Array<{\n    symbol: string;\n\n    name: string;\n\n    decimals: number;\n\n    balance: string;\n\n    address: string;\n  }>\n}\ndeclare type WalletType = {\n  addresses: Array<WalletAddress>\n}\n\n@Service('lightwalletService')\n@Inject('web3', 'user', 'settings', '$rootScope', 'ethplorer', '$window')\nclass LightwalletService {\n\n  //public wallet: WalletType\n  static readonly BIP44 = \"m/44'/60'/0'/0\";\n  private lightwallet;\n\n  constructor(private web3Service: Web3Service,\n    private userService: UserService,\n    private settingsService: SettingsService,\n    private $rootScope: angular.IRootScopeService,\n    private ethplorer: EthplorerService,\n    private $window: angular.IWindowService,) {\n      this.lightwallet = $window.heatlibs.lightwallet;\n  }\n\n  generateRandomSeed() {\n    return this.lightwallet.keystore.generateRandomSeed();\n  }\n\n  validSeed(seed) {\n    return this.lightwallet.keystore.isSeedValid(seed)\n  }\n\n  validPrivateKey(privKey) {\n    return utils.isHex(privKey) && privKey.length > 32\n  }\n\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\n  unlock(seedOrPrivateKey: string, password?: string): Promise<WalletType> {\n    return new Promise((resolve, reject) => {\n      let promise:Promise<WalletType>;\n      if (this.validSeed(seedOrPrivateKey)) {\n        promise = this.getEtherWallet(seedOrPrivateKey, password || \"\")\n      }\n      else if (this.validPrivateKey(seedOrPrivateKey)) {\n        promise = this.getEtherWalletFromPrivateKey(seedOrPrivateKey, password || \"\")\n      }\n      else {\n        reject()\n      }\n      promise.then(wallet => {\n        // console.log('wallet', wallet)\n        resolve(wallet)\n      }).catch(() => {\n        reject()\n      })\n    });\n  }\n\n  refreshAdressBalances(wallet:WalletType) {\n    /* list all addresses in bip44 order */\n    let addresses = wallet.addresses.map(a => a.address)\n\n    function processNext() {\n      return new Promise((resolve, reject) => {\n\n        /* get the first element from the list */\n        let address = addresses[0]\n        addresses.shift()\n\n        /* look up its data on ethplorer */\n        let ethplorer: EthplorerService = heat.$inject.get('ethplorer')\n        ethplorer.getAddressInfo(address).then(info => {\n\n          /* lookup the 'real' WalletAddress */\n          let walletAddress = wallet.addresses.find(x => x.address == address)\n          if (!walletAddress)\n            return\n\n          walletAddress.inUse = info.countTxs!=0\n          if (!walletAddress.inUse) {\n            resolve(false)\n            return\n          }\n\n          walletAddress.balance = info.ETH.balance+\"\"\n          walletAddress.tokensBalances = []\n\n          if (info.tokens) {\n            info.tokens.forEach(token => {\n              let tokenInfo = ethplorer.tokenInfoCache[token.tokenInfo.address]\n              let decimals = tokenInfo?tokenInfo.decimals:8\n              let amount = token.balance ? new Big(token.balance+\"\").toFixed() : \"0\"\n              walletAddress.tokensBalances.push({\n                symbol: tokenInfo?tokenInfo.symbol:'',\n                name: tokenInfo?tokenInfo.name:'',\n                decimals: decimals,\n                balance: utils.formatQNT(amount,decimals),\n                address: token.tokenInfo.address\n              })\n            })\n          }\n          resolve(true)\n        }, () => {\n          resolve(false)\n        })\n      })\n    }\n\n    let recurseToNext = function recurseToNext(resolve) {\n      processNext().then(\n        hasMore => {\n          if (hasMore) {\n            setTimeout(function () {\n              recurseToNext(resolve)\n            }, 100)\n          }\n          else {\n            resolve()\n          }\n        }\n      )\n    }\n\n    return new Promise(resolve => {\n      recurseToNext(resolve)\n    })\n  }\n\n  sendEther(from: string, to: string, value: any) {\n    this.web3Service.sendEther(from, to, value);\n  }\n\n  /*\n  // https://github.com/ConsenSys/eth-lightwallet/blob/master/lib/keystore.js#L184\n  KeyStore._computeAddressFromPrivKey = function (privKey) {\n    return address\n  }\n\n  // what we need is this\n\n  KeyStore.prototype.importPrivateKey = function(privatekey,pwDerivedKey) {}\n\n  */\n\n  getEtherWallet(seed: string, password: string): Promise<WalletType> {\n    let that = this;\n    return new Promise((resolve, reject) => {\n      try {\n        this.lightwallet.keystore.createVault({\n          password: password,\n          seedPhrase: seed,\n          hdPathString: LightwalletService.BIP44\n        }, (err, ks) => {\n          if (err) {\n            reject();\n            return;\n          }\n\n          var HookedWeb3Provider = this.$window.heatlibs.HookedWeb3Provider;\n          var web3Provider = new HookedWeb3Provider({\n            host: this.settingsService.get(SettingsService.WEB3PROVIDER),\n            transaction_signer: ks\n          });\n          this.web3Service.web3.setProvider(web3Provider);\n          ks.passwordProvider = function (callback) {\n            callback(null, password);\n          }\n\n          ks.keyFromPassword(password, function (err, pwDerivedKey) {\n            if (err) {\n              reject()\n              return\n            }\n\n            try {\n              let keyCount = 20\n              ks.generateNewAddress(pwDerivedKey, keyCount);\n              var addresses = ks.getAddresses();\n\n              let wallet = { addresses: [] }\n              for (let i = 0; i < keyCount; i++) {\n                let walletAddress = addresses[i];\n                let privateKey = ks.exportPrivateKey(walletAddress, pwDerivedKey);\n                wallet.addresses[i] = { address: walletAddress, privateKey, index: i, balance: \"0\", inUse: false }\n              }\n              resolve(wallet);\n            } catch (e) {\n              console.error(e)\n              reject()\n            }\n          });\n        })\n      } catch (e) {\n        console.error(e)\n        reject()\n      }\n    })\n  }\n\n  getEtherWalletFromPrivateKey(privkeyHex: string, password: string): Promise<WalletType> {\n    let that = this;\n    return new Promise((resolve, reject) => {\n      try {\n        this.lightwallet.keystore.createVault({\n          password: password,\n          // we use a random seed each time since lightwallet needs that\n          seedPhrase: this.lightwallet.keystore.generateRandomSeed(),\n          hdPathString: LightwalletService.BIP44\n        }, (err, ks) => {\n          if (err) {\n            reject();\n            return;\n          }\n\n          var HookedWeb3Provider = this.$window.heatlibs.HookedWeb3Provider;\n          var web3Provider = new HookedWeb3Provider({\n            host: this.settingsService.get(SettingsService.WEB3PROVIDER),\n            transaction_signer: ks\n          });\n          this.web3Service.web3.setProvider(web3Provider);\n          ks.passwordProvider = function (callback) {\n            callback(null, password);\n          }\n\n          ks.keyFromPassword(password, function (err, pwDerivedKey) {\n            if (err) {\n              reject()\n              return\n            }\n\n            try {\n              var encPrivKey = this.heatlibs.lightwallet.keystore._encryptKey(privkeyHex, pwDerivedKey);\n              var keyObj = {\n                privKey: privkeyHex,\n                encPrivKey: encPrivKey\n              }\n              var address = this.heatlibs.lightwallet.keystore._computeAddressFromPrivKey(keyObj.privKey);\n              ks.encPrivKeys[address] = keyObj.encPrivKey;\n              ks.addresses.push(address);\n\n              var addresses = ks.getAddresses();\n              let wallet = { addresses: [] }\n              for (let i = 0; i < addresses.length; i++) {\n                let walletAddress = addresses[i];\n                let privateKey = ks.exportPrivateKey(walletAddress, pwDerivedKey);\n                wallet.addresses[i] = { address: walletAddress, privateKey, index: i, balance: \"0\", inUse: false }\n              }\n              resolve(wallet);\n\n            } catch (e) {\n              console.error(e)\n              reject()\n            }\n          });\n        })\n      } catch (e) {\n        console.error(e)\n        reject()\n      }\n    })\n  }\n\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ninterface ILocalKey {\n  account: string;\n  pincode: string;\n  secretPhrase: string;\n  name: string;\n}\n\ninterface ILocalKeyEntry {\n  account: string;\n  name: string;\n  contents: string;\n  isTestnet: boolean;\n}\n\n@Service('localKeyStore')\n@Inject('storage','walletFile')\nclass LocalKeyStoreService {\n  private store: Store;\n\n  /* Remembered passwords to the localKeyStore */\n  private rememberedPasswords: {[key:string]:string} = {}\n\n  constructor(storage: StorageService, private walletFile: WalletFileService) {\n    this.store = storage.namespace(\"keystore\", null, true);\n  }\n\n  /* Remembers a password for an account in the key store */\n  rememberPassword(account: string, password: string) {\n    this.rememberedPasswords[account] = password\n  }\n\n  /* Returns a remembered account password (if any) */\n  getPasswordForAccount(account: string) {\n    return this.rememberedPasswords[account]\n  }\n\n  testnet() {\n    return heat.isTestnet ? '.testnet' : '';\n  }\n\n  add(key: ILocalKey) {\n    this.rememberPassword(key.account, key.pincode)\n    this.store.put(`key.${key.account}${this.testnet()}`, this.encode(key));\n    this.store.put(`name.${key.account}${this.testnet()}`, key.name);\n  }\n\n  /* Adds a raw key entry, returns true iff entry did not exist, returns false iff already present */\n  addRaw(key: ILocalKeyEntry): boolean {\n    let key1 = `key.${key.account}${key.isTestnet?'.testnet':''}`;\n    let key2 = `name.${key.account}${key.isTestnet?'.testnet':''}`;\n    if (this.store.get(key1))\n      return false;\n\n    this.store.put(key1, key.contents);\n    this.store.put(key2, key.name||'');\n    return true;\n  }\n\n  /* lists all numeric account ids we have keys for */\n  list(): Array<string> {\n    var test = heat.isTestnet ? /key\\.\\d+\\.testnet$/ : /key\\.\\d+$/;\n    return this.store.keys().\n                      filter((keyName) => test.test(keyName)).\n                      map((keyName) => keyName.substring(\"key.\".length).replace(/\\.testnet$/,\"\"));\n  }\n\n  /* lookup and return the account key name - if there is any */\n  keyName(account: string) {\n    return this.store.get(`name.${account}${this.testnet()}`);\n  }\n\n  remove(account: string) {\n    this.store.remove(`key.${account}${this.testnet()}`);\n    this.store.remove(`name.${account}${this.testnet()}`);\n  }\n\n  encode(key: ILocalKey): string {\n    var payload = JSON.stringify({\n      account: key.account,\n      secretPhrase: key.secretPhrase,\n      pincode: key.pincode,\n      name: key.name\n    });\n    var message = heat.crypto.passphraseEncrypt(payload, key.pincode);\n    return message.encode();\n  }\n\n  decode(encoded: string, passphrase: string, account?: string): ILocalKey {\n    let message = heat.crypto.PassphraseEncryptedMessage.decode(encoded);\n    let json_str = heat.crypto.passphraseDecrypt(message, passphrase);\n    if (json_str) {\n      let json = JSON.parse(json_str);\n      console.log(`decrypting is success for account ${account}`);\n      return {\n        account: json['account'],\n        secretPhrase: json['secretPhrase'],\n        pincode: json['pincode'],\n        name: json['name']\n      }\n    } else {\n      console.log(`decrypting is not success for account ${account}`);\n    }\n  }\n\n  load(account: string, passphrase: string): ILocalKey {\n    let contents = this.store.get(`key.${account}${this.testnet()}`);\n    try {\n      let result = this.decode(contents, passphrase, account);\n      if (result) {\n        this.rememberPassword(account, passphrase);\n        return result;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  private listLocalKeyEntries(): Array<ILocalKeyEntry> {\n    let entries: Array<ILocalKeyEntry> = [];\n    this.store.keys().forEach(keyName => {\n      let match = keyName.match(/key\\.(\\d+)(\\.testnet)?/);\n      if (match) {\n        let isTestnet = match[2]=='.testnet';\n        let account = match[1];\n        let name = this.store.get(`name.${account}${isTestnet?'.testnet':''}`);\n        let contents = this.store.get(keyName);\n        entries.push({\n          account:account,\n          contents:contents,\n          name:name,\n          isTestnet:isTestnet\n        });\n      }\n    });\n    return entries;\n  }\n\n  public export(): IHeatWalletFile {\n    let wallet : IHeatWalletFile = {\n      version: 1,\n      entries: []\n    };\n    this.listLocalKeyEntries().forEach(entry => {\n      wallet.entries.push({\n        account: entry.account,\n        contents: entry.contents,\n        isTestnet: entry.isTestnet,\n        name: entry.name\n      })\n    });\n    return wallet;\n  }\n\n  /* Returns array of wallet entries added */\n  public import(wallet: IHeatWalletFile) : Array<ILocalKeyEntry> {\n    let added : Array<ILocalKeyEntry> = [];\n    wallet.entries.forEach(entry => {\n      let localKeyEntry: ILocalKeyEntry = {\n        account: entry.account,\n        contents: entry.contents,\n        isTestnet: entry.isTestnet,\n        name: entry.name\n      };\n      if (this.addRaw(localKeyEntry)) {\n        added.push(localKeyEntry);\n      }\n    });\n    return added;\n  }\n}\n","@Service('nxtCryptoService')\n@Inject('$window')\nclass NXTCryptoService {\n\n  private nxtCrypto;\n\n  constructor(private $window: angular.IWindowService) {\n    this.nxtCrypto = $window.heatlibs.nxtCrypto;\n  }\n\n  /* Sets the seed to this wallet */\n  unlock(seedOrPrivateKey: any): Promise<WalletType> {\n    return new Promise((resolve, reject) => {\n      let walletType = { addresses: [] }\n      walletType.addresses[0] = { address: this.nxtCrypto.getAccountRSFromSecretPhrase(seedOrPrivateKey, 'NXT'), privateKey: seedOrPrivateKey }\n      resolve(walletType);\n    });\n  }\n\n  refreshAdressBalances(wallet: WalletType) {\n    let address = wallet.addresses[0].address\n    return new Promise((resolve, reject) => {\n      let nxtBlockExplorerService: NxtBlockExplorerService = heat.$inject.get('nxtBlockExplorerService')\n      nxtBlockExplorerService.getAccount(wallet.addresses[0].address).then(data => {\n        wallet.addresses[0].balance = new Big(utils.convertToQNTf(data.unconfirmedBalanceNQT)).toFixed(8);\n        wallet.addresses[0].inUse = true;\n        nxtBlockExplorerService.getAccountAssets(address).then(accountAssets => {\n          wallet.addresses[0].tokensBalances = []\n          let promises = []\n          accountAssets.forEach(asset => {\n            let promise = nxtBlockExplorerService.getAssetInfo(asset.asset).then(assetInfo => {\n              wallet.addresses[0].tokensBalances.push({\n                symbol: assetInfo?assetInfo.name:'',\n                name: assetInfo?assetInfo.name:'',\n                decimals: assetInfo.decimals,\n                balance: utils.formatQNT(asset.unconfirmedQuantityQNT,assetInfo.decimals),\n                address: asset.asset\n              })\n            })\n            promises.push(promise)\n          });\n\n          Promise.all(promises).then(() => resolve(true))\n\n          if(accountAssets.length === 0)\n            resolve(true)\n        })\n      }, err => {\n        resolve(false)\n      })\n    })\n  }\n}","@Service('nxtBlockExplorerService')\n@Inject('$q', 'http')\nclass NxtBlockExplorerService {\n  private url: string;\n\n  constructor(\n    private $q: angular.IQService,\n    private http: HttpService) {\n    this.setUrl()\n  }\n\n  public setUrl(url = 'https://bitnode.heatwallet.com:7876/') {\n    this.url = url;\n  }\n\n  getSocketUrl = () => {\n    return this.url\n  }\n\n  public getBlockchainStatus = () => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBlockchainStatus`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if (data) {\n        deferred.resolve(data)\n      }\n      else\n        deferred.reject()\n    });\n    return deferred.promise;\n  }\n\n  public getTransactions = (account, firstIndex, lastIndex) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBlockchainTransactions&account=${account}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if (data.transactions) {\n        deferred.resolve(data.transactions)\n      }\n      else\n        deferred.reject()\n    });\n    return deferred.promise;\n  }\n\n  public getTransactionsCount = (account) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBlockchainTransactions&account=${account}&lastIndex=-1`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if (data.transactions)\n        deferred.resolve(data.transactions.length)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAccount = (address: string) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getAccount&account=${address}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.unconfirmedBalanceNQT)\n        deferred.resolve(data)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public sendNxt = (txObject) => {\n    let deferred = this.$q.defer<any>();\n    this.http.post(this.url + txObject, {}).then(ret => {\n      let userService: UserService = heat.$inject.get('user')\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n      if(data.errorDescription) {\n        deferred.reject(data.errorDescription)\n      }\n      var signature = heat.crypto.signBytes(data.unsignedTransactionBytes, converters.stringToHexString(userService.secretPhrase))\n      var payload = data.unsignedTransactionBytes.substr(0, 192) + signature + data.unsignedTransactionBytes.substr(320);\n        this.http.post(`${this.url}nxt?requestType=broadcastTransaction&transactionBytes=${payload}`, {}).then(ret => {\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\n        if(data.errorDescription) {\n          deferred.reject(data.errorDescription)\n        }\n        deferred.resolve({txId: data.transaction})\n      })\n    }, err => {\n      deferred.reject(err.errorDescription)\n    })\n    return deferred.promise;\n  }\n\n  public getTransactionStatus = (transactionId) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getTransaction&transaction=${transactionId}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (!data.errorDescription)\n        deferred.resolve(data)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAccountAssets = (tx) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getAccountAssets&account=${tx}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.accountAssets)\n        deferred.resolve(data.accountAssets)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getBalance = (account: string) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getBalance&account=${account}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.unconfirmedBalanceNQT)\n        deferred.resolve(data.unconfirmedBalanceNQT)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getPublicKeyFromAddress = (account: string) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getAccountPublicKey&account=${account}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.publicKey)\n        deferred.resolve(data.publicKey)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n\n  public getAssetInfo = (asset: string) => {\n    let deferred = this.$q.defer<any>();\n    this.http.get(`${this.url}nxt?requestType=getAsset&asset=${asset}`).then(ret => {\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\n      if (data.name)\n        deferred.resolve(data)\n      else\n        deferred.reject(data.errorDescription)\n    });\n    return deferred.promise;\n  }\n}\n","@Service('nxtPendingTransactions')\n@Inject('$q', 'http', 'settings')\nclass NxtPendingTransactionsService {\n\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\n  private listeners: Array<(removed?: boolean)=>void> = []\n\n  constructor(public $q: angular.IQService,\n              private http: HttpService,\n              private settings: SettingsService) {\n    this.readLocalStorage()\n  }\n\n  readLocalStorage() {\n    this.pending = {}\n    for (let i=0; i<window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      if (key.startsWith('nxtPendingTxn:')) {\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\n        this.pending[addr] = this.pending[addr] || []\n        this.pending[addr].push({txId:txId, time: time});\n      }\n    }\n  }\n\n  add(address:string, txId:string, timestamp: number) {\n    window.localStorage.setItem(`nxtPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\n    this.readLocalStorage()\n    this.notifyListeners(false)\n  }\n\n  remove(address:string, txId:string, timestamp: number) {\n    window.localStorage.removeItem(`nxtPendingTxn:${address}:${txId}:${timestamp}`)\n    this.readLocalStorage()\n    this.notifyListeners(true)\n  }\n\n  addListener(func: (removed?: boolean)=>void) {\n    this.removeListener(func)\n    this.listeners.push(func)\n  }\n\n  removeListener(func: (removed?: boolean)=>void) {\n    this.listeners = this.listeners.filter(fn => fn !== func)\n  }\n\n  notifyListeners(removed: boolean) {\n    this.listeners.forEach(fn => fn(removed))\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('panel')\n@Inject('$mdPanel')\nclass PanelService {\n  constructor(private $mdPanel: angular.material.IPanelService) {}\n  show(template: string, locals: any) {\n    let position = this.$mdPanel.newPanelPosition().absolute().center();\n    let config :angular.material.IPanelConfig = {\n      attachTo: angular.element(document.body),\n      controller: function () {},\n      controllerAs: 'vm',\n      disableParentScroll: true,\n      template: template,\n      hasBackdrop: false,\n      panelClass: 'demo-dialog-example',\n      position: position,\n      trapFocus: false,\n      zIndex: 30,\n      clickOutsideToClose: true,\n      escapeToClose: true,\n      focusOnOpen: true,\n      locals: locals\n    };\n    this.$mdPanel.open(config);\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface IRenderer {\n  toHtml(rawText: string) : string;\n}\n\n@Service('render')\nclass RenderService {\n  public render(rawText: string, renderers: Array<IRenderer>) : string {\n    var text = rawText;\n    renderers.forEach((renderer) => {\n      text = renderer.toHtml(text);\n    });\n    return text;\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('secretGenerator')\n@Inject('$q','settings','lightwalletService')\nclass SecretGeneratorService {\n\n  constructor(private $q: angular.IQService,\n              private settings: SettingsService,\n              private lightwalletService: LightwalletService) {}\n\n  public generate(langCode: string): angular.IPromise<string> {\n    let deferred = this.$q.defer<string>();\n    deferred.resolve(this.lightwalletService.generateRandomSeed())\n    return deferred.promise;\n  }\n}\n\n","/// <reference path='../lib/EventEmitter.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('server')\n@Inject('$rootScope','$q','$interval','$timeout','settings', '$mdToast')\nclass ServerService extends EventEmitter {\n  private stopServerSignalFile = 'resources/heatledger/stopserver.signal';\n  private serverStoppedSignalFile = 'resources/heatledger/serverstopped.signal';\n\n  private MAX_CONSOLE_LINE_LENGTH = 20000;\n  public isRunning: boolean = false;\n  public isReady: boolean = false;\n  public pid: string;\n  private command: string;\n  private cwd: string;\n  private childProcess: any;\n  public buffer: Array<string> = [\" \"]; // needs one empty line or last line is not shown in console\n\n  constructor(private $rootScope: angular.IRootScopeService,\n              private $q: angular.IQService,\n              private $interval: angular.IIntervalService,\n              private $timeout: angular.ITimeoutService,\n              private settings: SettingsService,\n              private $mdToast: angular.material.IToastService) {\n    super();\n    var onbeforeunload = () => {\n      window.onbeforeunload = null;\n      if (this.isRunning) {\n        this.applicationShutdown().then(() => {\n          window.close();\n        });\n        $timeout(() => {\n          this.stopServer();\n        }, 2000);\n        $timeout(() => {\n          window.close();\n        }, 8000);\n        return \"dont close\";\n      }\n    };\n    window.onbeforeunload = onbeforeunload;\n  }\n\n  initOsDepends() {\n    var os = this.getOS();\n    var path = require('path');\n    if (os == 'WIN')  {\n      this.cwd = path.join(__dirname,'..','heatledger');\n      this.command = path.join('bin','heatledger.bat');\n    }\n    if (os == 'MAC') {\n      this.cwd = path.join(__dirname,'..','heatledger');\n      this.command = path.join('bin','heatledger');\n    }\n    if (os == 'LINUX') {\n      this.cwd = path.join(__dirname,'..','heatledger');\n      this.command = path.join('bin','heatledger');\n    }\n\n    //file 'embeddedinwallet.signal' is signal to the server that it is running in desktop wallet\n    let embeddedInWalletSignalFilePath = 'resources/heatledger/embeddedinwallet.signal';\n    const fs = require('fs');\n    if (!fs.existsSync(embeddedInWalletSignalFilePath)) {\n      fs.writeFile(embeddedInWalletSignalFilePath, '', { flag: 'w' }, function(err) {\n        if (err)\n          console.error(err);\n      });\n    }\n  }\n\n  getAppDir(dirName) {\n    var path = require('path');\n    let dir = path.join(__dirname,'..','heatledger', dirName);\n    return path.resolve(dir)\n  }\n\n  startServer() {\n    console.log('ServerService::start server')\n    if (this.isRunning) {\n      throw new Error('Server starting or already up, check server.isRunning before calling this method');\n    }\n    this.initOsDepends();\n    var spawn = require('child-process-promise').spawn;\n    this.isRunning = true;\n    this.log(\"[SERVER] command >> \"+this.command);\n    this.log(\"[SERVER] cwd     >> \"+this.cwd);\n\n    // Point the blockchain dir to be in the appData dir\n    // Set ENV vars to:\n    //   - HEAT_WALLET_BLOCKCHAINDIR\n    //   - HEAT_WALLET_BLOCKCHAINDIR_TEST\n    this.getUserDataDirFromMainProcess().then(\n      userDataDir => {\n        var env = process.env\n\n        // When things go wrong undefined is returned\n        if (userDataDir) {\n          var path = require('path');\n          env['HEAT_WALLET_BLOCKCHAINDIR'] = path.join(userDataDir, 'blockchain')\n          env['HEAT_WALLET_BLOCKCHAINDIR_TEST'] = path.join(userDataDir, 'blockchain-test')\n        }\n\n        var promise = spawn(this.command,[],{\n          cwd:this.cwd,\n          env: env\n        });\n        this.childProcess = promise.childProcess;\n        this.log(\"[SERVER] pid     >> \"+this.childProcess.pid);\n        this.childProcess.stdout.on('data', (data) => {\n          this.log(data.toString());\n        });\n        this.childProcess.stderr.on('data', (data) => {\n          this.log(data.toString());\n        });\n\n        promise.then(() => {\n          this.log(\"[SPAWN] DONE!\");\n          this.$rootScope.$evalAsync(()=>{\n            this.isRunning = false;\n            this.isReady = false;\n            if (this.needsRecoveryRestart()) {\n              this.$timeout(()=> {\n                this.startServer();\n              },2000,true);\n            }\n          })\n        })\n        .catch((err) => {\n          var message = angular.isObject(err) ? (err.message||''):'';\n          this.log(`[SPAWN EXIT] ${message}`, err);\n          this.$rootScope.$evalAsync(()=>{\n            this.isRunning = false;\n            this.isReady = false;\n            if (this.needsRecoveryRestart()) {\n              this.$timeout(()=> {\n                this.startServer();\n              },2000,true);\n            }\n          });\n        });\n      }\n    )\n  }\n\n  getUserDataDirFromMainProcess() {\n    let {ipcRenderer} = require('electron')\n    return new Promise(resolve => {\n      let timeout = setTimeout(resolve, 2000)\n      ipcRenderer.on('userData-is-here-reply', (event, arg) => {\n        clearTimeout(timeout)\n        resolve(arg)\n      })\n      ipcRenderer.send('userData-is-where-request', '')\n    })\n  }\n\n  log(msg, error?:any) {\n    if ((!msg || msg.trim().length == 0) && !error) return;\n    if (error)\n      console.log(msg,error);\n    else if (this.settings.get(SettingsService.LOG_HEAT_SERVER_ALL))\n      console.log(msg);\n    if (!this.isReady) {\n      if (msg.indexOf('** HEAT SERVER READY **')!=-1) {\n        this.$rootScope.$evalAsync(()=>{\n          this.isReady = true;\n        });\n      }\n    }\n    var lines = msg.split(/(\\r?\\n)/g);\n    for (var i=0; i<lines.length; i++) {\n      if (lines[i].match(/\\S/)) {\n        lines[i] = new String(lines[i]);\n        this.buffer.splice(this.buffer.length-1, 0, lines[i]); // must add at index 1 before last to keep last line for proper console display\n        if (this.buffer.length > this.MAX_CONSOLE_LINE_LENGTH) {\n          this.buffer.splice(0, this.buffer.length - this.MAX_CONSOLE_LINE_LENGTH);\n        }\n      }\n    }\n    this.emit('output');\n  }\n\n  stopServer() {\n    if (!this.isRunning)\n      throw new Error('Server already stopped, check server.isRunning before calling this method');\n\n    this.$mdToast.show(this.$mdToast.simple().textContent(\"Please wait while the HEAT server will be stopped\").hideDelay(10000));\n\n    /*\n    Files 'stopServerSignalFile', 'serverStoppedSignalFile' are used for signaling between wallet app and server.\n    The file 'embeddedinwallet.signal' is an indication for server to doing all these signaling.\n    On starting of stopping the wallet app creates file 'stopServerSignalFile'.\n    The server seen this file is created (exactly created new) will start shutdowning.\n    When server is at end of shutdowning  it creates the file 'serverStoppedSignalFile'.\n    When wallet will seen the 'serverStoppedSignalFile' (or time will expired) it will kill process that spawned server process.\n     */\n\n    const fs = require('fs');\n    //clear all previous signals\n    this.clearSignalFiles();\n\n    let finalStopAction = () => {\n      this.clearSignalFiles();\n      var kill = require('tree-kill'); // have to kill all processes or shutdown fails on windows.\n      kill(pid, 'SIGTERM');\n    };\n\n    let pid = this.childProcess.pid;\n    fs.writeFile(this.stopServerSignalFile, '', { flag: 'w' }, function(err) {\n      if (err) {\n        finalStopAction();\n        console.error(err);\n      }\n    });\n    let initStopTime = Date.now();\n    let promise = this.$interval(() => {\n      if (this.isRunning) {\n        let expired = Date.now() - initStopTime > 60 * 1000;\n        if (fs.existsSync(this.serverStoppedSignalFile) || expired) {\n          if (expired)\n            console.error('The waiting time has expired, the server process is stopped forcibly');\n          this.$interval.cancel(promise);\n          finalStopAction();\n        }\n      }\n    }, 2000, 40);\n  }\n\n  private clearSignalFiles() {\n    const fs = require('fs');\n    if (fs.existsSync(this.serverStoppedSignalFile))\n      fs.unlinkSync(this.serverStoppedSignalFile);\n    if (fs.existsSync(this.stopServerSignalFile))\n      fs.unlinkSync(this.stopServerSignalFile);\n  }\n\n  private getOS() {\n    if (navigator.appVersion.indexOf(\"Win\")!=-1) return 'WIN';\n    if (navigator.appVersion.indexOf(\"Mac\")!=-1) return 'MAC';\n    if (navigator.appVersion.indexOf(\"X11\")!=-1) return 'LINUX';\n    if (navigator.appVersion.indexOf(\"Linux\")!=-1) return 'LINUX';\n      throw new Error('Could not detect OS');\n  }\n\n  applicationShutdown() {\n    var deferred = this.$q.defer();\n    dialogs.shutdown(null);\n    this.$interval(() => {\n      if (!this.isRunning) {\n        deferred.resolve();\n      }\n    }, 2000);\n    return deferred.promise;\n  }\n\n  needsRecoveryRestart() {\n    var end = this.buffer.length-30;\n    for (var i=this.buffer.length; i>end; --i) {\n      if ((this.buffer[i]+\"\").indexOf(\"To complete storage recovery process please restart\")!=-1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('settings')\n@Inject('env', 'http')\nclass SettingsService {\n\n  /* DO NOT TOUCH.\n     Replaced with contents of VERSION file by release.sh */\n  private VERSION = \"%BUILD_OVERRIDE_VERSION%\";\n  private BUILD = \"%BUILD_OVERRIDE_BUILD%\";\n  public static EMBEDDED_HEATLEDGER_VERSION = \"%BUILD_OVERRIDE_HEATLEDGER_VERSION%\";\n\n  /*public static WEBSOCKET_URL = 'settings.websocket_url';\n  public static WEBSOCKET_URL_FALLBACK = 'settings.websocket_url_fallback';\n  public static WEBSOCKET_URL_LOCALHOST = 'settings.websocket_url_localhost';\n  public static RS_ADDRESS_PREFIX = 'settings.rs_address_prefix';\n  public static ENGINE_TYPE = 'settings.engine_type';\n  public static BASE_FEE = 'settings.base_fee';*/\n  public static DATEFORMAT_DEFAULT = 'settings.dateformat_default';\n  public static TIMEFORMAT_DEFAULT = 'settings.timeformat_default';\n  public static APPLICATION_NAME = 'settings.application_name';\n  public static APPLICATION_VERSION = 'settings.application_version';\n  public static APPLICATION_BUILD = 'settings.application_build';\n  public static SOCKET_RPC_TIMEOUT = 'settings.socket_rpc_timeout';\n  public static SOCKET_RECONNECT_DELAY = 'settings.socket_reconnect_delay';\n  public static LOG_API_ERRORS = 'settings.log_api_errors';\n  public static LOG_API_ALL = 'settings.log_api_all';\n  public static LOG_NOTIFY_ALL = 'settings.log_notify_all';\n  public static DICE_WORD_FOLDER = 'settings.dice_word_folder';\n  public static DICE_WORD_SUPPORTED_LANG = 'settings.dice_word_supported_lang';\n  public static TRANSACTION_PROCESSING_VISUALIZATION = 'settings.transaction_processing_visualization';\n  public static CAPTCHA_SITE_KEY = 'settings.captcha_site_key';\n  public static CAPTCHA_POPUP = 'settings.captcha_popup';\n\n  /* We are dropping the old CLOUD* and SOCKET* server api endpoints in favor of HEAT* server api */\n  public static HEAT_RPC_TIMEOUT = 'settings.heat_rpc_timeout';\n  public static HEAT_WEBSOCKET_REMOTE = 'settings.heat_websocket_remote';\n  public static HEAT_WEBSOCKET_LOCAL = 'settings.heat_websocket_local';\n  public static HEAT_WEBSOCKET = 'settings.heat_websocket';\n  public static HEAT_WEBRTC_WEBSOCKET = 'settings.heat_webrtc_websocket';\n  public static LOG_HEAT_ERRORS = 'settings.log_heat_errors';\n  public static LOG_HEAT_ALL = 'settings.log_heat_all';\n  public static LOG_HEAT_NOTIFY_ALL = 'settings.log_heat_notify_all';\n  public static LOG_HEAT_SERVER_ALL = 'settings.log_heat_server_all';\n  public static HEAT_HOST = 'settings.heat_host';\n  public static HEAT_PORT = 'settings.heat_port';\n  public static HEAT_HOST_REMOTE = 'settings.heat_host_remote';\n  public static HEAT_PORT_REMOTE = 'settings.heat_port_remote';\n  public static HEAT_HOST_LOCAL = 'settings.heat_host_local';\n  public static HEAT_PORT_LOCAL = 'settings.heat_port_local';\n  public static HEATLEDGER_CERTIFIER_ACCOUNT = 'settings.heatledger_certifier_account';\n  public static HEATLEDGER_BTC_ASSET = 'settings.heatledger_btc_asset';\n  public static HEATLEDGER_NAME_ASSIGNER = 'settings.heatledger_name_assigner';\n\n  public static ETHPLORER_INFO_URL = 'settings.ethplorer_get_info_url';\n  public static ETHERSCAN_BALANCES_URL = 'settings.etherscan_get_balances_url';\n  public static ETHERSCAN_TRANSACTION_URL = 'settings.etherscan_get_transactions_url';\n  public static ETHERSCAN_CONTRACT_ABI = 'settings.etherscan_get_contract_abi';\n\n  public static ETHERSCAN_API_TOKEN = 'settings.etherscan_api.token';\n  public static WEB3PROVIDER = 'settings.web3_provider';\n  public static BIP44_WALLET = 'settings.bip44_wallet';\n  public static ETH_TX_GAS_PRICE = 'settings.gas_price';\n  public static ETH_TX_GAS_REQUIRED = 'settings.gas';\n\n  public static FAILOVER_DESCRIPTOR: FailoverDescriptor;\n\n  static getFailoverDescriptor(): FailoverDescriptor {\n    if (!SettingsService.FAILOVER_DESCRIPTOR)\n      SettingsService.FAILOVER_DESCRIPTOR =  {\n        heightDeltaThreshold: 2,\n        balancesMismatchesThreshold: 0.9,\n        balancesEqualityThreshold: 0.8,\n        connectedPeersThreshold: 0.8,\n        knownServers: []\n      };\n    return SettingsService.FAILOVER_DESCRIPTOR;\n  }\n\n  /**\n   * failover will choose this host by priority\n   */\n  static forceServerPriority(host: string, port: string) {\n    let portNum = parseInt(port);\n    for (const server of SettingsService.getFailoverDescriptor().knownServers) {\n      if (server.host == host && server.port == portNum) {\n        server.originalPriority = server.priority;\n        server.priority = 0;\n      } else {\n        if (server.originalPriority)\n          server.priority = server.originalPriority;\n      }\n    }\n  }\n\n  constructor(private env: EnvService,\n              private http: HttpService) {\n\n    this.applyFailoverConfig();\n\n    /*this.settings[SettingsService.WEBSOCKET_URL] = 'wss://alpha.heatledger.com:8884/ws/';\n    this.settings[SettingsService.WEBSOCKET_URL_FALLBACK] = [];\n    this.settings[SettingsService.WEBSOCKET_URL_LOCALHOST] = 'ws://localhost:8884/ws/';\n    this.settings[SettingsService.RS_ADDRESS_PREFIX] = 'HEAT';\n    this.settings[SettingsService.ENGINE_TYPE] = 'heat';\n    this.settings[SettingsService.BASE_FEE] = '0.1';*/\n\n    /* @see http://blog.stevenlevithan.com/archives/date-time-format */\n    this.settings[SettingsService.DATEFORMAT_DEFAULT] = 'yyyy-mm-dd HH:MM:ss';\n    this.settings[SettingsService.TIMEFORMAT_DEFAULT] = 'HH:MM:ss';\n\n    this.settings[SettingsService.APPLICATION_NAME] = 'HEAT';\n    this.settings[SettingsService.APPLICATION_VERSION] = this.VERSION;\n    this.settings[SettingsService.APPLICATION_BUILD] = this.BUILD;\n    this.settings[SettingsService.SOCKET_RPC_TIMEOUT] = 30 * 1000;\n    this.settings[SettingsService.SOCKET_RECONNECT_DELAY] = 2000;\n    this.settings[SettingsService.LOG_API_ERRORS] = true;\n    this.settings[SettingsService.LOG_API_ALL] = false;\n    this.settings[SettingsService.LOG_NOTIFY_ALL] = false;\n\n    this.settings[SettingsService.DICE_WORD_FOLDER] = \"dice-words\";\n    this.settings[SettingsService.DICE_WORD_SUPPORTED_LANG] = {\n      \"de\": [\"de.txt\",\"677da2d5148342780f3cd1b09eaf489fac4ba00fe1083ba3296d41bdf088f471\"],\n      \"en\": [\"en.txt\",\"b329cea782bdd8b1de49bbb9fbdef9e8230e15eb08f0d7952613992246c38f96\"],\n      \"fi\": [\"fi.txt\",\"62323e0dc9ee39e191c98a361f20aa1417cb58da2eb5e40b9008d7973017d138\"],\n      \"fr\": [\"fr.txt\",\"9f6e8d4845ff178cdfe8215976adeaab9e9ebaa88ab2e8ca4de14cc7a1e1989c\"],\n      \"it\": [\"it.txt\",\"9a14dadd488e0fba95597c0b892320145d563a8b0554911af485179e91211847\"],\n      \"jp\": [\"jp.txt\",\"b9a5e099990617e058315f98def2ff5cd1be2d65178511d93c22153f20b6d164\"],\n      \"nl\": [\"nl.txt\",\"67b8baf68345041b029dd72fc51d1bd71c806587979d4ba7542c2534f1612168\"],\n      \"pl\": [\"pl.txt\",\"3822db4a595364dd44f8791f523c3482d4f1276ef31bb64e10d2cd2bb4e40a99\"],\n      \"sv\": [\"sv.txt\",\"87d1bf55193c95c03aa8e0d221dfaa94ccd8d6ea153b3d735eac235d592273fe\"]\n    };\n\n    this.settings[SettingsService.HEAT_RPC_TIMEOUT] = 30 * 1000;\n    this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE] = \"wss://heatwallet.com:7755/ws/\";\n    this.settings[SettingsService.HEAT_WEBSOCKET_LOCAL] = \"ws://localhost:7755/ws/\";\n    this.settings[SettingsService.LOG_HEAT_ERRORS] = true;\n    this.settings[SettingsService.LOG_HEAT_ALL] = false;\n    this.settings[SettingsService.LOG_HEAT_NOTIFY_ALL] = true;\n    this.settings[SettingsService.LOG_HEAT_SERVER_ALL] = false;\n    this.settings[SettingsService.HEAT_HOST_REMOTE] = \"https://heatwallet.com\"; // mainnet\n    this.settings[SettingsService.HEAT_PORT_REMOTE] = \"7734\";\n    this.settings[SettingsService.HEAT_HOST_LOCAL] = \"http://localhost\";\n    this.settings[SettingsService.HEAT_PORT_LOCAL] = \"7733\";\n    this.settings[SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT] = '2243498237075721643';\n    this.settings[SettingsService.HEATLEDGER_BTC_ASSET] = '5592059897546023466';\n    this.settings[SettingsService.HEATLEDGER_NAME_ASSIGNER] = '14439304480879065693';\n\n    this.settings[SettingsService.TRANSACTION_PROCESSING_VISUALIZATION] = 111; /* Use 666 for longer visuals */\n    this.settings[SettingsService.CAPTCHA_SITE_KEY] = \"6Le7pBITAAAAANPHWrIsoP_ZvlxWr0bSjOPrlszc\";\n    this.settings[SettingsService.CAPTCHA_POPUP] = \"https://heatwallet.com/captcha.html\";\n\n    this.settings[SettingsService.ETHPLORER_INFO_URL] = \"https://api.ethplorer.io/getAddressInfo/:address?apiKey=lwA5173TDKj60\";\n    this.settings[SettingsService.ETHERSCAN_BALANCES_URL] = \"https://api.etherscan.io/api?module=account&action=balancemulti&address=:addresses&tag=latest&apikey=:apiToken\";\n    this.settings[SettingsService.ETHERSCAN_TRANSACTION_URL] = \"https://api.etherscan.io/api?module=account&action=txlist&address=:address&startblock=0&endblock=99999999&page=:page&offset=:offset&sort=desc&apikey=:apiToken\";\n    this.settings[SettingsService.ETHERSCAN_CONTRACT_ABI] = \"https://api.etherscan.io/api?module=contract&action=getabi&address=:address&apikey=:apiToken\"\n\n    this.settings[SettingsService.ETHERSCAN_API_TOKEN] = \"S54GZXNCVGEAVCF1AQZZ8A8WDMQ9811HW9\";\n    this.settings[SettingsService.WEB3PROVIDER] = \"https://mainnet.infura.io/OT4wn16VtAydG2y9NVna\";\n    this.settings[SettingsService.ETH_TX_GAS_PRICE] = 20000000000;\n    this.settings[SettingsService.ETH_TX_GAS_REQUIRED] = 21000;\n    this.settings[SettingsService.BIP44_WALLET] = \"m/44'/60'/0'/0\";\n\n    /* Override with test endpoints */\n    if (heat.isTestnet) {\n      this.settings[SettingsService.HEAT_HOST_REMOTE] = \"https://alpha.heatledger.com\"; // testnet\n      this.settings[SettingsService.HEAT_PORT_REMOTE] = \"7734\"; // testnet\n      this.settings[SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT] = '4729421738299387565';\n      this.settings[SettingsService.HEATLEDGER_BTC_ASSET] = '2801534132504071984';\n      this.settings[SettingsService.HEATLEDGER_NAME_ASSIGNER] = '0000000';\n      this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE] = \"wss://alpha.heatledger.com:7755/ws/\";\n    }\n\n    /* betanet overrides */\n    if (heat.isBetanet) {\n      this.settings[SettingsService.HEAT_PORT_REMOTE] = \"7762\";\n      this.settings[SettingsService.HEAT_PORT_LOCAL] = \"7761\";\n      this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE] = \"wss://heatwallet.com:7763/ws/\";\n      this.settings[SettingsService.HEAT_WEBSOCKET_LOCAL] = \"ws://localhost:7763/ws/\";\n    }\n\n    this.settings[SettingsService.HEAT_HOST] = this.settings[SettingsService.HEAT_HOST_REMOTE];\n    this.settings[SettingsService.HEAT_PORT] = this.settings[SettingsService.HEAT_PORT_REMOTE];\n    this.settings[SettingsService.HEAT_WEBSOCKET] = this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE];\n\n    // if (true) {\n    //   this.settings[SettingsService.HEAT_HOST] = this.settings[SettingsService.HEAT_HOST_LOCAL];\n    //   this.settings[SettingsService.HEAT_PORT] = this.settings[SettingsService.HEAT_PORT_LOCAL];\n    //   this.settings[SettingsService.HEAT_WEBSOCKET] = this.settings[SettingsService.HEAT_WEBSOCKET_LOCAL];\n    // }\n  }\n\n  settings={};\n\n  public get(id:string) {\n    return this.settings[id];\n  }\n\n  public put(id:string,value:string) {\n    return this.settings[id]=value;\n  }\n\n  public setCurrentServer(server) {\n    this.settings[SettingsService.HEAT_HOST] = server.host;\n    this.settings[SettingsService.HEAT_PORT] = server.port;\n    this.settings[SettingsService.HEAT_WEBSOCKET] = server.websocket;\n  }\n\n  public applyFailoverConfig() {\n    let resolveFailoverDescriptor = (json: any) => {\n      if (heat.isTestnet)\n        SettingsService.FAILOVER_DESCRIPTOR = json.testnet;\n      else if (heat.isBetanet)\n        SettingsService.FAILOVER_DESCRIPTOR = json.betanet;\n      else\n        SettingsService.FAILOVER_DESCRIPTOR = json.mainnet;\n\n      this.settings[SettingsService.HEAT_WEBRTC_WEBSOCKET] = SettingsService.FAILOVER_DESCRIPTOR.signalingUrl;\n    };\n    if (this.env.type == EnvType.BROWSER) {\n      this.http.get('failover-config.json').then((json: any) => {\n        resolveFailoverDescriptor(json);\n      }, (reason) => {\n        console.log(\"Cannot load 'failover-config.json': \" + reason ? reason : \"\");\n      });\n    } else if (this.env.type == EnvType.NODEJS) {\n      // @ts-ignore\n      const fs = require('fs');\n      fs.readFile('failover-config.json', (err, data) => {\n        if (err) {\n          console.log(\"Cannot load 'failover-config.json': \" + err);\n          throw err;\n        }\n        let json = JSON.parse(data);\n        resolveFailoverDescriptor(json);\n      });\n    }\n  }\n\n}\n\ninterface ServerDescriptor {\n  host: string;\n  port: number;\n  websocket: string;\n  originalPriority?: number;\n  priority?: number;\n  health?: IHeatServerHealth;\n  statusScore?: number;\n  statusError?: any;\n}\n\ninterface FailoverDescriptor {\n  heightDeltaThreshold: number;  // e.g.  2 means 2 blocks ahead\n  balancesMismatchesThreshold: number;  // 0 - 1\n  balancesEqualityThreshold: number;  // 0 - 1\n  connectedPeersThreshold: number;  // 0 - 1\n  knownServers: ServerDescriptor[];\n  signalingUrl?: string;  //central WebRTC signaling server, regardless the choosed server\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('status')\nclass StatusService {\n\n  public static READ = 1;\n  public static TRASHED = 2;\n  public static REPLIED = 4;\n  public static STARRED = 8;\n\n  /* Determine if the given status includes the flag */\n  public contains(status: number, flag: number): boolean {\n    return Boolean(status & flag);\n  }\n}","/// <reference path='../lib/EventEmitter.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('storage')\nclass StorageService {\n\n  private stores: IStringHashMap<Array<Store>> = {};\n  private user: UserService;\n\n  /**\n   * Creates a namespaced Store object\n   *\n   * @param namespace String\n   *    The storage namespace, meaning all keys are prepended with this namespace and\n   *    a dot '.' before they are passed on to the real storage backend\n   * @param $scope IScope\n   *    Optional $scope object, if provided the Store will be removed and unregistered\n   *    when the scope is destroyed\n   * @param globalScope Boolean\n   *    Optional argument indicating that unlike the default behavior (where we include\n   *    the current signed in user account into the namespace key) we want the namespace\n   *    to be used as. This is meant for properties that are accessible to all users.\n   */\n  public namespace(namespace: string, $scope?: angular.IScope, globalScope?: boolean) : Store {\n    var store = new Store(namespace, this);\n    if ($scope) {\n      $scope.$on('$destroy',() => {\n        this.removeStore(store)\n      });\n    }\n    this.addStore(store);\n    if (!angular.isDefined(globalScope) || !globalScope) {\n      this.user = this.user || <UserService> heat.$inject.get('user'); // causes circular dependency if done through DI.\n      if (this.user.unlocked) {\n          store.enable(this.user.account)\n      }\n      else {\n        var closure = () => {\n          this.user.removeListener(UserService.EVENT_UNLOCKED, closure);\n            store.enable(this.user.account)\n        }\n        this.user.on(UserService.EVENT_UNLOCKED, closure);\n      }\n    }\n    else {\n      store.enable();\n    }\n    return store;\n  }\n\n  private addStore(store: Store) {\n    (this.stores[store.namespace] = this.stores[store.namespace] || []).push(store);\n  }\n\n  private removeStore(store: Store) {\n    if (angular.isArray(this.stores[store.namespace])) {\n      this.stores[store.namespace] = this.stores[store.namespace].filter((s) => s != store);\n      if (this.stores[store.namespace].length == 0) {\n        delete this.stores[store.namespace];\n      }\n    }\n    store.removeAllListeners();\n  }\n\n  public emit(namespace: string, event: string, ...args: Array<any>) {\n    var ns = this.stores[namespace];\n    if (angular.isArray(ns)) {\n      ns.forEach((store) => {\n        store.emit.apply(store, [event].concat(args))\n      });\n    }\n  }\n}\n\nclass Store extends EventEmitter {\n\n  public static EVENT_PUT = 'put';\n  public static EVENT_REMOVE = 'remove';\n\n  private prefix: string;\n  private _enabled: boolean = false;\n\n  constructor(public namespace: string, private storage: StorageService) {\n    super();\n    if (!angular.isString(namespace) || !utils.emptyToNull(namespace))\n      throw new Error('Illegal argument, namespace must be a non-empty string');\n  }\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public enable(userScope?: string) {\n    this.prefix = this.namespace + \".\";\n    if (angular.isDefined(userScope)) {\n      this.prefix = userScope + \".\" + this.prefix;\n    }\n    this._enabled = true;\n  }\n\n  public disable() {\n    this._enabled = false;\n  }\n\n  private ensureIsEnabled() {\n    if (!this._enabled) {\n      throw new Error('Store not enabled. Are you accessing a user scoped Store without a user being signed in?');\n    }\n  }\n\n  public clear() {\n    this.forEach((namespacedKey) => { this.remove(namespacedKey) });\n  }\n\n  public remove(path: string) {\n    this.ensureIsEnabled();\n    var key = this.prefix + path;\n    localStorage.removeItem(key);\n    this.storage.emit(this.namespace, Store.EVENT_REMOVE, key);\n  }\n\n  public put(path: string, val: any) {\n    this.ensureIsEnabled();\n    var key = this.prefix + path, value = JSON.stringify(val)\n    localStorage.setItem(key, value);\n    this.storage.emit(this.namespace, Store.EVENT_PUT, key, value);\n  }\n\n  public get(path: string, defaultValue?: any): any {\n    return this.read(path, defaultValue);\n  }\n\n  public getObject<T>(path: string, defaultValue?: T): T {\n    return this.read(path, defaultValue);\n  }\n\n  public getNumber(path: string, defaultValue?: number): number {\n    return this.read(path, defaultValue);\n  }\n\n  public getBoolean(path: string, defaultValue?: boolean): boolean {\n    return this.read(path, defaultValue);\n  }\n\n  public getString(path: string, defaultValue?: string): string {\n    return this.read(path, defaultValue);\n  }\n\n  public forEach(callbackFn: (namespacedKey: string, value?: any, fullyQualifiedKey?: string)=>void) {\n    this.keys().forEach((namespacedKey) => {\n      if (callbackFn.length > 1)\n        callbackFn(namespacedKey, this.get(namespacedKey), this.prefix + namespacedKey);\n      else\n        callbackFn(namespacedKey);\n    });\n  }\n\n  public keys() : Array<string> {\n    var keys = [];\n    var fullyQualifiedKey: string, namespacedKey: string;\n    for (var i=0; i<localStorage.length; i++) {\n      fullyQualifiedKey = localStorage.key(i);\n      if (fullyQualifiedKey.indexOf(this.prefix) == 0) { // is this key part of this Store's namespace?\n        namespacedKey = fullyQualifiedKey.substring(this.prefix.length);\n        keys.push(namespacedKey);\n      }\n    }\n    return keys;\n  }\n\n  private read(path: string, defaultValue?: any): any {\n    this.ensureIsEnabled();\n    var text: string = localStorage.getItem(this.prefix + path);\n    if (angular.isString(text)) {\n      try {\n        return JSON.parse(text);\n      } catch (e) {\n        console.error(`Could not read localStorage key '${path}', throws`, e);\n      }\n    }\n    return angular.isDefined(defaultValue) ? defaultValue : null;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface TrollboxServiceMessage {\n  username: string;\n  text: string;\n}\ninterface SlackMessageEvent {\n  type: string;   // \"message\",\n  user: string;   // \"U4092L18X\",\n  text: string;\n  ts: string;     // \"1494455657.040443\",\n  channel: string;// \"C5C4GPU9M\",\n}\n\n@Service('trollbox')\n@Inject('$rootScope','heat','user')\nclass TrollboxService {\n\n  /* Trollbox backend is located on testnet server */\n  private host = \"https://heatwallet.com\";\n  private port = 7734;\n  private wss  = \"wss://heatwallet.com:7755/ws/\";\n  private subscriber: HeatSubscriber;\n\n  public name: string;\n  constructor(private $rootScope: angular.IRootScopeService,\n              private heat: HeatService,\n              private user: UserService) {\n    /* Since using custom websocket endpoint we must manually create our subscriber */\n    this.subscriber = heat.createSubscriber(this.wss);\n  }\n\n  public join(name: string) {\n    this.name = name;\n  }\n\n  public getMessages(): angular.IPromise<Array<TrollboxServiceMessage>>[] {\n    //let fromTelegram = this.heat.getRaw(this.host, this.port, '/microservice/telegram-trollbox/messages');\n    let fromSlack = this.heat.getRaw(this.host, this.port, '/microservice/trollbox/messages');\n    return [/*fromTelegram,*/ fromSlack];\n  }\n\n  public sendMessage(message: string) {\n    // return this.heat.postRaw(this.host, this.port, '/microservice/telegram-trollbox/send', {\n    //   username: this.name,\n    //   message: message,\n    //   publicKey: this.user.publicKey,\n    //   signature: heat.crypto.signBytes(converters.stringToHexString(\"hello\"), converters.stringToHexString(this.user.secretPhrase))\n    // });\n    return this.heat.postRaw(this.host, this.port, '/microservice/trollbox/send', {\n      username: this.name,\n      message: message,\n      publicKey: this.user.publicKey,\n      signature: heat.crypto.signBytes(converters.stringToHexString(\"hello\"), converters.stringToHexString(this.user.secretPhrase))\n    });\n  }\n\n  public subscribe(callback: (event:TrollboxServiceMessage)=>void, $scope:angular.IScope): ()=>void {\n    return this.subscriber.microservice({'microservice':'trollbox.service'}, callback, $scope);\n  }\n\n}\n","\n@Service('update3rdPartyAPIResponsesUtil')\nclass Update3rdPartyAPIResponsesUtil {\n\n  public static updateBTCGetAddressInfo = (info, btcProvider): any => {\n    if(btcProvider instanceof BtcBlockExplorer3rdPartyService) {\n      /* As per blockcypher doc https://www.blockcypher.com/dev/bitcoin/#address\n      final_n_tx represents total number of confirmed and unconfirmed transactions */\n      let transactions = new Set();\n      if(info.txrefs){\n        info.txrefs.forEach(txref => {\n          transactions.add(txref.tx_hash)\n        });\n      }\n      info.transactions = Array.from(transactions)\n      info.txApperances = info.final_n_tx;\n      info.balanceSat = info.final_balance\n      return info;\n    }\n    return info\n  }\n\n  public static updateBTCGetTxInfo = (info, btcProvider): any => {\n    if(btcProvider instanceof BtcBlockExplorer3rdPartyService) {\n      info.blockheight = info.block_height\n      return info;\n    }\n    return info\n  }\n}","/// <reference path='../lib/EventEmitter.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('user')\n@Inject('$q','$window','localKeyStore','settings','$location','$rootScope')\nclass UserService extends EventEmitter {\n\n  public static EVENT_UNLOCKED = 'unlocked';\n  public static EVENT_LOCKED = 'locked';\n\n  public unlocked: boolean = false;\n\n  /* Secret phrase as regular string (the master seed - holds ethereum and heat)\n     This is ALWAYS the secretPhrase to the master HEAT account that was used to\n     unlock the wallet. This never holds the Bitcoin or Ethereum private key since\n     those are in userService.currency.secretPhrase. */\n  //public secretPhrase: string;\n  private __secretPhrase: string\n  get secretPhrase() {\n    return this.__secretPhrase\n  }\n  set secretPhrase(s) {\n    this.__secretPhrase = s\n  }\n\n  /* Public key as HEX string, obtained from secretphrase (this is a HEAT public key!!)*/\n  //public publicKey: string;\n  public __publicKey: string;\n  get publicKey() {\n    return this.__publicKey\n  }\n  set publicKey(p) {\n    this.__publicKey = p\n  }\n\n  /* HEAT Account in numeric format */\n  //public account: string;\n  public __acount: string\n  get account() {\n    return this.__acount\n  }\n  set account(a) {\n    this.__acount = a\n  }\n\n  /* HEAT Public or private email identifier */\n  //public accountName: string;\n  public __accountName: string\n  get accountName() {\n    return this.__accountName\n  }\n  set accountName(a) {\n    this.__accountName = a\n  }\n\n  //public accountNameIsPrivate: boolean;\n  public __accountNameIsPrivate: boolean;\n  get accountNameIsPrivate() {\n    return this.__accountNameIsPrivate\n  }\n  set accountNameIsPrivate(a) {\n    this.__accountNameIsPrivate = a\n  }\n\n  /* Local key storage key contains the\n      - secret phrase\n      - account\n      - name\n      - public key\n     Of the master HEAT account but only in case a login is done with from the drop down menu\n     and after entering the pin code. In case the user enters his private key directly no\n     key object is provided.\n  */\n  //public key: ILocalKey;\n  public __key: ILocalKey;\n  get key() {\n    return this.__key\n  }\n  set key(k) {\n    this.__key = k\n  }\n\n  /* Compatible with Ethereum and Bitcoin */\n  public bip44Compatible: boolean;\n\n  /* ICurrency implementation in use currently, the currency used is determined when we\n     unlock an account (provide secret phrase + selected address + currency type) */\n  //public currency: ICurrency = null\n  public __currency: ICurrency\n  get currency() {\n    return this.__currency\n  }\n  set currency(c) {\n    this.__currency = c\n  }\n\n  constructor(private $q,\n              private $window: angular.IWindowService,\n              private localKeyStore: LocalKeyStoreService,\n              private settings: SettingsService,\n              private $location: angular.ILocationService,\n              private $rootScope: angular.IRootScopeService) {\n    super();\n  }\n\n  refresh() {\n    var deferred = this.$q.defer();\n    let assigner = this.settings.get(SettingsService.HEATLEDGER_NAME_ASSIGNER);\n    let heatService = <HeatService> heat.$inject.get('heat');\n    heatService.api.getTransactionsFromTo(assigner, this.account, 0, 10).then((transactions) => {\n      for (let i=0; i<transactions.length; i++) {\n        let rawText = heatService.getHeatMessageContents(transactions[i]);\n        if (rawText) {\n          if (this.tryParseRegistrationMessage(rawText)) {\n            return;\n          }\n        }\n      }\n    }).finally(deferred.resolve);\n    return deferred.promise;\n  }\n\n  /**\n   * Login the current user, on success the promise returned is resolved\n   * if for some reason the login fails the promise is rejected with a\n   * reason.\n   *\n   * @param secretPhrase user secret phrase\n   * @param key ILocalKey\n   * @returns Promise\n   */\n  unlock(secretPhrase: string, key?: ILocalKey, bip44Compatible?: boolean, currency?: ICurrency): angular.IPromise<any> {\n    var deferred = this.$q.defer();\n\n    /* wrap this in evalasync so that any component based on ng-if=\"vn.user.unlocked\"\n       will be reloaded */\n    // this.lock(true) // should be removed with the depricated eth stuff from UserService?\n    this.$rootScope.$evalAsync(()=> {\n      /* Now all ng-if=\"vn.user.unlocked\" are destroyed */\n      this.$rootScope.$evalAsync(()=> {\n        if(key)\n          this.key = key;\n\n        this.unlocked = true;\n        this.accountName = '[no name]';\n\n        /*\n        Currency has link to its master secret phrase that is used for unlocking this service\n        when is choosed currency of different HEAT account.\n        For example: currently unlocked is master account#1, user chooses currency#X associated with master account#2,\n        so we need to do currently unlocked account#2.\n        */\n\n        let masterSecretPhrase;\n        if (!currency || currency.symbol=='HEAT') {\n          masterSecretPhrase = secretPhrase;\n          let address = heat.crypto.getAccountId(masterSecretPhrase);\n          this.currency = new HEATCurrency(masterSecretPhrase, masterSecretPhrase, address);\n        } else {\n          masterSecretPhrase = currency.masterSecretPhrase;\n          this.currency = currency;\n        }\n        if (masterSecretPhrase && this.secretPhrase !== masterSecretPhrase) {\n          /* Circular dependencies force this */\n          this.bip44Compatible = bip44Compatible || false;\n          /* Everything obtained from the secret phrase - These are all for the master HEAT account */\n          this.secretPhrase = masterSecretPhrase;\n          this.publicKey = heat.crypto.secretPhraseToPublicKey(masterSecretPhrase);\n          this.account = heat.crypto.getAccountId(masterSecretPhrase);\n        }\n\n        /* The other parts are on the blockchain */\n        this.refresh().then(() => {\n          deferred.resolve();\n          this.emit(UserService.EVENT_UNLOCKED);\n        });\n      })\n    })\n    return deferred.promise;\n  }\n\n  lock(noreload?:boolean) {\n    this.key = null\n    this.secretPhrase = null;\n    this.unlocked = false;\n    this.account = null;\n    this.currency = null\n    this.bip44Compatible = false\n    this.emit(UserService.EVENT_LOCKED);\n    if (noreload)\n      return\n    window.location.reload(true);\n  }\n\n  requireLogin() {\n    if (!this.unlocked) {\n      this.$location.path('login');\n    }\n  }\n\n  tryParseRegistrationMessage(rawText: string): boolean {\n    let regexp = /You have chosen the (public|private) user name `(.*)`/m;\n    let match = rawText.match(regexp);\n    if (match) {\n      this.accountNameIsPrivate = match[1] == 'private';\n      this.accountName = match[2];\n\n      // update local wallet name\n      if (this.key && this.key.name != this.accountName) {\n        this.key.name = this.accountName;\n        this.localKeyStore.add(this.key);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface IHeatWalletFile {\n  version: number;\n  entries: Array<IHeatWalletFileEntry>;\n}\n\ninterface IHeatWalletFileEntry {\n  /* Decrypt with LocalKeyStoreService.decode() requires pin code gives ILocalKey */\n  contents: string;\n\n  /* Numeric account id, also contained in encrypted contents */\n  account?: string;\n\n  /* Optional name, also contained in encrypted contents */\n  name?: string;\n\n  /* Optional if this is a testnet key */\n  isTestnet?: boolean;\n}\n\n@Service('walletFile')\nclass WalletFileService {\n\n  createFromText(contents: string): IHeatWalletFile {\n    return this.decode(contents);\n  }\n\n  encode(walletFile: IHeatWalletFile): string {\n    return JSON.stringify(walletFile, null, 2);\n  }\n\n  decode(contents: string): IHeatWalletFile {\n    let data = this.parseJSON(contents);\n    if (!data)\n      return null;\n\n    let version = data.version;\n    if (!angular.isNumber(version))\n      return null;\n\n    if (version != 1)\n      return null;\n\n    let entries = data.entries;\n    if (!angular.isArray(entries))\n      return null;\n\n    let walletFile: IHeatWalletFile = {\n      version: version,\n      entries: []\n    };\n    entries.forEach(entry => {\n      if (angular.isString(entry.contents)) {\n        walletFile.entries.push(entry);\n      }\n    });\n    return walletFile;\n  }\n\n  parseJSON(contents: string): any {\n    try {\n      let json = JSON.parse(contents);\n      if (angular.isObject(json))\n        return json\n    } catch (e) {\n      console.log('Could not parse wallet file', e);\n    }\n  }\n}\n\n","declare var Tx: any;\n@Service('web3')\n@Inject('$q', 'user', 'settings', '$window')\nclass Web3Service {\n\n  public web3: any;\n  constructor(\n              private $q: angular.IQService,\n              private userService: UserService,\n              private settingsService: SettingsService,\n              private $window: angular.IWindowService) {\n\n    const Web3 = $window.heatlibs.Web3\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.settingsService.get(SettingsService.WEB3PROVIDER)));\n  }\n\n  parseInput(input: string) {\n    return this.web3.toAscii(input)\n  }\n\n  getBalanceOf(address: any) : angular.IPromise<string> {\n    let deferred = this.$q.defer<string>()\n    this.web3.eth.getBalance(address, (err,balance) => {\n      if (err) deferred.reject(err)\n      else deferred.resolve(this.web3.fromWei(balance))\n    })\n    return deferred.promise\n  }\n\n  getTransactionCount = (from: string) => {\n    return new Promise((resolve, reject) => {\n      this.web3.eth.getTransactionCount(from, (error, result) => {\n        if (error) reject(error);\n        resolve(this.web3.toHex(result));\n      })\n    })\n  }\n\n  getGasEstimate = (_from: string, _to: string, _data: string) => {\n    return new Promise((resolve, reject) => {\n      this.web3.eth.estimateGas({ from: _from, data: _data, to: _to }, (error, result) => {\n        if (error) reject(error)\n        resolve(this.web3.toHex(result));\n      })\n    })\n  }\n\n  getGasPrice = () => {\n    return new Promise((resolve, reject) => {\n      this.web3.eth.getGasPrice((error, result) => {\n        if (error) reject(error);\n        resolve(result.toString());\n      })\n    })\n  }\n\n  sendEther(_from: string,_to: string, _value: any): Promise<{ txHash:string }> {\n    let data = {\n      from: _from,\n      to: _to,\n      value: _value,\n      gasPrice: this.settingsService.get(SettingsService.ETH_TX_GAS_PRICE),\n      gas: this.settingsService.get(SettingsService.ETH_TX_GAS_REQUIRED)\n    }\n    return new Promise((resolve, reject) => {\n      this.web3.eth.sendTransaction(data, (err, txHash) => {\n        if (err) {\n          reject(err)\n        }\n        else {\n          resolve({\n            txHash: txHash\n          })\n        }\n      })\n    })\n  }\n}","@Service('mofoSocketService')\n@Inject('$q', '$timeout', '$interval', '$rootScope')\nclass MofoSocketService {\n  private socket: any;\n  private url: string;\n  private alive_cb: any;\n\n  constructor(\n    private $q: angular.IQService,\n    private $timeout: angular.ITimeoutService,\n    private $interval: angular.IIntervalService,\n    private $rootScope: angular.IScope) {\n  }\n\n  mofoSocket = (url = 'wss://cloud.mofowallet.org:7986/ws/') => {\n    if(this.url == url && this.socket !== undefined) {\n      return new Promise((resolve, reject) => {\n        resolve(this.socket)\n      })\n    }\n    return this.createSocket(url)\n  }\n\n  getSocketUrl = () => {\n    return this.url\n  }\n\n  private createSocket = (url) => {\n    return new Promise((resolve, reject) => {\n      this.url = url;\n      this.socket = new WebSocket(url);\n      this.socket.onclose = (evt) => { this.onclose(evt); reject() };\n      this.socket.onopen = (evt) => { this.onopen(evt); resolve(this.socket) };\n      this.socket.onerror = (evt) => { this.onmessage(evt) };\n      this.socket.onmessage = (evt) => { this.onmessage(evt) };\n    })\n  }\n\n\n  _send = (argv) => {\n    if (this.socket && this.socket.readyState == 1) {\n      var message = JSON.stringify(argv);\n      this.socket.send(message);\n    }\n  }\n\n  onopen = (event) => {\n    console.log('WEBSOCKET - onopen ' + new Date(), { socket: this.socket, event: event })\n    if(this.alive_cb)\n      this.$interval.cancel(this.alive_cb)\n\n    this.alive_cb = this.$interval(this._createKeepAliveIntervalHandler(), 10000);\n  }\n\n  private _createKeepAliveIntervalHandler = () => {\n    return () => {\n      this._send('ping');\n    }\n  }\n\n  onclose = (event) => {\n    console.log('WEBSOCKET - onclose ' + new Date(), { socket: this.socket, event: event })\n  }\n\n  onerror = (event) => {\n    console.log('WEBSOCKET - onerror REMOVE BAD URL [' + this.url + ']' + new Date(), { event: event });\n  }\n\n  onmessage = (event) => {\n    var message = event.data;\n\n    if (message == \"pong\" || !message) { return }\n    try {\n      var data = JSON.parse(message);\n    }\n    catch (e) {\n      console.log('WEBSOCKET - JSON parse error', { socket: this.socket, event: event })\n      return;\n    }\n    if (!Array.isArray(data)) {\n      throw new Error('WEBSOCKET - Expected an array');\n    }\n\n    var op = data[0];\n    if (op == \"response\") {\n      this.$rootScope.$broadcast(data[1], data[2])\n    }\n    else {\n      throw new Error('WEBSOCKET - Unsupported operation');\n    }\n  }\n\n  public getTransactions = (account, timestamp = 0) => {\n    let deferred = this.$q.defer<any>();\n    this._send(['call', 'getTransactions', 'getActivity', { account }])\n    this.$rootScope.$on('getTransactions', (event, opts) => {\n      if(opts.transactions)\n        deferred.resolve(opts.transactions)\n      else\n      deferred.reject()\n    });\n    return deferred.promise;\n  }\n\n  public getTransactionsCount = (account) => {\n    let deferred = this.$q.defer<number>();\n    this._send(['call', 'getTransactionsCount', 'getActivity', { account }])\n    this.$rootScope.$on('getTransactionsCount', (event, opts) => {\n      // implementation here\n      deferred.resolve(15)\n    });\n    return deferred.promise;\n  }\n\n  public getAccount = (address: string) => {\n    let deferred = this.$q.defer<any>();\n    this._send(['call', 'getFIMKAccount', 'getAccount', { account: address }])\n    this.$rootScope.$on('getFIMKAccount', (event, opts) => {\n      if (opts.unconfirmedBalanceNQT) {\n        deferred.resolve(opts)\n      } else if(opts.errorDescription == \"Unknown account\") {\n        deferred.resolve(\"0.00000000\")\n      } else {\n        deferred.reject(opts.errorDescription)\n      }\n    });\n    return deferred.promise;\n  }\n\n  public sendFim = (txObject) => {\n    let deferred = this.$q.defer<any>();\n    this._send(['call', 'sendMoney', 'callAPIFunction', txObject])\n    this.$rootScope.$on('sendMoney', (event, opts) => {\n      if(!opts.unsignedTransactionBytes) {\n        deferred.reject(opts.errorDescription)\n      }\n      let userService: UserService = heat.$inject.get('user')\n      var signature = heat.crypto.signBytes(opts.unsignedTransactionBytes, converters.stringToHexString(userService.secretPhrase))\n      var payload = opts.unsignedTransactionBytes.substr(0, 192) + signature + opts.unsignedTransactionBytes.substr(320);\n      this._send(['call', 'broadcastTransaction', 'callAPIFunction', { requestType: 'broadcastTransaction', transactionBytes: payload }])\n      this.$rootScope.$on('broadcastTransaction', (event, opts) => {\n        if (opts.errorCode) {\n          deferred.reject(opts.errorDescription)\n        }\n        else {\n          deferred.resolve({ txId: opts.transaction })\n        }\n      });\n    });\n    return deferred.promise;\n  }\n\n  public getRecentTx = (account) => {\n    let deferred = this.$q.defer<any>();\n    this._send(['call', 'getRecentTransactions', 'getRecentTransactions', { accounts: [account] }])\n    this.$rootScope.$on('getRecentTransactions', (event, opts) => {\n      if (!opts.errorCode) {\n        deferred.resolve(opts);\n      } else {\n        deferred.reject(opts.error)\n      }\n    });\n    return deferred.promise;\n  }\n\n  public getAccountAssets = (account) => {\n    let deferred = this.$q.defer<any>();\n    this._send(['call', 'getAccountAssets', 'callAPIFunction', {requestType:'getAccountAssets',account:account}])\n    this.$rootScope.$on('getAccountAssets', (event, opts) => {\n      if (!opts.errorCode) {\n        deferred.resolve(opts.accountAssets);\n      } else {\n        deferred.reject(opts.error)\n      }\n    });\n    return deferred.promise;\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ndeclare var saveAs: any;\n@RouteConfig('/login')\n@Component({\n  selector: 'login',\n  template: `\n    <div layout=\"column\" flex layout-align=\"start center\">\n      <div layout=\"column\" layout-padding class=\"outer-container\">\n        <div layout=\"column\" layout-align=\"start center\" layout-padding>\n          <img src=\"assets/heatwallet.png\" class=\"wallet\">\n        </div>\n        <div layout=\"column\" flex>\n\n          <!-- SIGNIN, CREATE & ADD buttons -->\n          <div layout=\"column\" flex ng-if=\"!vm.page\">\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='signin'\" aria-label=\"Sign in\" ng-show=\"vm.localKeys.length\">\n                <md-tooltip md-direction=\"bottom\">Sign in with your Password (or Pin Code)</md-tooltip>\n                Sign in\n              </md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='create';vm.generateNewSecretPhrase()\" aria-label=\"Create\">\n                <md-tooltip md-direction=\"bottom\">Create a new account</md-tooltip>\n                Create\n              </md-button>\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page='add'\" aria-label=\"Add\">\n                <md-tooltip md-direction=\"bottom\">Add existing account</md-tooltip>\n                Add\n              </md-button>\n            </div>\n          </div>\n\n          <!-- SIGNIN page (dropdown shows keys in wallet, must enter pin) -->\n          <div layout=\"column\" flex ng-if=\"vm.page=='signin'\">\n            <div layout=\"column\" flex>\n              <md-input-container>\n                <label>Account</label>\n                <md-select ng-model=\"vm.pageSigninAccount\" ng-change=\"vm.pageSigninPincode=null;\">\n                  <md-option ng-repeat=\"key in vm.localKeys\" value=\"{{key.account}}\">{{key.name||key.account}}</md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n            <div layout=\"column\" flex>\n              <md-input-container flex ng-show=\"vm.pageSigninAccount\">\n                <label>Password (or Pin Code)</label>\n                <input type=\"password\" ng-model=\"vm.pageSigninPincode\" required name=\"pincode\" maxlength=\"15\">\n              </md-input-container>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\" ng-show=\"vm.pageSigninWrongPincode\">\n              <b>sorry, buts that the wrong pincode</b>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page=''\" aria-label=\"Back\">Options</md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageSinginLogin()\"\n                ng-disabled=\"!vm.pageSigninPincode||!vm.pageSigninAccount\" aria-label=\"Continue in\">Sign in</md-button>\n            </div>\n          </div>\n\n          <!-- CREATE page (0) -->\n          <div layout=\"column\" flex ng-if=\"vm.page=='create'\">\n            <div layout=\"row\" flex layout-align=\"center center\">\n              <md-input-container flex>\n                <label>User name</label>\n                <input ng-model=\"vm.pageCreateUserName\" required name=\"username\" maxlength=\"100\" input-append=\"@heatwallet.com\">\n              </md-input-container>\n              <md-input-container flex style=\"max-width:120px !important\">\n                <md-icon md-font-set=\"regular-font\">@heatwallet.com</md-icon>\n                <input style=\"visibility: hidden;\">\n              </md-input-container>\n            </div>\n            <div layout=\"column\" flex>\n              <md-input-container flex>\n                <label>Secret phrase</label>\n                <textarea rows=\"2\" flex ng-model=\"vm.pageCreateSecretPhrase\" readonly ng-trim=\"false\" id=\"create-new-textarea\"></textarea>\n                <!--copy to clipboard using clipboard.js, see https://www.npmjs.com/package/clipboard-->\n                <md-icon id=\"copy-secret\" data-clipboard-target=\"#create-new-textarea\" md-font-library=\"material-icons\" class=\"clickable-icon\">\n                  <md-tooltip md-direction=\"right\">Copy to clipboard</md-tooltip>content_copy\n                </md-icon>\n              </md-input-container>\n            </div>\n            <div layout=\"column\" flex>\n              <md-input-container flex>\n                <label>Password (or Pin Code) (required)</label>\n                <input type=\"password\" ng-model=\"vm.pageCreatePincode\" required name=\"pincode\" maxlength=\"15\">\n              </md-input-container>\n            </div>\n            <div layout=\"column\" flex>\n              <md-radio-group ng-model=\"vm.pageCreateNameType\">\n                <md-radio-button value=\"public\" class=\"md-primary\">\n                  Publicly searchable email account id\n                </md-radio-button>\n                <md-radio-button value=\"private\" class=\"md-primary\">\n                  Private email account id (sender must know it)\n                </md-radio-button>\n              </md-radio-group>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page=''\" aria-label=\"Back\">Options</md-button>\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.generateNewSecretPhrase()\" aria-label=\"Other\">\n                Renew pass\n              </md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='create1'\"\n                ng-disabled=\"!vm.pageCreateUserName||!vm.pageCreateSecretPhrase||!vm.isValidPincode(vm.pageCreatePincode)\"\n                aria-label=\"Continue\">Continue</md-button>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\">\n              <br>\n              <span class=\"account-preview\">{{vm.pageCreateAccount}}</span>\n              <br>\n              <span>BIP44 compatible = <b>{{vm.bip44Compatible?'TRUE':'FALSE'}}</b></span>\n            </div>\n          </div>\n\n          <!-- CREATE page (1) -->\n          <div layout=\"column\" flex ng-if=\"vm.page.indexOf('create')!=-1\" ng-show=\"vm.page=='create1'\" layout-padding>\n            <div layout=\"column\" flex>\n              <p>Although we have absolutely nothing against robots, we still would like to know if you are one.</p>\n            </div>\n            <div layout=\"row\" flex layout-align=\"center center\">\n              <no-captcha ng-if=\"!vm.useExternalCaptcha\" g-recaptcha-response=\"vm.pageCreateRecaptchaResponse\" expired-callback=\"vm.recaptchaExpired()\"></no-captcha>\n              <md-button ng-if=\"vm.useExternalCaptcha\" ng-click=\"vm.doChallenge()\" class=\"md-raised md-primary\" ng-disabled=\"vm.pageCreateRecaptchaResponse\">Click here</md-button>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='create'\" aria-label=\"Back\">Back</md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.createAccount();vm.page='create2'\" ng-disabled=\"!vm.pageCreateRecaptchaResponse\"\n                aria-label=\"Continue\">Create Account</md-button>\n            </div>\n          </div>\n\n          <!-- CREATE page (2) -->\n          <div layout=\"column\" flex ng-if=\"vm.page.indexOf('create')!=-1\" ng-show=\"vm.page=='create2'\">\n            <div layout=\"column\" flex layout-padding ng-show=\"vm.pageCreateLoading\">\n              <div layout=\"row\" layout-align=\"space-around\">\n                <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\n              </div>\n              <span>Creating your account, making it extra special for you.</span>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\" ng-show=\"vm.pageCreateError\">\n              <span>Something went wrong it seems</span>\n              <span>This is what we got back from our blockchain minions:</span>\n              <span><b>{{vm.pageCreateError}}</b></span>\n              <md-button class=\"md-raised md-primary\" ng-click=\"vm.page='create'\" aria-label=\"Back\">Try again</md-button>\n            </div>\n          </div>\n\n          <!-- CREATE page (3 - success page) -->\n          <div layout=\"column\" flex ng-show=\"vm.page=='createSuccess'\">\n            <div layout=\"column\" flex layout-align=\"start center\">\n              <h2>Congratulations, it worked!</h2>\n              <div>We advise you print or write down your HEAT secret passprase, if lost you will loose access to your HEAT.<br>\n              Please pick one or more methods to back up your passphrase listed below.</div>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button ng-click=\"vm.printPassphrase()\">\n                <md-icon md-font-library=\"material-icons\">print</md-icon>\n                &nbsp;&nbsp;Print\n              </md-button>\n              <md-button ng-click=\"vm.savePassphrase()\" ng-if=\"vm.isFileSaverSupported\">\n                <md-icon md-font-library=\"material-icons\">save</md-icon>\n                &nbsp;&nbsp;Save\n              </md-button>\n              <md-button ng-click=\"vm.showPassphrase()\">\n                <md-icon md-font-library=\"material-icons\">content_copy</md-icon>\n                &nbsp;&nbsp;Copy\n              </md-button>\n              <md-button ng-click=\"vm.showPassphrase=!vm.showPassphrase\">\n                <md-icon md-font-library=\"material-icons\">arrow_drop_down_circle</md-icon>\n                &nbsp;&nbsp;{{vm.showPassphrase?'Hide':'Reveal'}}\n              </md-button>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\" ng-show=\"vm.showPassphrase\">\n              <p>Passphrase for {{vm.pageCreateUserName}} ({{vm.pageCreateAccount}}):</p>\n              <p><code id=\"claim2-passphrase\">{{vm.pageCreateSecretPhrase}}</code></p>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-checkbox ng-model=\"vm.passphraseBackedUp\" aria-label=\"I have backed up my passphrase\">\n              I have safely backed up my passphrase\n              </md-checkbox>\n              <md-button class=\"md-raised md-primary\" ng-click=\"vm.createLocalAccount($event)\" ng-disabled=\"!vm.passphraseBackedUp\">Continue</md-button>\n            </div>\n          </div>\n\n          <!-- ADD page (choose add secret phrase or open wallet file) -->\n          <div layout=\"column\" flex ng-show=\"vm.page=='add'\">\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page=''\" aria-label=\"Back\">\n                <md-tooltip md-direction=\"bottom\">Go back one page</md-tooltip>\n                Back\n              </md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='addSecret'\" aria-label=\"Add secret phrase\">\n                <md-tooltip md-direction=\"bottom\">Add single key through secret phrase</md-tooltip>\n                Secret Phrase\n              </md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='addWallet'\" aria-label=\"Open wallet file\">\n                <md-tooltip md-direction=\"bottom\">Load wallet file</md-tooltip>\n                Wallet File\n              </md-button>\n            </div>\n          </div>\n\n          <!-- ADD page (adds single secret phrase) -->\n          <div layout=\"column\" flex ng-show=\"vm.page=='addSecret'\">\n            <div layout=\"column\" flex>\n              <md-input-container flex>\n                <label>Secret phrase</label>\n                <textarea rows=\"2\" flex ng-model=\"vm.pageAddSecretPhrase\" ng-trim=\"false\" ng-change=\"vm.pageAddSecretPhraseChanged()\"></textarea>\n              </md-input-container>\n            </div>\n            <div layout=\"column\" flex>\n              <md-input-container flex>\n                <label>Password (or Pin Code) (required)</label>\n                <input type=\"password\" ng-model=\"vm.pageAddPincode\" required name=\"pincode\" maxlength=\"5\">\n              </md-input-container>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page='add'\" aria-label=\"Back\">\n                <md-tooltip md-direction=\"bottom\">Go back one page</md-tooltip>\n                Back\n              </md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageAddAddSecretPhrase()\" ng-disabled=\"!vm.pageAddSecretPhrase||!vm.pageAddPincode\" aria-label=\"Add\">\n                <md-tooltip md-direction=\"bottom\">Add and encrypt this secretphrase to your device</md-tooltip>\n                Add\n              </md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageAddLogin()\" ng-disabled=\"!vm.pageAddSecretPhrase\" aria-label=\"Sign in\">\n                <md-tooltip md-direction=\"bottom\">Sign in without storing your secretphrase</md-tooltip>\n                Sign in\n              </md-button>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\">\n              <br>\n              <span class=\"account-preview\">{{vm.pageAddCalculatedAccountId}}</span>\n              <span ng-show=\"vm.pageAddSecretPhraseHasHiddenChars\" class=\"account-preview\">\n                Secret phrase has hidden characters!&nbsp;<a href=\"#\" ng-click=\"vm.pageAddRemoveSecretPhraseHiddenChars()\">remove</a>\n              </span>\n              <br>\n              <span>BIP44 compatible = <b>{{vm.bip44Compatible?'TRUE':'FALSE'}}</b></span>\n            </div>\n          </div>\n\n          <!-- ADD page (opens wallet file) -->\n          <div layout=\"column\" flex ng-show=\"vm.page=='addWallet'\">\n            <div layout=\"column\" flex>\n              <md-input-container flex>\n                <input type=\"file\" onchange=\"angular.element(this).scope().vm.pageAddFileInputChange(this.files)\">\n              </md-input-container>\n            </div>\n            <div layout=\"column\" layout-align=\"center center\" ng-show=\"vm.pageAddWalletInvalid\">\n              <p><b>Invalid wallet file</b></p>\n            </div>\n            <div layout=\"row\" layout-align=\"center center\">\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page='add'\" aria-label=\"Back\">\n                <md-tooltip md-direction=\"bottom\">Go back one page</md-tooltip>\n                Back\n              </md-button>\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageAddWalletImportContinue()\" ng-disabled=\"!vm.pageAddWallet\" aria-label=\"Continue\">\n                <md-tooltip md-direction=\"bottom\">Click to open wallet explorer</md-tooltip>\n                Continue\n              </md-button>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','$q','user','$location','heat','localKeyStore',\n        'secretGenerator','clipboard','$mdToast','env','settings','walletFile','panel','lightwalletService')\nclass LoginComponent {\n\n  bip44Compatible: boolean = false\n\n  page: string = '';\n  isFileSaverSupported: boolean;\n  useExternalCaptcha: boolean;\n  localKeys: Array<{account:string, name:string}> = [];\n  key: ILocalKey = null;\n  hasWhitespace = /^\\s+|\\s+$/gm;\n  apiServer: string;\n  availableAPIServers = [];\n\n  pageAddSecretPhrase: string;\n  pageAddPublicKey: string;\n  pageAddAccount: string;\n  pageAddPincode: string;\n  pageAddSecretPhraseHasHiddenChars: boolean;\n  pageAddCalculatedAccountId: string = 'Enter secret phrase to see account id';\n  pageAddWallet: IHeatWalletFile;\n  pageAddWalletInvalid: boolean = false;\n\n  pageSigninPincode: string;\n  pageSigninAccount: string;\n  pageSigninWrongPincode: boolean = false;\n\n  pageCreateNameType: string = 'public';\n  pageCreateUserName: string = '';\n  pageCreateSecretPhrase: string;\n  pageCreatePublicKey: string;\n  pageCreateAccount: string;\n  pageCreatePincode: string;\n  pageCreateRecaptchaResponse: string;\n  pageCreateRecaptchaWindow: Window;\n  pageCreateLoading: boolean = false;\n  pageCreateError: string;\n  pageCreateTransaction: string;\n\n  constructor(private $scope: angular.IScope,\n              private $q: angular.IQService,\n              private user: UserService,\n              private $location: angular.ILocationService,\n              private heat: HeatService,\n              private localKeyStore: LocalKeyStoreService,\n              private secretGenerator: SecretGeneratorService,\n              private clipboard: ClipboardService,\n              private $mdToast: angular.material.IToastService,\n              private env: EnvService,\n              private settings: SettingsService,\n              private walletFile: WalletFileService,\n              private panel: PanelService,\n              private lightwalletService: LightwalletService) {\n\n    try {\n      this.isFileSaverSupported = !!new Blob;\n    } catch (e) {}\n    this.useExternalCaptcha = env.type!=EnvType.BROWSER;\n    this.generateNewSecretPhrase();\n    this.initLocalKeys();\n\n    if (this.localKeys.length != 0) {\n      this.pageSigninAccount = this.localKeys[0].account;\n      this.page='signin';\n    }\n    else {\n      this.page='create';\n    }\n\n    // @ts-ignore\n    new ClipboardJS('#copy-secret');\n  }\n\n  initLocalKeys() {\n    this.localKeys = this.localKeyStore.list().map((account:string) => {\n      return {\n        name: this.localKeyStore.keyName(account),\n        account: account\n      }\n    });\n  }\n\n  apiServerChanged() {\n    var parts = this.apiServer.split(\":\");\n    this.settings.put(SettingsService.HEAT_PORT,parts.splice(-1,1)[0]);\n    this.settings.put(SettingsService.HEAT_HOST, parts.join(''));\n  }\n\n  pageAddRemoveSecretPhraseHiddenChars() {\n    this.$scope.$evalAsync(() => {\n      this.pageAddSecretPhrase = this.pageAddSecretPhrase.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n      this.pageAddSecretPhraseChanged();\n    });\n  }\n\n  pageAddLogin() {\n    this.user.unlock(this.pageAddSecretPhrase, undefined, this.lightwalletService.validSeed(this.pageAddSecretPhrase)).then(() => {\n      this.$location.path(`explorer-account/${this.user.account}/transactions`);\n    });\n  }\n\n  pageAddSecretPhraseChanged() {\n    this.pageAddPublicKey = heat.crypto.secretPhraseToPublicKey(this.pageAddSecretPhrase);\n    this.pageAddAccount = heat.crypto.getAccountIdFromPublicKey(this.pageAddPublicKey);\n    this.pageAddSecretPhraseHasHiddenChars = this.hasWhitespace.test(this.pageAddSecretPhrase);\n    this.bip44Compatible = this.lightwalletService.validSeed(this.pageAddSecretPhrase)\n    this.$scope.$evalAsync(() => {\n      this.pageAddCalculatedAccountId = this.pageAddAccount;\n    });\n  }\n\n  pageAddAddSecretPhrase() {\n    let key = {\n      account: this.pageAddAccount,\n      secretPhrase: this.pageAddSecretPhrase,\n      pincode: this.pageAddPincode,\n      name: ''\n    };\n    this.localKeyStore.add(key);\n    this.user.unlock(this.pageAddSecretPhrase, key, this.lightwalletService.validSeed(this.pageAddSecretPhrase)).then(() => {\n      this.$location.path(`explorer-account/${this.user.account}/transactions`);\n    });\n  }\n\n  pageAddFileInputChange(files: FileList) {\n    if (files && files[0]) {\n      let reader = new FileReader();\n      reader.onload = () => {\n        this.$scope.$evalAsync(() => {\n          this.pageAddWalletInvalid = true;\n          let fileContents = reader.result;\n          this.pageAddWallet = this.walletFile.createFromText(fileContents);\n          if (this.pageAddWallet) {\n            this.pageAddWalletInvalid = false;\n          }\n        })\n      };\n      reader.readAsText(files[0]);\n    }\n  }\n\n  pageAddWalletImportContinue() {\n    let addedKeys = this.localKeyStore.import(this.pageAddWallet);\n    this.initLocalKeys();\n    let message = `Imported ${addedKeys.length} keys into this device`;\n    this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\n    this.$scope.$evalAsync(()=>{\n      this.page = '';\n    });\n  }\n\n  pageSinginLogin() {\n    this.$scope.$evalAsync(()=>{\n      this.pageSigninWrongPincode = false;\n      var key = this.localKeyStore.load(this.pageSigninAccount, this.pageSigninPincode);\n      if (key) {\n        this.user.unlock(key.secretPhrase, key, this.lightwalletService.validSeed(key.secretPhrase)).then(() => {\n          this.$location.path(`explorer-account/${this.user.account}/transactions`);\n        });\n      }\n      else {\n        this.pageSigninWrongPincode = true;\n      }\n    })\n  }\n\n  createAccount() {\n    this.$scope.$evalAsync(()=>{\n      this.pageCreateLoading = true;\n      this.pageCreateError = null;\n    });\n    var isprivate    = this.pageCreateNameType != 'public';\n    var fullNameUTF8 = this.pageCreateUserName.trim();            // UTF-8\n    var nameHashStr  = heat.crypto.fullNameToHash(fullNameUTF8);  // UTF-8 0-9+\n    var publicKey    = this.pageCreatePublicKey;                  // HEX str\n    var input        = isprivate ?\n      converters.stringToHexString(nameHashStr + this.pageCreateAccount) :\n      converters.stringToHexString(fullNameUTF8 + nameHashStr + this.pageCreateAccount);\n    heat.crypto.SHA256.init();\n    heat.crypto.SHA256.update(converters.hexStringToByteArray(input));\n    var message      = converters.byteArrayToHexString(heat.crypto.SHA256.getBytes());\n    var signatureArg = heat.crypto.signBytes(message, converters.stringToHexString(this.pageCreateSecretPhrase));\n    if (!heat.crypto.verifyBytes(signatureArg, message, publicKey)) {\n      throw new Error(\"Cant verify own signature\");\n    }\n    this.heat.api.registerAccountName(this.pageCreatePublicKey, this.pageCreateRecaptchaResponse, fullNameUTF8, isprivate, signatureArg).then(\n      (transaction: string) => {\n        this.$scope.$evalAsync(()=>{\n          this.pageCreateLoading = false;\n          this.page = 'createSuccess';\n        });\n      },\n      (error: ServerEngineError) => {\n        this.$scope.$evalAsync(()=>{\n          this.pageCreateLoading = false;\n          this.pageCreateError = error.description;\n        });\n      }\n    );\n  }\n\n  isValidPincode(pincode) {\n    if (!pincode || pincode.trim().length == 0) return false;\n    return /^[a-zA-Z0-9_.-]{4,15}$/.test(pincode);\n  }\n\n  generateNewSecretPhrase() {\n    this.secretGenerator.generate('en').then((secretPhrase) => {\n      this.$scope.$evalAsync(() => {\n        this.pageCreateSecretPhrase = secretPhrase;\n        this.pageCreatePublicKey = heat.crypto.secretPhraseToPublicKey(secretPhrase);\n        this.pageCreateAccount = heat.crypto.getAccountIdFromPublicKey(this.pageCreatePublicKey);\n        this.bip44Compatible = this.lightwalletService.validSeed(secretPhrase)\n      });\n    });\n  }\n\n  printPassphrase() {\n    var html = '<html><head>' +\n      '<style type=\"text/css\">html{font-family:GillSans,Calibri,Trebuchet,sans-serif;}</style>' +\n      '</head><body>'+this.templateHTML()+'</body></html>';\n    var popup = window.open(`data:text/html;base64,${btoa(html)}`,\n      '_blank', 'toolbar=0,location=0,menubar=0');\n    // @ts-ignore\n    popup.print();\n    popup.close();\n  }\n\n  savePassphrase() {\n    var blob = new Blob([this.templateText()], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, `heatledger-${this.pageCreateUserName}-${this.pageCreateAccount}.txt`);\n  }\n\n  showPassphrase() {\n    this.panel.show(`\n      <div layout=\"column\" flex class=\"toolbar-copy-passphrase\">\n        <md-input-container flex>\n          <textarea rows=\"2\" flex ng-bind=\"vm.secretPhrase\" readonly ng-trim=\"false\"></textarea>\n        </md-input-container>\n      </div>\n    `, {\n      secretPhrase: this.pageCreateSecretPhrase\n    })\n  }\n\n  templateText() {\n    return [\n      'When stored the passphrase in this document will forever give you access to your HEAT funds.',\n      '',\n      `Account: ${this.pageCreateUserName} (${this.pageCreateAccount})`,\n      '',\n      'Passphrase:',\n      this.pageCreateSecretPhrase,\n      '',\n      `Publickey:`,\n      this.pageCreatePublicKey,\n      '',\n      'https://heatwallet.com'].join('\\r\\n');\n  }\n\n  templateHTML() {\n    return [\n      '<h1>HEAT Paper Wallet</h1>',\n      '',\n      'When stored the passphrase in this document will forever give you access to your HEAT funds.',\n      '',\n      `Paper wallet for <b>${this.pageCreateUserName}</b> (${this.pageCreateAccount})`,\n      '',\n      'Passphrase:',\n      `<u>${this.pageCreateSecretPhrase}</u>`,\n      '',\n      `Publickey:`,\n      this.pageCreatePublicKey,\n      '',\n      '<a href=\"https://heatwallet.com\" target=\"_blank\">https://heatwallet.com</a>'].join('<br>');\n  }\n\n  createLocalAccount() {\n    let key = {\n      account: this.pageCreateAccount,\n      secretPhrase: this.pageCreateSecretPhrase,\n      pincode: this.pageCreatePincode,\n      name: this.pageCreateUserName\n    };\n    this.localKeyStore.add(key);\n    this.user.unlock(this.pageCreateSecretPhrase, key, this.lightwalletService.validSeed(this.pageCreateSecretPhrase)).then(() => {\n      this.$location.path('new');\n    });\n  }\n\n  doChallenge() {\n    this.showChallenge().then((response : string) => {\n      this.$scope.$evalAsync(() => {\n        this.pageCreateRecaptchaResponse = response;\n      });\n    })\n  }\n\n  showChallenge() : angular.IPromise<string> {\n    let deferred = this.$q.defer<string>();\n    if (angular.isDefined(this.pageCreateRecaptchaWindow)) {\n      this.pageCreateRecaptchaWindow.close();\n      this.pageCreateRecaptchaWindow = null;\n    }\n    var url = this.settings.get(SettingsService.CAPTCHA_POPUP);\n    this.pageCreateRecaptchaWindow = <Window> window.open(url,\"New Window\", \"width=600,height=600,resizable=1,modal=1\");\n    var resolved = false;\n    window.addEventListener(\"message\", (event) => {\n      try {\n        var data = JSON.parse(event.data);\n        switch (data.messageType) {\n          case \"token\": {\n            if (angular.isString(data.message.response)) {\n              resolved = true;\n              deferred.resolve(data.message.response);\n              this.pageCreateRecaptchaWindow.close();\n            }\n            break;\n          }\n          case \"beforeunload\": {\n            if (!resolved) {\n              resolved = true;\n              deferred.resolve(null);\n            }\n          }\n        }\n      } catch (e) {\n        console.log('Postmessage parse error', e);\n      }\n    }, false);\n    return deferred.promise;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/new')\n@Component({\n  selector: 'new',\n  styles: [`\n    new h2 {\n      font-size: 26px !important;\n    }\n    new .outer-container {\n      width: 100%;\n      max-width: 380px;\n    }\n  `],\n  template: `\n    <div layout=\"column\" flex layout-align=\"start center\">\n      <div layout=\"column\" layout-padding class=\"outer-container\">\n        <div layout=\"column\" flex layout-align=\"start center\">\n          <h2>Howdy new user</h2>\n          <p>To see your new account, please click on the home button on the horizontal menu bar above. Your payments section is empty until you receive new payments.</p>\n        </div>\n        <div layout=\"column\" flex layout-align=\"start center\" ng-show=\"!vm.activated\">\n          <p>Your account gets activated (and messages become visible) once your account is registered on the blockchain,\n  this will happen in the next block which is to be expected in the next 30 seconds.</p>\n          <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\n          <p><b>Registering account on blockchain, please wait</b></p>\n        </div>\n        <div layout=\"column\" layout-align=\"space-around\" ng-show=\"vm.activated\">\n          <p><b>Your account is activated.</b></p>\n          <p>Check out your messages by clicking the messages button in the toolbar, there might be a message for you.</p>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','$q','heat','user','$timeout')\nclass NewComponent {\n\n  activated = false;\n\n  constructor(private $scope: angular.IScope,\n              private $q: angular.IQService,\n              private heat: HeatService,\n              private user: UserService,\n              private $timeout: angular.ITimeoutService) {\n     this.checkAgain();\n  }\n\n  isExistingAccount(): angular.IPromise<boolean> {\n    let deferred = this.$q.defer<boolean>();\n    this.heat.api.getAccountBalance(this.user.account, \"0\").then(() => {\n      deferred.resolve(true);\n    }).catch((error: ServerEngineError) => {\n      deferred.resolve(false);\n    });\n    return deferred.promise;\n  }\n\n  checkAgain() {\n    this.isExistingAccount().then((activated)=>{\n      if (activated) {\n        this.$scope.$evalAsync(()=>{\n          this.activated = true;\n        })\n      }\n      else {\n        this.$timeout(2000,false).then(()=>{\n          this.checkAgain();\n        });\n      }\n    })\n  }\n}\n","class ARDRCurrency implements ICurrency {\n\n  private ardorBlockExplorerService: ArdorBlockExplorerService;\n  public symbol = 'ARDR'\n  public homePath\n  private pendingTransactions: ArdorPendingTransactionsService\n\n  private $rootScope;\n  private $q;\n\n  constructor(public masterSecretPhrase: string,\n              public secretPhrase: string,\n              public address: string) {\n    this.homePath = `/ardor-account/${this.address}`\n    this.pendingTransactions = heat.$inject.get('ardorPendingTransactions')\n    this.ardorBlockExplorerService = heat.$inject.get('ardorBlockExplorerService')\n    this.$rootScope = heat.$inject.get('$rootScope')\n    this.$q = heat.$inject.get('$q')\n  }\n\n  /* Returns the currency balance, fraction is delimited with a period (.) */\n  getBalance(): angular.IPromise<string> {\n    let deferred = this.$q.defer();\n    this.ardorBlockExplorerService.getBalance(this.address).then(data => {\n      deferred.resolve(new Big(utils.convertToQNTf(data)).toFixed(8))\n    }, err => {\n      deferred.reject();\n    })\n    return deferred.promise;\n  }\n\n  /* Register a balance changed observer, unregister by calling the returned\n     unregister method */\n  subscribeBalanceChanged(handler: () => void): () => void {\n    return\n  }\n\n  /* Manually invoke the balance changed observers */\n  notifyBalanceChanged() {\n    /* Ignore this since not needed for HEAT */\n  }\n\n  /* Invoke SEND currency dialog */\n  invokeSendDialog($event) {\n    this.sendArdr($event).then(\n      data => {\n        let address = this.address\n        let timestamp = new Date().getTime()\n        this.pendingTransactions.add(address, data.txId, timestamp, data.fullHash)\n      },\n      err => {\n        if (err) {\n          dialogs.alert($event, 'Send ARDR Error', 'There was an error sending this transaction: '+JSON.stringify(err))\n        }\n      }\n    )\n  }\n\n  /* Invoke SEND token dialog */\n  invokeSendToken($event) {\n    return\n  }\n\n  sendArdr($event) {\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].okButtonClick = function ($event) {\n        let user = <UserService> heat.$inject.get('user')\n        let ardorBlockExplorerService = <ArdorBlockExplorerService> heat.$inject.get('ardorBlockExplorerService')\n\n        let to = $scope['vm'].data.recipient\n        let amountNQT = utils.convertToNQT(String($scope['vm'].data.amountNQT))\n        let feeNQT = utils.convertToNQT(String($scope['vm'].data.feeNQT))\n        let recipientPublicKey;\n        let txObject;\n        if($scope['vm'].data.recipientPublicKey) {\n          recipientPublicKey = converters.hexStringToByteArray($scope['vm'].data.recipientPublicKey)\n        }\n        let userMessage = $scope['vm'].data.message\n        if(userMessage && userMessage != '' && recipientPublicKey) {\n          let options: heat.crypto.IEncryptOptions = {\n            \"publicKey\": recipientPublicKey\n          };\n          let encryptedNote = heat.crypto.encryptNote(userMessage, options, user.currency.secretPhrase)\n          txObject = `nxt?requestType=sendMoney&secretPhrase=${user.currency.secretPhrase}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60&encryptedMessageData=${encryptedNote.message}&encryptedMessageNonce=${encryptedNote.nonce}&messageToEncryptIsText=true&encryptedMessageIsPrunable=true&chain=1`;\n        }\n        else {\n          txObject = `nxt?requestType=sendMoney&secretPhrase=${user.currency.secretPhrase}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60&chain=1`;\n        }\n        $scope['vm'].disableOKBtn = true\n        ardorBlockExplorerService.sendTransactionWithSecret(txObject).then(\n          data => {\n            $mdDialog.hide(data).then(() => {\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\n            })\n          },\n          err => {\n            $mdDialog.hide(null).then(() => {\n              dialogs.alert(event, 'Error', err);\n            })\n          }\n        )\n      }\n      $scope['vm'].disableOKBtn = false\n\n      let defaultFee = '1.0'\n      $scope['vm'].data = {\n        amountNQT: '',\n        recipient: '',\n        recipientInfo: '',\n        feeNQT: defaultFee,\n        message: ''\n      }\n\n      /* Lookup recipient info and display this in the dialog */\n      let lookup = utils.debounce(function () {\n        let ardorBlockExplorerService = <ArdorBlockExplorerService> heat.$inject.get('ardorBlockExplorerService')\n        ardorBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\n          info => {\n            $scope.$evalAsync(() => {\n              let balance = new Big(utils.convertToQNTf(info)).toFixed(8)\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} ARDR`\n            })\n          },\n          error => {\n            $scope.$evalAsync(() => {\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\n            })\n          }\n        )\n        ardorBlockExplorerService.getPublicKeyFromAddress($scope['vm'].data.recipient).then(\n          publicKey => {\n            $scope['vm'].data.recipientPublicKey = publicKey;\n          }\n        )\n      }, 1000, false)\n      $scope['vm'].recipientChanged = function () {\n        $scope['vm'].data.recipientInfo = ''\n        lookup()\n      }\n    }\n\n    let $q = heat.$inject.get('$q')\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\n\n    let deferred = $q.defer<{ txId:string, fullHash: string }>()\n    $mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose:false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Send ARDR</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n\n                <md-input-container flex >\n                  <label>Recipient</label>\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Amount in ARDR</label>\n                  <input ng-model=\"vm.data.amountNQT\" required name=\"amount\">\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Message</label>\n                  <input ng-model=\"vm.data.message\" name=\"message\">\n                </md-input-container>\n\n                <md-input-container flex>\n                  <label>Fee in ARDR</label>\n                  <input ng-model=\"vm.data.feeNQT\" required name=\"fee\">\n                </md-input-container>\n              </div>\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amountNQT || vm.disableOKBtn\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n}\n","class BTCCurrency implements ICurrency {\n\n  private btcBlockExplorerService: BtcBlockExplorerService\n  public symbol = 'BTC'\n  public homePath\n  private pendingTransactions: BitcoinPendingTransactionsService\n  private bitcoinMessagesService: BitcoinMessagesService;\n  private user: UserService\n\n  constructor(public masterSecretPhrase: string, public secretPhrase: string, public address: string) {\n    this.btcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\n    this.homePath = `/bitcoin-account/${this.address}`\n    this.pendingTransactions = heat.$inject.get('bitcoinPendingTransactions')\n    this.bitcoinMessagesService = heat.$inject.get('bitcoinMessagesService')\n    this.user = heat.$inject.get('user')\n  }\n\n  /* Returns the currency balance, fraction is delimited with a period (.) */\n  getBalance(): angular.IPromise<string> {\n    return this.btcBlockExplorerService.getBalance(this.address).then(\n      balance => {\n        let balanceUnconfirmed = balance / 100000000;\n        return utils.commaFormat(new Big(balanceUnconfirmed+\"\").toFixed(8))\n      }\n    )\n  }\n\n  /* Register a balance changed observer, unregister by calling the returned\n     unregister method */\n  subscribeBalanceChanged(handler: ()=>void): ()=>void {\n    return function () {}\n  }\n\n  /* Manually invoke the balance changed observers */\n  notifyBalanceChanged() {\n  }\n\n  /* Invoke SEND currency dialog */\n  invokeSendDialog = ($event) => {\n    this.sendBtc($event).then(\n      data => {\n        let encryptedMessage = heat.crypto.encryptMessage(data.message, this.user.publicKey, this.user.secretPhrase)\n        let timestamp = new Date().getTime()\n        this.pendingTransactions.add(this.address, data.txId, timestamp)\n        this.bitcoinMessagesService.add(this.address, data.txId, `${encryptedMessage.data}:${encryptedMessage.nonce}`)\n      },\n      err => {\n        if (err) {\n          dialogs.alert($event, 'Send BTC Error', 'There was an error sending this transaction: '+JSON.stringify(err))\n        }\n      }\n    )\n  }\n\n  /* Invoke SEND token dialog */\n  invokeSendToken($event) {\n\n  }\n\n  sendBtc($event) {\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n\n      let createTx = function(isForFeeEstimation: boolean = false) {\n        let user = <UserService> heat.$inject.get('user')\n        let feeInSatoshi\n        let amountInSatoshi\n        let to\n        let addressPrivateKeyPair = {address: user.currency.address, privateKey: user.currency.secretPhrase}\n        if(!isForFeeEstimation) {\n          feeInSatoshi = ($scope['vm'].data.fee * 100000000).toFixed(0);\n          amountInSatoshi = ($scope['vm'].data.amount * 100000000).toFixed(0);\n          to = $scope['vm'].data.recipient\n        } else {\n          feeInSatoshi = $scope['vm'].data.fee? ($scope['vm'].data.fee * 100000000).toFixed(0): 0\n          amountInSatoshi = $scope['vm'].data.amount? ($scope['vm'].data.amount * 100000000).toFixed(0) : \"0.0001\";\n          to = $scope['vm'].data.recipient ? $scope['vm'].data.recipient : addressPrivateKeyPair.address\n        }\n\n        let txObject = {\n          from: addressPrivateKeyPair.address,\n          to: to,\n          amount: parseInt(amountInSatoshi),\n          fee: Math.ceil(feeInSatoshi),\n          changeAddress: addressPrivateKeyPair.address,\n          privateKey: addressPrivateKeyPair.privateKey\n        }\n        return txObject\n      }\n\n      $scope['vm'].okButtonClick = function ($event) {\n        let bitcoreService = <BitcoreService> heat.$inject.get('bitcoreService')\n        $scope['vm'].disableOKBtn = true\n        bitcoreService.sendBitcoins(createTx()).then(\n          data => {\n            $mdDialog.hide(data).then(() => {\n              data.message = $scope['vm'].data.message;\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\n            })\n          },\n          err => {\n            $mdDialog.hide(null).then(() => {\n              dialogs.alert(event, 'Error', err.message);\n            })\n          }\n        )\n      }\n      $scope['vm'].disableOKBtn = false\n      $scope['vm'].data = {\n        amount: '',\n        recipient: '',\n        recipientInfo: '',\n        fee: '0.00004540',\n        message: '',\n        userInputFee: false\n      }\n\n      /* Lookup recipient info and display this in the dialog */\n      let lookup = utils.debounce(function () {\n        let btcBlockExplorerService = <BtcBlockExplorerService> heat.$inject.get('btcBlockExplorerService')\n        btcBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\n          info => {\n            $scope.$evalAsync(() => {\n              let balance = (info / 100000000).toFixed(8)\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} BTC`\n            })\n          },\n          error => {\n            $scope.$evalAsync(() => {\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\n            })\n          }\n        )\n      }, 1000, false)\n      $scope['vm'].recipientChanged = function () {\n        let bitcoreService = <BitcoreService> heat.$inject.get('bitcoreService')\n        $scope['vm'].data.recipientInfo = ''\n        lookup()\n        $scope['vm'].data.txBytes = []\n        bitcoreService.signTransaction(createTx(true), true).then(rawTx => {\n          $scope['vm'].data.txBytes = converters.hexStringToByteArray(rawTx)\n          if(!$scope['vm'].data.userInputFee)\n            $scope['vm'].data.fee = $scope['vm'].data.txBytes.length * $scope['vm'].data.estimatedFee / 100000000\n        })\n      }\n\n      $scope['vm'].selectedItemChange = function(item: IHeatMessageContact) {\n        $scope['vm'].value = $scope['vm'].selectedItem ? $scope['vm'].selectedItem.id : '';\n        $scope['vm'].data.recipient = item.cryptoAddresses ? item.cryptoAddresses.find( i => i.name === 'BTC').address : ''\n\n        if($scope['vm'].data.recipient && $scope['vm'].data.recipient !== '')\n          $scope['vm'].recipientChanged()\n\n      }\n\n      $scope['vm'].search = function(){\n        let p = <P2pContactUtils> heat.$inject.get('p2pContactUtils');\n        return p.lookupContact($scope['vm'].searchText.trim())\n      }\n\n      $scope['vm'].searchTextChange = function() {\n        $scope['vm'].value = $scope['vm'].searchText;\n        $scope['vm'].data.recipient = $scope['vm'].searchText;\n        $scope['vm'].recipientChanged()\n      }\n\n      $scope['vm'].amountChanged = function () {\n        let bitcoreService = <BitcoreService> heat.$inject.get('bitcoreService')\n        $scope['vm'].data.txBytes = []\n        bitcoreService.signTransaction(createTx(true), true).then(rawTx => {\n          $scope['vm'].data.txBytes = converters.hexStringToByteArray(rawTx)\n          if(!$scope['vm'].data.userInputFee)\n            $scope['vm'].data.fee = $scope['vm'].data.txBytes.length * $scope['vm'].data.estimatedFee / 100000000\n        })\n      }\n      $scope['vm'].feeChanged = function () {\n        let bitcoreService = <BitcoreService> heat.$inject.get('bitcoreService')\n        $scope['vm'].data.txBytes = []\n        bitcoreService.signTransaction(createTx(true), true).then(rawTx => {\n          $scope['vm'].data.txBytes = converters.hexStringToByteArray(rawTx)\n          $scope['vm'].data.estimatedFee = ($scope['vm'].data.fee / $scope['vm'].data.txBytes.length * 100000000).toFixed(0)\n          $scope['vm'].data.userInputFee = true\n        })\n      }\n\n      function getEstimatedFee() {\n        let btcBlockExplorerService = <BtcBlockExplorerService> heat.$inject.get('btcBlockExplorerService')\n        btcBlockExplorerService.getEstimatedFee().then(data => {\n          if(!$scope['vm'].data.userInputFee)\n            $scope['vm'].data.estimatedFee = data;\n        })\n      }\n      getEstimatedFee();\n    }\n\n    let $q = heat.$inject.get('$q')\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\n\n    let deferred = $q.defer<{ txId:string, message: string }>()\n    $mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose:false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Send BTC</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n            <div flex layout=\"column\">\n                <md-autocomplete flex\n                  ng-required=\"true\"\n                  ng-readonly=\"false\"\n                  md-input-name=\"recipientBtcAddress\"\n                  md-floating-label=\"Recipient\"\n                  md-min-length=\"1\"\n                  md-items=\"item in vm.search(vm.searchText)\"\n                  md-item-text=\"item.publicName||item.id\"\n                  md-search-text=\"vm.searchText\"\n                  md-selected-item-change=\"vm.selectedItemChange(item)\"\n                  md-search-text-change=\"vm.searchTextChange()\"\n                  md-selected-item=\"vm.selectedItem\">\n                    <md-item-template>\n                      <div layout=\"row\" flex class=\"monospace-font\">\n                        <span>{{item.publicName||''}}</span>\n                        <span flex></span>\n                        <span>{{item.id}}</span>\n                      </div>\n                    </md-item-template>\n                </md-autocomplete>\n                <md-input-container flex >\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\n                </md-input-container>\n                <md-input-container flex >\n                  <label>Amount in BTC</label>\n                  <input ng-model=\"vm.data.amount\" ng-change=\"vm.amountChanged()\" required name=\"amount\">\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Message</label>\n                  <input ng-model=\"vm.data.message\" name=\"message\">\n                </md-input-container>\n\n                <md-input-container flex>\n                  <label>Fee in BTC</label>\n                  <input ng-model=\"vm.data.fee\" ng-keypress=\"vm.feeChanged($event)\" required name=\"fee\">\n                </md-input-container>\n              </div>\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <md-button ng-click=\"0\" ng-disabled=\"true\" class=\"fee\" style=\"max-width:140px !important\">Fee/Byte {{vm.data.estimatedFee}} Sat</md-button>\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amount || vm.disableOKBtn\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nclass ETHCurrency implements ICurrency {\n\n  private ethplorer: EthplorerService\n  public symbol = 'ETH'\n  public homePath\n  private pendingTransactions: EthereumPendingTransactionsService\n  private user: UserService\n\n  constructor(public masterSecretPhrase: string, public secretPhrase: string, public address: string) {\n    this.ethplorer = heat.$inject.get('ethplorer')\n    this.user = heat.$inject.get('user')\n    this.homePath = `/ethereum-account/${this.address}`\n    this.pendingTransactions = heat.$inject.get('ethereumPendingTransactions')\n  }\n\n  /* Returns the currency balance, fraction is delimited with a period (.) */\n  getBalance(): angular.IPromise<string> {\n    return this.ethplorer.getBalance(this.address).then(\n      balance => {\n        return utils.commaFormat(new Big(balance+\"\").toFixed(18))\n      }\n    )\n  }\n\n  /* Register a balance changed observer, unregister by calling the returned\n     unregister method */\n  subscribeBalanceChanged(handler: ()=>void): ()=>void {\n    return function () {}\n  }\n\n  /* Manually invoke the balance changed observers */\n  notifyBalanceChanged() {\n  }\n\n  /* Invoke SEND currency dialog */\n  invokeSendDialog($event) {\n    this.sendEther($event).then(\n      data => {\n        let address = this.user.currency.address\n        let timestamp = new Date().getTime()\n        this.pendingTransactions.add(address, data.txHash, timestamp)\n      },\n      err => {\n        if (err) {\n          dialogs.alert($event, 'Send Ether Error', 'There was an error sending this transaction: '+JSON.stringify(err))\n        }\n      }\n    )\n  }\n\n  /* Invoke SEND token dialog */\n  invokeSendToken($event) {\n\n  }\n\n  sendEther($event) {\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].okButtonClick = function ($event) {\n        let user = <UserService> heat.$inject.get('user')\n        let web3 = <Web3Service> heat.$inject.get('web3')\n        let amountInWei = web3.web3.toWei($scope['vm'].data.amount.replace(',',''), 'ether')\n        let from = user.currency.address\n        let to = $scope['vm'].data.recipient\n        $scope['vm'].disableOKBtn = true\n        web3.sendEther(from, to, amountInWei).then(\n          data => {\n            $mdDialog.hide(data).then(() => {\n              dialogs.alert(event, 'Success', `TxHash: ${data.txHash}`);\n            })\n          },\n          err => {\n            $mdDialog.hide(null).then(() => {\n              dialogs.alert(event, 'Error', err.message);\n            })\n          }\n        )\n      }\n      $scope['vm'].disableOKBtn = false\n      $scope['vm'].data = {\n        amount: '',\n        recipient: '',\n        recipientInfo: '',\n        fee: '0.000420'\n      }\n\n      /* Lookup recipient info and display this in the dialog */\n      let lookup = utils.debounce(function () {\n        let ethplorer = <EthplorerService> heat.$inject.get('ethplorer')\n        ethplorer.getAddressInfo($scope['vm'].data.recipient).then(\n          info => {\n            $scope.$evalAsync(() => {\n              let balance = Number.parseFloat(info.ETH.balance).toFixed(18)\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} ETH`\n            })\n          },\n          error => {\n            $scope.$evalAsync(() => {\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\n            })\n          }\n        )\n      }, 1000, false)\n      $scope['vm'].recipientChanged = function () {\n        $scope['vm'].data.recipientInfo = ''\n        lookup()\n      }\n    }\n\n    let $q = heat.$inject.get('$q')\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\n\n    let deferred = $q.defer<{ txHash:string }>()\n    $mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose:false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Send Ether</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n\n                <md-input-container flex >\n                  <label>Recipient</label>\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Amount in ETH</label>\n                  <input ng-model=\"vm.data.amount\" required name=\"amount\">\n                </md-input-container>\n\n                <p>Fee: {{vm.data.fee}} ETH</p>\n              </div>\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amount || vm.disableOKBtn\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n\n}\n","class FIMKCurrency implements ICurrency {\n\n  private mofoSocketService: MofoSocketService;\n  public symbol = 'FIM'\n  public homePath\n  private user: UserService;\n  private pendingTransactions: FimkPendingTransactionsService\n\n  private $rootScope;\n  private $q;\n\n  constructor(public masterSecretPhrase: string,\n              public secretPhrase: string,\n              public address: string) {\n    this.mofoSocketService = heat.$inject.get('mofoSocketService')\n    this.user = heat.$inject.get('user')\n    this.homePath = `/fimk-account/${this.address}`\n    this.pendingTransactions = heat.$inject.get('fimkPendingTransactions')\n\n    this.$rootScope = heat.$inject.get('$rootScope')\n    this.$q = heat.$inject.get('$q')\n  }\n\n  /* Returns the currency balance, fraction is delimited with a period (.) */\n  getBalance(): angular.IPromise<string> {\n    let deferred = this.$q.defer();\n    this.mofoSocketService.getAccount(this.address).then(info => {\n      let balance = info.unconfirmedBalanceNQT ? parseInt(info.unconfirmedBalanceNQT) / 100000000 : 0;\n      let formattedBalance = new Big(balance + \"\");\n      deferred.resolve(new Big(formattedBalance).toFixed(8))\n    }, err => {\n      deferred.reject();\n    })\n    return deferred.promise;\n  }\n\n  /* Register a balance changed observer, unregister by calling the returned\n     unregister method */\n  subscribeBalanceChanged(handler: () => void): () => void {\n    return\n  }\n\n  /* Manually invoke the balance changed observers */\n  notifyBalanceChanged() {\n    /* Ignore this since not needed for HEAT */\n  }\n\n  /* Invoke SEND currency dialog */\n  invokeSendDialog($event) {\n    this.sendFim($event).then(\n      data => {\n        let address = this.user.currency.address\n        let timestamp = new Date().getTime()\n        this.pendingTransactions.add(address, data.txId, timestamp)\n      },\n      err => {\n        if (err) {\n          dialogs.alert($event, 'Send FIM Error', 'There was an error sending this transaction: '+JSON.stringify(err))\n        }\n      }\n    )\n  }\n\n  /* Invoke SEND token dialog */\n  invokeSendToken($event) {\n    return\n  }\n\n  sendFim($event) {\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].okButtonClick = function ($event) {\n        let user = <UserService> heat.$inject.get('user')\n        let mofoSocketService = <MofoSocketService> heat.$inject.get('mofoSocketService')\n        let to = $scope['vm'].data.recipient\n        let recipientPublicKey;\n        if($scope['vm'].data.recipientPublicKey) {\n          recipientPublicKey = converters.hexStringToByteArray($scope['vm'].data.recipientPublicKey)\n        }\n        let userMessage = $scope['vm'].data.message\n        let txObject;\n        if(userMessage && userMessage != '' && recipientPublicKey) {\n          let options: heat.crypto.IEncryptOptions = {\n            \"publicKey\": recipientPublicKey\n          };\n          let encryptedNote = heat.crypto.encryptNote(userMessage, options, user.currency.secretPhrase)\n          txObject = {\n            recipient: to,\n            amountNQT: utils.convertToNQT(String($scope['vm'].data.amountNQT)),\n            feeNQT: utils.convertToNQT(String($scope['vm'].data.feeNQT)),\n            publicKey: user.publicKey,\n            deadline: '1440',\n            requestType: 'sendMoney',\n            encryptedMessageData: encryptedNote.message,\n            encryptedMessageNonce: encryptedNote.nonce,\n            messageToEncryptIsText: 'true'\n          }\n\n        } else {\n          txObject = {\n            recipient: to,\n            amountNQT: utils.convertToNQT(String($scope['vm'].data.amountNQT)),\n            feeNQT: utils.convertToNQT(String($scope['vm'].data.feeNQT)),\n            publicKey: user.publicKey,\n            deadline: '1440',\n            requestType: 'sendMoney'\n          }\n        }\n\n        $scope['vm'].disableOKBtn = true\n        mofoSocketService.sendFim(txObject).then(\n          data => {\n            $mdDialog.hide(data).then(() => {\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\n            })\n          },\n          err => {\n            $mdDialog.hide(null).then(() => {\n              dialogs.alert(event, 'Error', err);\n            })\n          }\n        )\n      }\n      $scope['vm'].disableOKBtn = false\n\n      let defaultFee = '0.1'\n      $scope['vm'].data = {\n        amountNQT: '',\n        recipient: '',\n        recipientInfo: '',\n        feeNQT: defaultFee,\n        message: ''\n      }\n\n      /* Lookup recipient info and display this in the dialog */\n      let lookup = utils.debounce(function () {\n        let mofoSocketService = <MofoSocketService> heat.$inject.get('mofoSocketService')\n        let heatService = <HeatService> heat.$inject.get('heat')\n        mofoSocketService.getAccount($scope['vm'].data.recipient).then(\n          info => {\n            $scope.$evalAsync(() => {\n              let unconfirmedBalanceNQT = parseInt(info.unconfirmedBalanceNQT) / 100000000;\n              let formattedBalance = new Big(unconfirmedBalanceNQT + \"\")\n              let balance = new Big(formattedBalance).toFixed(8);\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} FIM`\n              $scope['vm'].data.recipientPublicKey = info.publicKey\n            })\n          },\n          error => {\n            $scope.$evalAsync(() => {\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\n            })\n          }\n        )\n      }, 1000, false)\n      $scope['vm'].recipientChanged = function () {\n        $scope['vm'].data.recipientInfo = ''\n        $scope['vm'].data.recipientPublicKey = ''\n        lookup()\n      }\n    }\n\n    let $q = heat.$inject.get('$q')\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\n\n    let deferred = $q.defer<{ txId:string }>()\n    $mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose:false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Send FIM</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n\n                <md-input-container flex >\n                  <label>Recipient</label>\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Amount in FIM</label>\n                  <input ng-model=\"vm.data.amountNQT\" required name=\"amount\">\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Message</label>\n                  <input ng-model=\"vm.data.message\" name=\"message\">\n                </md-input-container>\n\n                <md-input-container flex>\n                  <label>Fee in FIM</label>\n                  <input ng-model=\"vm.data.feeNQT\" required name=\"fee\">\n                </md-input-container>\n              </div>\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amountNQT || vm.disableOKBtn\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nclass HEATCurrency implements ICurrency {\n\n  private heat: HeatService\n  private sendmoney: SendmoneyService\n  public symbol = 'HEAT'\n  public homePath\n\n  constructor(public masterSecretPhrase: string, public secretPhrase: string, public address: string) {\n    this.heat = heat.$inject.get('heat')\n    this.sendmoney = heat.$inject.get('sendmoney')\n    this.homePath = `/explorer-account/${this.address}/transactions`\n  }\n\n  /* Returns the currency balance, fraction is delimited with a period (.) */\n  getBalance(): angular.IPromise<string> {\n    return this.heat.api.getAccountBalanceVirtual(this.address, \"0\", \"0\", 1).then(\n      balance => {\n        var formatted = utils.formatQNT(balance.virtualBalance, 8)\n        return formatted\n      }\n    )\n  }\n\n  /* Register a balance changed observer, unregister by calling the returned\n     unregister method */\n  subscribeBalanceChanged(handler: ()=>void): ()=>void {\n    return this.heat.subscriber.balanceChanged({account: this.address}, handler);\n  }\n\n  /* Manually invoke the balance changed observers */\n  notifyBalanceChanged() {\n    /* Ignore this since not needed for HEAT */\n  }\n\n  /* Invoke SEND currency dialog */\n  invokeSendDialog($event) {\n    this.sendmoney.dialog($event).show();\n  }\n\n  /* Invoke SEND token dialog */\n  invokeSendToken($event) {\n    return\n  }\n}\n","class IOTACurrency implements ICurrency {\n\n  private iotaBlockExplorerService: IotaBlockExplorerService;\n  public symbol = 'IOTA'\n  public homePath\n  private user: UserService;\n  private pendingTransactions: IotaPendingTransactionsService\n\n  private $q;\n\n  constructor(public masterSecretPhrase: string,\n              public secretPhrase: string,\n              public address: string) {\n    this.iotaBlockExplorerService = heat.$inject.get('iotaBlockExplorerService')\n    this.user = heat.$inject.get('user')\n    this.homePath = `/iota-account/${this.address}`\n    this.pendingTransactions = heat.$inject.get('iotaPendingTransactions')\n\n    this.$q = heat.$inject.get('$q')\n  }\n\n  /* Returns the currency balance, fraction is delimited with a period (.) */\n  getBalance(): angular.IPromise<string> {\n    let deferred = this.$q.defer();\n    this.iotaBlockExplorerService.getAccountInfo(this.secretPhrase).then(info => {\n      deferred.resolve(info.balance.toString())\n    }, err => {\n      deferred.reject();\n    })\n    return deferred.promise;\n  }\n\n  /* Register a balance changed observer, unregister by calling the returned\n     unregister method */\n  subscribeBalanceChanged(handler: () => void): () => void {\n    return\n  }\n\n  /* Manually invoke the balance changed observers */\n  notifyBalanceChanged() {\n    /* Ignore this since not needed for HEAT */\n  }\n\n  /* Invoke SEND currency dialog */\n  invokeSendDialog($event) {\n    this.sendIota($event).then(\n      data => {\n\n      },\n      err => {\n        if (err) {\n          dialogs.alert($event, 'Send IOTA Error', 'There was an error sending this transaction: ' + JSON.stringify(err))\n        }\n      }\n    )\n  }\n\n  /* Invoke SEND token dialog */\n  invokeSendToken($event) {\n    return\n  }\n\n  sendIota($event) {\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].okButtonClick = function ($event) {\n        let iotaBlockExplorerService = <IotaBlockExplorerService>heat.$inject.get('iotaBlockExplorerService')\n        let user = <UserService>heat.$inject.get('user')\n\n        $scope['vm'].disableOKBtn = true\n        const transfers = [{\n            address: $scope['vm'].data.recipient.length === 90? $scope['vm'].data.recipient.slice(0,81) : $scope['vm'].data.recipient,\n            value: parseInt($scope['vm'].data.value)\n          }]\n        iotaBlockExplorerService.sendIota(user.currency.secretPhrase, transfers).then(\n          data => {\n            dialogs.alert(event, 'Success', `Bundle: ${data[0].hash}`);\n            let address = user.currency.address\n            let timestamp = new Date().getTime()\n            let pendingTransactions = <IotaPendingTransactionsService>heat.$inject.get('iotaPendingTransactions')\n            pendingTransactions.add(address, data[0].hash, timestamp)\n          },\n          err => {\n            dialogs.alert(event, 'Error', err);\n          }\n        )\n        $mdDialog.hide(null)\n\n\n        let $mdToast = <angular.material.IToastService>heat.$inject.get('$mdToast')\n        $mdToast.show($mdToast.simple().textContent(\"Send transaction is in process.\\n\" +\n          \"Please wait for the dialog to view transaction id\").hideDelay(5000));\n      }\n      $scope['vm'].disableOKBtn = false\n\n      $scope['vm'].data = {\n        value: '',\n        recipient: '',\n        recipientInfo: '',\n        addressReuse: true\n      }\n\n      /* Lookup recipient info and display this in the dialog */\n      let lookup = utils.debounce(function () {\n        let iotaBlockExplorerService = <IotaBlockExplorerService>heat.$inject.get('iotaBlockExplorerService')\n        iotaBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\n          info => {\n            $scope.$evalAsync(() => {\n              let balance = new Big(info).toFixed(0);\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} IOTA`\n            })\n          },\n          error => {\n            $scope.$evalAsync(() => {\n              $scope['vm'].data.recipientInfo = error.message || 'Invalid'\n            })\n          }\n        )\n      }, 1000, false)\n\n      let checkAddressValidity = function(address: string) {\n        let iotaBlockExplorerService = <IotaBlockExplorerService>heat.$inject.get('iotaBlockExplorerService')\n        iotaBlockExplorerService.checkAddressReuse(address).then(reuse => $scope['vm'].data.addressReuse = reuse);\n      }\n\n      $scope['vm'].recipientChanged = function () {\n        $scope['vm'].data.recipientInfo = ''\n        lookup()\n        checkAddressValidity($scope['vm'].data.recipient)\n      }\n    }\n\n    let $q = heat.$inject.get('$q')\n    let $mdDialog = <angular.material.IDialogService>heat.$inject.get('$mdDialog')\n\n    let deferred = $q.defer<any>()\n    $mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Send IOTA</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n                <md-input-container flex >\n                  <label>Recipient</label>\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Amount in IOTA</label>\n                  <input ng-model=\"vm.data.value\" required name=\"amount\">\n                </md-input-container>\n              </div>\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.value || vm.disableOKBtn || vm.data.addressReuse\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n}\n","class NXTCurrency implements ICurrency {\n\n  private nxtBlockExplorerService: NxtBlockExplorerService;\n  public symbol = 'NXT'\n  public homePath\n  private user: UserService;\n  private pendingTransactions: NxtPendingTransactionsService\n\n  private $rootScope;\n  private $q;\n\n  constructor(public masterSecretPhrase: string,\n              public secretPhrase: string,\n              public address: string) {\n    this.user = heat.$inject.get('user')\n    this.homePath = `/nxt-account/${this.address}`\n    this.pendingTransactions = heat.$inject.get('nxtPendingTransactions')\n    this.nxtBlockExplorerService = heat.$inject.get('nxtBlockExplorerService')\n    this.$rootScope = heat.$inject.get('$rootScope')\n    this.$q = heat.$inject.get('$q')\n  }\n\n  /* Returns the currency balance, fraction is delimited with a period (.) */\n  getBalance(): angular.IPromise<string> {\n    let deferred = this.$q.defer();\n    this.nxtBlockExplorerService.getAccount(this.address).then(data => {\n      deferred.resolve(new Big(utils.convertToQNTf(data.balanceNQT)).toFixed(8))\n    }, err => {\n      deferred.reject();\n    })\n    return deferred.promise;\n  }\n\n  /* Register a balance changed observer, unregister by calling the returned\n     unregister method */\n  subscribeBalanceChanged(handler: () => void): () => void {\n    return\n  }\n\n  /* Manually invoke the balance changed observers */\n  notifyBalanceChanged() {\n    /* Ignore this since not needed for HEAT */\n  }\n\n  /* Invoke SEND currency dialog */\n  invokeSendDialog($event) {\n    this.sendNxt($event).then(\n      data => {\n        let address = this.user.currency.address\n        let timestamp = new Date().getTime()\n        this.pendingTransactions.add(address, data.txId, timestamp)\n      },\n      err => {\n        if (err) {\n          dialogs.alert($event, 'Send NXT Error', 'There was an error sending this transaction: '+JSON.stringify(err))\n        }\n      }\n    )\n  }\n\n  /* Invoke SEND token dialog */\n  invokeSendToken($event) {\n    return\n  }\n\n  sendNxt($event) {\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].okButtonClick = function ($event) {\n        let user = <UserService> heat.$inject.get('user')\n        let nxtBlockExplorerService = <NxtBlockExplorerService> heat.$inject.get('nxtBlockExplorerService')\n\n        let to = $scope['vm'].data.recipient\n        let amountNQT = utils.convertToNQT(String($scope['vm'].data.amountNQT))\n        let feeNQT = utils.convertToNQT(String($scope['vm'].data.feeNQT))\n        let recipientPublicKey;\n        let txObject;\n        if($scope['vm'].data.recipientPublicKey) {\n          recipientPublicKey = converters.hexStringToByteArray($scope['vm'].data.recipientPublicKey)\n        }\n        let userMessage = $scope['vm'].data.message\n        if(userMessage && userMessage != '' && recipientPublicKey) {\n          let options: heat.crypto.IEncryptOptions = {\n            \"publicKey\": recipientPublicKey\n          };\n          let encryptedNote = heat.crypto.encryptNote(userMessage, options, user.currency.secretPhrase)\n          txObject = `nxt?requestType=sendMoney&publicKey=${user.publicKey}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60&encryptedMessageData=${encryptedNote.message}&encryptedMessageNonce=${encryptedNote.nonce}&messageToEncryptIsText=true`;\n        }\n        else {\n          txObject = `nxt?requestType=sendMoney&publicKey=${user.publicKey}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60`;\n        }\n        $scope['vm'].disableOKBtn = true\n        nxtBlockExplorerService.sendNxt(txObject).then(\n          data => {\n            $mdDialog.hide(data).then(() => {\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\n            })\n          },\n          err => {\n            $mdDialog.hide(null).then(() => {\n              dialogs.alert(event, 'Error', err);\n            })\n          }\n        )\n      }\n      $scope['vm'].disableOKBtn = false\n\n      let defaultFee = '1.0'\n      $scope['vm'].data = {\n        amountNQT: '',\n        recipient: '',\n        recipientInfo: '',\n        feeNQT: defaultFee,\n        message: ''\n      }\n\n      /* Lookup recipient info and display this in the dialog */\n      let lookup = utils.debounce(function () {\n        let nxtBlockExplorerService = <NxtBlockExplorerService> heat.$inject.get('nxtBlockExplorerService')\n        nxtBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\n          info => {\n            $scope.$evalAsync(() => {\n              let balance = new Big(utils.convertToQNTf(info)).toFixed(8)\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} NXT`\n            })\n          },\n          error => {\n            $scope.$evalAsync(() => {\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\n            })\n          }\n        )\n        nxtBlockExplorerService.getPublicKeyFromAddress($scope['vm'].data.recipient).then(\n          publicKey => {\n            $scope['vm'].data.recipientPublicKey = publicKey;\n          }\n        )\n      }, 1000, false)\n      $scope['vm'].recipientChanged = function () {\n        $scope['vm'].data.recipientInfo = ''\n        lookup()\n      }\n    }\n\n    let $q = heat.$inject.get('$q')\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\n\n    let deferred = $q.defer<{ txId:string }>()\n    $mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose:false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Send NXT</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n\n                <md-input-container flex >\n                  <label>Recipient</label>\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Amount in NXT</label>\n                  <input ng-model=\"vm.data.amountNQT\" required name=\"amount\">\n                </md-input-container>\n\n                <md-input-container flex >\n                  <label>Message</label>\n                  <input ng-model=\"vm.data.message\" name=\"message\">\n                </md-input-container>\n\n                <md-input-container flex>\n                  <label>Fee in NXT</label>\n                  <input ng-model=\"vm.data.feeNQT\" required name=\"fee\">\n                </md-input-container>\n              </div>\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amountNQT || vm.disableOKBtn\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass HeatAPI implements IHeatAPI {\n\n  /* transaction fees used in transaction dialogs and other places */\n  static fee = {\n    standard: utils.convertToQNT('0.01'),\n    assetIssue: utils.convertToQNT('500.00'),\n    assetIssueMore: utils.convertToQNT('0.01'),\n    whitelistMarket: utils.convertToQNT('10.00'),\n    registerInternetAddressFee: utils.convertToQNT('100.00')\n  };\n\n  constructor(private heat: HeatService,\n              private user: UserService,\n              private $q: angular.IQService) {}\n\n  registerAccountName(publicKey: string, captcha: string, name: string, isprivate: boolean, signature: string): angular.IPromise<string> {\n    return this.heat.get(`/register/now/${publicKey}/${captcha}/${name}/${isprivate}/${signature}`, 'value');\n  }\n\n  getBlockchainStatus():angular.IPromise<IHeatBlockchainStatus> {\n    return this.heat.get('/blockchain/status');\n  }\n\n  getServerHealth(host?: string, port?: number):angular.IPromise<IHeatServerHealth> {\n    if (!host)\n      return this.heat.get('/tools/telemetry/health');\n    return this.heat.getRaw(host, port, '/tools/telemetry/health', null, true);\n  }\n\n  getBlocks(from: number, to: number):angular.IPromise<Array<IHeatBlockCondensed>> {\n    return this.heat.get(`/blockchain/blocks/${from}/${to}/null`); // @see api, null means no transaction data at all\n  }\n\n  getBlock(numericId: string, includeTransactions:boolean = true):angular.IPromise<IHeatBlock> {\n    return this.heat.get(`/blockchain/block/${numericId}/${includeTransactions}`);\n  }\n\n  getBlockAtHeight(height: number, includeTransactions:boolean ):angular.IPromise<IHeatBlock> {\n    return this.heat.get(`/blockchain/block/height/${height}/${includeTransactions}`);\n  }\n\n  getAccountBlocks(account:string, from: number, to: number):angular.IPromise<Array<IHeatBlockCondensed>> {\n    return this.heat.get(`/blockchain/blocks/account/${account}/${from}/${to}/null`);\n  }\n\n  getAccountBlocksCount(account: string):angular.IPromise<number> {\n    return this.heat.get(`/blockchain/blocks/account/count/${account}`, \"count\");\n  }\n\n  getPublicKey(account: string): angular.IPromise<string> {\n    let deferred = this.$q.defer<string>();\n    this.heat.get(`/account/publickey/${account}`,\"value\").then((publicKey)=> {\n      var test = heat.crypto.getAccountIdFromPublicKey(publicKey);\n      if (test != account) {\n        console.log(\"Public key returned from server does not match account\");\n        deferred.reject();\n      }\n      else {\n        deferred.resolve(publicKey);\n      }\n    }, deferred.reject);\n    return <angular.IPromise<string>> deferred.promise;\n  }\n\n  getPublicKeyOrEmptyString(account: string): angular.IPromise<string> {\n    let deferred = this.$q.defer<string>();\n    this.heat.get(`/account/publickey/${account}`,\"value\").then((publicKey)=> {\n      var test = heat.crypto.getAccountIdFromPublicKey(publicKey);\n      if (test != account) {\n        console.log(\"Public key returned from server does not match account\");\n        deferred.reject();\n      }\n      else {\n        deferred.resolve(publicKey);\n      }\n    }, error => {\n      /* Account exists but has no public key */\n      if ((error.errorDescription||\"\").toLowerCase() == \"unknown publickey\") {\n        deferred.resolve(\"\")\n      }\n      /* Account does not exist */\n      else {\n        deferred.reject()\n      }\n    });\n    return <angular.IPromise<string>> deferred.promise;\n  }\n\n  createTransaction(input:IHeatCreateTransactionInput): angular.IPromise<IHeatCreateTransactionOutput> {\n    console.log(\"CreateTransaction\",input);\n    var arg = { value: JSON.stringify(input) };\n    return this.heat.post('/tx/create', arg);\n  }\n\n  broadcast(param: IHeatBroadcastInput):angular.IPromise<IHeatBroadcastOutput> {\n    var arg = {};\n    if (angular.isDefined(param.transactionJSON)) {\n      arg['transactionJSON'] = JSON.stringify(param.transactionJSON);\n    }\n    if (angular.isDefined(param.transactionBytes)) {\n      arg['transactionBytes'] = param.transactionBytes;\n    }\n    return this.heat.post('/tx/broadcast', arg);\n  }\n\n  getAllAssetProtocol1(from:number,to:number):angular.IPromise<Array<IHeatAssetProtocol1>> {\n    return this.heat.get(`/exchange/assets/protocol1/${from}/${to}`);\n  }\n\n  getAssetProtocol1(symbol: string):angular.IPromise<IHeatAssetProtocol1> {\n    return this.heat.get(`/exchange/asset/protocol1/${symbol}`);\n  }\n\n  getAsset(asset:string, propertiesAccount:string, propertiesProtocol:number):angular.IPromise<IHeatAsset> {\n    return this.heat.get(`/exchange/asset/properties/${asset}/${propertiesAccount}/${propertiesProtocol}`);\n  }\n\n  getAssetCertification(asset: string, certifierAccount:string):angular.IPromise<IHeatAssetCertification> {\n    return this.heat.get(`/exchange/asset/certification/${asset}/${certifierAccount}`);\n  }\n\n  getAssets(propertiesAccount:string,propertiesProtocol:number,from:number,to:number): angular.IPromise<Array<IHeatAsset>> {\n    return this.heat.get(`/assets/${propertiesAccount}/${propertiesProtocol}/${from}/${to}`);\n  }\n\n  getAssetProperties(asset: string, propertiesAccount: string, propertiesProtocol: number):angular.IPromise<IHeatAssetProperties> {\n    return this.heat.get(`/exchange/asset/properties/${asset}/${propertiesAccount}/${propertiesProtocol}`);\n  }\n\n  getAccountPairOrders(account: string, currency: string, asset: string, from: number, to: number):angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/account/pair/${account}/${currency}/${asset}/${from}/${to}`);\n  }\n\n  getAccountPairOrdersCount(account: string, currency: string, asset: string):angular.IPromise<number> {\n    return this.heat.get(`/order/account/pair/count/${account}/${currency}/${asset}`, \"count\");\n  }\n\n  getAccountAllOrders(account: string, from: number, to: number):angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/account/all/${account}/${from}/${to}`);\n  }\n\n  getAccountAllOrdersCount(account: string):angular.IPromise<number> {\n    return this.heat.get(`/order/account/all/count/${account}`, \"count\");\n  }\n\n  getAskOrders(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/pair/asks/${currency}/${asset}/${from}/${to}`);\n  }\n\n  getAskOrdersCount(currency:string, asset:string): angular.IPromise<number> {\n    return this.heat.get(`/order/pair/asks/count/${currency}/${asset}`, \"count\");\n  }\n\n  getBidOrders(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/pair/bids/${currency}/${asset}/${from}/${to}`);\n  }\n\n  getBidOrdersCount(currency:string, asset:string): angular.IPromise<number> {\n    return this.heat.get(`/order/pair/bids/count/${currency}/${asset}`, \"count\");\n  }\n\n  getAllAskOrders(from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/asks/${from}/${to}`);\n  }\n\n  getAllBidOrders(from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/bids/${from}/${to}`);\n  }\n\n  getAccountAskOrders(account: string,currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/account/pair/asks/${account}/${currency}/${asset}/${from}/${to}`);\n  }\n\n  getAccountBidOrders(account: string,currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\n    return this.heat.get(`/order/account/pair/bids/${account}/${currency}/${asset}/${from}/${to}`);\n  }\n\n  getTrades(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\n    return this.heat.get(`/trade/${currency}/${asset}/${from}/${to}`);\n  }\n\n  getTradesCount(currency:string, asset:string): angular.IPromise<number> {\n    return this.heat.get(`/trade/count/${currency}/${asset}`, \"count\");\n  }\n\n  getAllTrades(from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\n    return this.heat.get(`/trade/all/${from}/${to}`);\n  }\n\n  getAllAccountTrades(account: string, propertiesAccount: string, propertiesProtocol: number, from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\n    return this.heat.get(`/trade/account/${account}/${propertiesAccount}/${propertiesProtocol}/${from}/${to}`);\n  }\n\n  getAllAccountTradesCount(account: string): angular.IPromise<number> {\n    return this.heat.get(`/trade/account/count/${account}`, \"count\");\n  }\n\n  getAccountTrades(account:string, currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\n    return this.heat.get(`/trade/account/pair/${account}/${currency}/${asset}/${from}/${to}`);\n  }\n\n  getAccountTradesCount(account:string, currency:string, asset:string): angular.IPromise<number> {\n    return this.heat.get(`/trade/account/pair/count/${account}/${currency}/${asset}`, \"count\");\n  }\n\n  getAccountBalance(account: string, asset: string): angular.IPromise<IHeatAccountBalance> {\n    return this.heat.get(`/account/balance/${account}/${asset}`);\n  }\n\n  getAccountBalanceVirtual(account: string, asset: string, propertiesAccount: string, propertiesProtocol: number): angular.IPromise<IHeatAccountBalance> {\n    return this.heat.get(`/account/balance/virtual/${account}/${asset}/${propertiesAccount}/${propertiesProtocol}`);\n  }\n\n  getMarketsAll(sort: string, asc:boolean, propertiesAccountId: string, propertiesProtocol: number, from: number, to: number):angular.IPromise<Array<IHeatMarket>> {\n    return this.heat.get(`/exchange/markets/all/${sort}/${asc}/${propertiesAccountId}/${propertiesProtocol}/${from}/${to}`);\n  }\n\n  getMarkets(currency: string, sort: string, asc:boolean, propertiesAccountId: string, propertiesProtocol: number, from: number, to: number):angular.IPromise<Array<IHeatMarket>> {\n    return this.heat.get(`/exchange/markets/${currency}/${sort}/${asc}/${propertiesAccountId}/${propertiesProtocol}/${from}/${to}`);\n  }\n\n  getMarket(currency: string, asset: string, propertiesAccountId: string, propertiesProtocol: number):angular.IPromise<IHeatMarket> {\n    return this.heat.get(`/exchange/market/${currency}/${asset}/${propertiesAccountId}/${propertiesProtocol}`);\n  }\n\n  getAccountBalances(account: string, propertiesAccount: string, propertiesProtocol: number, from: number, to: number): angular.IPromise<Array<IHeatAccountBalance>> {\n    return this.heat.get(`/account/balances/${account}/${propertiesAccount}/${propertiesProtocol}/${from}/${to}`);\n  }\n\n  getPayments(account: string, currency: string, sort: string, asc: boolean, from: number, to: number): angular.IPromise<Array<IHeatPayment>> {\n    return this.heat.get(`/account/payments/${account}/${currency}/${sort}/${asc}/${from}/${to}`);\n  }\n\n  getPaymentsCount(account: string, currency: string): angular.IPromise<number> {\n    return this.heat.get(`/account/payments/count/${account}/${currency}`,\"count\");\n  }\n\n  getMessagingContactMessagesCount(accountA:string, accountB:string): angular.IPromise<number> {\n    return this.heat.get(`/messages/contact/count/${accountA}/${accountB}`,\"count\");\n  }\n\n  getMessagingContactMessages(accountA:string, accountB:string, from:number, to:number):angular.IPromise<Array<IHeatMessage>> {\n    return this.heat.get(`/messages/contact/${accountA}/${accountB}/${from}/${to}`);\n  }\n\n  getMessagingContacts(account: string, from: number, to: number): angular.IPromise<Array<IHeatMessageContact>> {\n    return this.heat.get(`/messages/latest/${account}/${from}/${to}`);\n  }\n\n  getOHLCChartData(currency: string, asset: string, window: string): angular.IPromise<IHeatChart> {\n    return this.heat.get(`/exchange/chartdata/${currency}/${asset}/${window}`);\n  }\n\n  getMiningInfo(secretPhrase: string): angular.IPromise<Array<IHeatMiningInfo>> {\n    return this.heat.post('/mining/info?api_key=secret', {secretPhrase:secretPhrase}, false, null, true);\n  }\n\n  startMining(secretPhrase: string): angular.IPromise<IHeatMiningInfo> {\n    return this.heat.post('/mining/start?api_key=secret', {secretPhrase:secretPhrase}, false, null, true);\n  }\n\n  stopMining(secretPhrase: string): angular.IPromise<IHeatMiningInfo> {\n    return this.heat.post('/mining/stop?api_key=secret', {secretPhrase:secretPhrase}, false, null, true);\n  }\n\n  getAccountByNumericId(numericId: string): angular.IPromise<IHeatAccount> {\n    return this.heat.get(`/account/find/${numericId}`);\n  }\n\n  getTransaction(transaction: string): angular.IPromise<IHeatTransaction> {\n    return this.heat.get(`/blockchain/transaction/${transaction}`);\n  }\n\n  getTransactionsForAccount(account: string, from: number, to: number): angular.IPromise<Array<IHeatTransaction>> {\n    return this.heat.get(`/blockchain/transactions/account/${account}/${from}/${to}`);\n  }\n\n  getTransactionsForAccountCount(account: string): angular.IPromise<number> {\n    return this.heat.get(`/blockchain/transactions/account/count/${account}`,\"count\");\n  }\n\n  getTransactionsForBlock(block: string, from: number, to: number): angular.IPromise<Array<IHeatTransaction>> {\n    return this.heat.get(`/blockchain/transactions/block/${block}/${from}/${to}`);\n  }\n\n  getTransactionsForBlockCount(block: string): angular.IPromise<number> {\n    return this.heat.get(`/blockchain/transactions/block/count/${block}`,\"count\");\n  }\n\n  getTransactionsFromTo(sender:string, recipient:string, from:number, to:number): angular.IPromise<Array<IHeatTransaction>> {\n    return this.heat.get(`/blockchain/transactions/list/${sender}/${recipient}/${from}/${to}`);\n  }\n\n  getTransactionsForAll(from: number, to: number): angular.IPromise<Array<IHeatTransaction>> {\n    return this.heat.get(`/blockchain/transactions/all/${from}/${to}`);\n  }\n\n  getTransactionsForAllCount(): angular.IPromise<number> {\n    return this.heat.get(\"/blockchain/transactions/all/count\",\"count\");\n  }\n\n  searchAccounts(query: string, from: number, to: number): angular.IPromise<Array<IHeatAccount>> {\n    return this.heat.get(`/search/accounts/${query}/${from}/${to}`);\n  }\n\n  searchAccountsCount(query: string): angular.IPromise<number> {\n    return this.heat.get(`/search/accounts/count/${query}`, \"count\");\n  }\n\n  searchPublicNames(query: string, from: number, to: number): angular.IPromise<Array<IHeatAccount>> {\n    return this.heat.get(`/account/search/0/${query}/${from}/${to}`);\n  }\n\n  rewardsAccount(account: string): angular.IPromise<IHeatRewardsInfo> {\n    return this.heat.get(`/mining/rewards/account/${account}`);\n  }\n\n  rewardsList(from: number, to: number): angular.IPromise<Array<IHeatRewardsInfo>> {\n    return this.heat.get(`/mining/rewards/list/${from}/${to}`);\n  }\n\n  rewardsListCount(): angular.IPromise<number> {\n    return this.heat.get('/mining/rewards/list/count','count');\n  }\n\n  getKeystoreEntryCountByAccount(account: string): angular.IPromise<number> {\n    return this.heat.get(`/keystore/count/${account}`, 'count');\n  }\n\n  getKeystoreAccountEntry(account: string, key: string): angular.IPromise<IHEATKeystoreTransaction> {\n    return this.heat.get(`/keystore/get/${account}/${key}`);\n  }\n\n  listKeystoreAccountEntries(account: string, from: string, to: string): angular.IPromise<Array<IHEATKeystoreTransaction>> {\n    return this.heat.get(`/keystore/list/${account}/${from}/${to}`);\n  }\n\n  saveKeystoreEntry(key: string, value: string, secretPhrase: string): angular.IPromise<IHeatCreateTransactionOutput> {\n    return this.heat.post(`/keystore/put`, {key, value, fee: 1000000, deadline: 1440, secretPhrase});\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n/* Wraps all API returned server errors */\nclass ServerEngineError {\n  public description: string;\n  public code: number;\n  constructor(public data: any) {\n    if (angular.isObject(data)) {\n      this.description = data['errorDescription'] || data['error'];\n      this.code = data['errorCode'] || -1;\n    } else {\n      this.description = 'misc error';\n      this.code = 99;\n    }\n  }\n}\n\nclass InternalServerTimeoutError extends ServerEngineError {\n  constructor() {\n    super({ error: 'Internal timeout' });\n  }\n}\n\n@Service('heat')\n@Inject('$q','$http','settings','user','$timeout','env')\nclass HeatService {\n\n  public api = new HeatAPI(this, this.user, this.$q);\n  public subscriber = this.createSubscriber(this.settings.get(SettingsService.HEAT_WEBSOCKET));\n\n  constructor(public $q: angular.IQService,\n              private $http: angular.IHttpService,\n              private settings: SettingsService,\n              private user: UserService,\n              private $timeout: angular.ITimeoutService,\n              private env: EnvService) {\n  }\n\n  public createSubscriber(url: string)  {\n    return new HeatSubscriber(url, this.$q, this.$timeout);\n  }\n\n  public resetSubscriber()  {\n    this.subscriber.reset(this.settings.get(SettingsService.HEAT_WEBSOCKET));\n  }\n\n  getAuthData(): Object {\n    var timestamp = Date.now();\n    var baseMessage = this.user.account + timestamp;\n    var message = converters.stringToHexString(baseMessage);\n    var secret = converters.stringToHexString(this.user.secretPhrase)\n    var signature = heat.crypto.signBytes(message, secret);\n    return {\n      auth: {\n        accountRS: this.user.account,\n        timestamp: timestamp,\n        signature: signature,\n        publicKey: this.user.publicKey\n      }\n    }\n  }\n\n  get(route: string, returns?: string): angular.IPromise<any> {\n    return this.getRaw(this.settings.get(SettingsService.HEAT_HOST),\n      this.settings.get(SettingsService.HEAT_PORT), route, returns);\n  }\n\n  getRaw(host: string, port: number, route: string, returns?: string, ignoreErrorResponse?: boolean): angular.IPromise<any> {\n    route = \"api/v1\" + route;\n    var deferred = this.$q.defer();\n    if (this.env.type == EnvType.BROWSER) {\n      this.browserHttpGet(\n        [host,':',port,'/',route].join(''),\n        {headers: {'Content-Type': 'application/json'} },\n        (response)=>{\n          this.logResponse(route, null, response);\n          var data = angular.isString(returns) ? response.data[returns] : response.data;\n          deferred.resolve(data);\n        },(response)=>{\n          if (ignoreErrorResponse === undefined || !ignoreErrorResponse) {\n            this.logErrorResponse(route, null, response);\n          }\n          deferred.reject(new ServerEngineError(response.data));\n        }\n      );\n    }\n    else if (this.env.type == EnvType.NODEJS) {\n      var isHttps = host.indexOf('https://') == 0;\n      this.nodeHttpGet(\n        isHttps,\n        host.replace(/^(\\w+:\\/\\/)/,''),\n        port,\n        '/' + route,\n        (response)=>{\n          this.logResponse(route, null, response);\n          var data = angular.isString(returns) ? response[returns] : response;\n          deferred.resolve(data);\n        },(response)=>{\n          this.logErrorResponse(route, null, response);\n          deferred.reject(new ServerEngineError(response));\n        }\n      )\n    }\n    return deferred.promise;\n  }\n\n  private browserHttpGet(url: string, config: any, onSuccess: Function, onFailure: Function) {\n    this.$http.get(url, config).then(\n      (response: any) => {\n        if (angular.isDefined(response.data.errorDescription))\n          onFailure(response);\n        else\n          onSuccess(response);\n      },\n      (response) => { onFailure(response) }\n    )\n  }\n\n  private nodeHttpGet(isHttps: boolean, hostname: string, port: number, path: string, onSuccess: Function, onFailure: Function) {\n    var options = {\n      hostname: hostname, port: port, path: path, method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    var http = require(isHttps ? 'https':'http');\n    var req = http.request(options, (res) => {\n      res.setEncoding('utf8');\n      var body = [];\n      res.on('data', (chunk) => { body.push(chunk) });\n      res.on('end', () => {\n        var response = JSON.parse(body.join(''));\n        if (angular.isDefined(response.errorDescription))\n          onFailure(response)\n        else\n          onSuccess(response)\n      });\n    });\n    req.on('error', (e) => { onFailure(e) });\n    req.end();\n  }\n\n  post(route: string, request: any, withAuth?: boolean, returns?: string, localHostOnly?: boolean): angular.IPromise<any> {\n    let host = localHostOnly ? this.settings.get(SettingsService.HEAT_HOST_LOCAL) : this.settings.get(SettingsService.HEAT_HOST);\n    let port = localHostOnly ? this.settings.get(SettingsService.HEAT_PORT_LOCAL) : this.settings.get(SettingsService.HEAT_PORT);\n    return this.postRaw(host, port, route, request, withAuth, returns, localHostOnly);\n  }\n\n  postRaw(host: string, port: number, route: string, request: any, withAuth?: boolean, returns?: string, localHostOnly?: boolean): angular.IPromise<any> {\n    route = \"api/v1\" + route;\n    var deferred = this.$q.defer();\n    var req = request||{};\n    if (withAuth) {\n      req = angular.extend(req, this.getAuthData());\n    }\n    if (this.env.type == EnvType.BROWSER) {\n      let address = [host,':',port,'/',route].join('');\n      if (localHostOnly) {\n        if (address.indexOf('http://localhost')!=0) {\n          deferred.reject(new ServerEngineError({\n            errorDescription: `Operation allowed to localhost only! ${address} is not allowed`,\n            errorCode: 10\n          }));\n        }\n      }\n      this.browserHttpPost(address, req,\n        (response)=>{\n          this.logResponse(route, request, response);\n          var data = angular.isString(returns) ? response.data[returns] : response.data;\n          deferred.resolve(data);\n        },(response)=>{\n          this.logErrorResponse(route, request, response);\n          deferred.reject(new ServerEngineError(response.data));\n        }\n      );\n    }\n    else if (this.env.type == EnvType.NODEJS) {\n      let address = host.replace(/^(\\w+:\\/\\/)/,'');\n      if (localHostOnly) {\n        if (address.indexOf('localhost')!=0) {\n          deferred.reject(new ServerEngineError({\n            errorDescription: `Operation allowed to localhost only ${address} is not allowed`,\n            errorCode: 10\n          }));\n        }\n      }\n      var isHttps = host.indexOf('https://') == 0;\n      this.nodeHttpPost(isHttps, address, port, '/' + route, req,\n        (response)=>{\n          this.logResponse(route, request, response);\n          var data = angular.isString(returns) ? response.data[returns] : response.data;\n          deferred.resolve(data);\n        },(response)=>{\n          this.logErrorResponse(route, request, response);\n          deferred.reject(new ServerEngineError(response.data));\n        }\n      )\n    }\n    return deferred.promise;\n  }\n\n  private browserHttpPost(url: string, request: any, onSuccess: Function, onFailure: Function) {\n    this.$http({\n        method: 'POST',\n        url: url,\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n        transformRequest: function(obj) {\n          var str = [];\n          for(var p in obj)\n            str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n          return str.join(\"&\");\n        },\n        data: request\n    }).then(\n      (response:any) => {\n        if (angular.isDefined(response.data.errorDescription))\n          onFailure(response);\n        else\n          onSuccess(response);\n      },\n      (response) => { onFailure(response) }\n    );\n  }\n\n  private nodeHttpPost(isHttps: boolean, hostname: string, port: number, path: string, request: any, onSuccess: Function, onFailure: Function) {\n    var querystring = require('querystring');\n    var body = querystring.stringify(request);\n    var options = {\n      hostname: hostname, port: port, path: path, method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        \"Content-Length\": body.length\n      }\n    };\n    var http = require(isHttps ? 'https':'http');\n    var req = http.request(options, (res) => {\n      res.setEncoding('utf8');\n      var body = [];\n      res.on('data', (chunk) => { body.push(chunk) });\n      res.on('end', () => {\n        var response = { data: JSON.parse(body.join('')) };\n        if (angular.isDefined(response.data.errorDescription))\n          onFailure(response)\n        else\n          onSuccess(response)\n      });\n    });\n    req.on('error', (e) => { onFailure(e) });\n    req.write(body);\n    req.end();\n  }\n\n  private logResponse(route: string, request: any, response: any) {\n    if (this.settings.get(SettingsService.LOG_HEAT_ALL)) {\n      console.log(`HEAT [${route}]`, {\n        request: request,\n        response: response\n      })\n    }\n  }\n\n  private logErrorResponse(route: string, request: any, response: any) {\n    if (this.settings.get(SettingsService.LOG_HEAT_ERRORS)) {\n      console.error(`HEAT [${route}]`, {\n        request: request,\n        response: response\n      })\n    }\n  }\n\n  mock<T>(data:any): angular.IPromise<T> {\n    let deferred = this.$q.defer<T>();\n    deferred.resolve(data);\n    return deferred.promise\n  }\n\n  getHeatMessageContents(message: IHeatMessage|IHeatPayment|IHeatTransaction) {\n    try {\n      if (message.messageIsEncrypted || message.messageIsEncryptedToSelf) {\n        var byteArray = converters.hexStringToByteArray(message.messageBytes);\n        var nonce = converters.byteArrayToHexString(byteArray.slice(0, 32));\n        var data = converters.byteArrayToHexString(byteArray.slice(32));\n        if (message.recipient == this.user.account) {\n          return heat.crypto.decryptMessage(data, nonce, message.senderPublicKey, this.user.secretPhrase);\n        }\n        else if (message.sender == this.user.account) {\n          return heat.crypto.decryptMessage(data, nonce, message.recipientPublicKey, this.user.secretPhrase);\n        }\n      }\n      else if (message.messageIsText) {\n        return converters.hexStringToString(message.messageBytes);\n      }\n      else {\n        return message.messageBytes ? '[BINARY] ' + message.messageBytes : '';\n      }\n    } catch (e) {\n      console.log('Message parse exception', message, e);\n      return '** could not parse message bytes **'\n    }\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface IHeatSubscriberBlockPushedFilter {\n  generator?: string;\n}\n\ninterface IHeatSubscriberBlockPoppedFilter {\n  generator?: string;\n}\n\ninterface IHeatSubscriberBalanceChangedFilter {\n  account?: string;\n  currency?: string;\n}\n\ninterface IHeatSubscriberBalanceChangedResponse {\n  account: string;\n  currency: string;\n  quantity: string;\n}\n\ninterface IHeatSubscriberOrderFilter {\n  account?: string;\n  currency?: string;\n  asset?: string;\n  unconfirmed?: string; // true or false\n  type?: string; // ask or bid\n}\n\ninterface IHeatSubscriberTradeFilter {\n  seller?: string;\n  buyer?: string;\n  currency?: string;\n  asset?: string;\n}\n\ninterface IHeatSubscriberMessageFilter {\n  sender?: string;\n  recipient?: string;\n}\n\ninterface IHeatSubscriberUnconfirmedTransactionFilter {\n  sender?: string;\n  recipient?: string;\n}\n\nclass HeatSubscriber {\n\n  private RETRY_SYNC_DELAY = 2.5 * 1000; // 2.5 seconds in milliseconds\n\n  // websocket subscription topics - these match the topics in the java com.heatledger.websocket package\n  private BLOCK_PUSHED = \"1\";\n  private BLOCK_POPPED = \"2\";\n  private BALANCE_CHANGED = \"3\";\n  private ORDER = \"4\";\n  private TRADE = \"5\";\n  private MESSAGE = \"6\";\n  private UNCONFIRMED_TRANSACTION = \"7\";\n  private MICROSERVICE = \"8\";\n\n  private connectedSocketPromise: angular.IPromise<WebSocket> = null;\n  private subscribeTopics: Array<HeatSubscriberTopic> = [];\n  private unsubscribeTopics: Array<HeatSubscriberTopic> = [];\n  private needReset: boolean = false;\n\n  constructor(private url: string,\n              private $q: angular.IQService,\n              private $timeout: angular.ITimeoutService) {\n  }\n\n  /* Put all subscriber options here */\n\n  public blockPushed(filter: IHeatSubscriberBlockPushedFilter, callback: (IHeatBlock)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.BLOCK_PUSHED, filter), callback, $scope);\n  }\n\n  public blockPopped(filter: IHeatSubscriberBlockPoppedFilter, callback: (IHeatBlock)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.BLOCK_POPPED, filter), callback, $scope);\n  }\n\n  public balanceChanged(filter: IHeatSubscriberBalanceChangedFilter, callback: (IHeatSubscriberBalanceChangedResponse)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.BALANCE_CHANGED, filter), callback, $scope);\n  }\n\n  public order(filter: IHeatSubscriberOrderFilter, callback: (IHeatOrder)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.ORDER, filter), callback, $scope);\n  }\n\n  public trade(filter: IHeatSubscriberTradeFilter, callback: (IHeatTrade)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.TRADE, filter), callback, $scope);\n  }\n\n  public message(filter: IHeatSubscriberMessageFilter, callback: (IHeatMessage)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.MESSAGE, filter), callback, $scope);\n  }\n\n  public unconfirmedTransaction(filter: IHeatSubscriberUnconfirmedTransactionFilter, callback: (IHeatTransaction)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.UNCONFIRMED_TRANSACTION, filter), callback, $scope);\n  }\n\n  public microservice(filter: IStringHashMap<string>, callback: (any)=>void, $scope?: angular.IScope): () => void {\n    return this.subscribe(new HeatSubscriberTopic(this.MICROSERVICE, filter), callback, $scope);\n  }\n\n  public reset(url: string) {\n    this.url = url;\n    this.needReset = true;\n  }\n\n  /* End subscriber options, start of general implementation code */\n\n  private subscribe(newTopic: HeatSubscriberTopic, callback: (any)=>void, $scope?: angular.IScope): () => void {\n    var topic = this.findExistingOrAddNewTopic(newTopic);\n    topic.addListener(callback);\n    var unsubscribe = this.createUnsubscribeFunction(topic, callback);\n    if (angular.isDefined($scope)) {\n      $scope.$on('$destroy', ()=>{ unsubscribe() });\n    }\n    this.syncTopicSubscriptions();\n    return unsubscribe;\n  }\n\n  private findExistingOrAddNewTopic(topic: HeatSubscriberTopic): HeatSubscriberTopic {\n    for (var i=0; i<this.subscribeTopics.length; i++) {\n      if (this.subscribeTopics[i].equals(topic)) {\n        return this.subscribeTopics[i];\n      }\n    }\n    this.subscribeTopics.push(topic);\n    return topic;\n  }\n\n  private createUnsubscribeFunction(topic: HeatSubscriberTopic, callback: (any)=>void): () => void {\n    return ()=>{\n      topic.removeListener(callback);\n      if (topic.isEmpty()) {\n        this.unsubscribeTopic(topic);\n      }\n    };\n  }\n\n  private unsubscribeTopic(topic: HeatSubscriberTopic) {\n    this.subscribeTopics = this.subscribeTopics.filter(t => t !== topic);\n    this.unsubscribeTopics.push(topic);\n    this.syncTopicSubscriptions();\n  }\n\n  private syncTopicSubscriptions() {\n    this.getConnectedSocket().then(\n      (websocket)=>{\n        if (this.needReset) {\n          websocket.close(3001, \"Heat subscribes reseted\");\n          this.needReset = false;\n          return;\n        }\n        this.unsubscribeTopics.forEach(topic => {\n          if (topic.isSubscribed()) {\n            this.sendUnsubscribe(websocket, topic);\n          }\n        });\n        this.unsubscribeTopics = this.unsubscribeTopics.filter(topic => !topic.isSubscribed());\n        this.subscribeTopics.forEach(topic => {\n          if (!topic.isSubscribed()) {\n            this.sendSubscribe(websocket, topic);\n          }\n        });\n        // if there is a topic which is not subscribed we need to sync again\n        if (this.subscribeTopics.find(topic => !topic.isSubscribed())) {\n          this.$timeout(this.RETRY_SYNC_DELAY).then(() => {\n            this.syncTopicSubscriptions();\n          });\n        }\n      },\n      ()=>{\n        // on failure call syncTopicSubscriptions again after 5 seconds.\n        this.$timeout(this.RETRY_SYNC_DELAY).then(() => {\n          this.syncTopicSubscriptions();\n        });\n      }\n    )\n  }\n\n  private getConnectedSocket(): angular.IPromise<WebSocket> {\n    if (this.connectedSocketPromise) {\n      return this.connectedSocketPromise;\n    }\n    let deferred  = this.$q.defer<WebSocket>();\n    var websocket = new WebSocket(this.url);\n    this.hookupWebsocketEventListeners(websocket, deferred);\n    return this.connectedSocketPromise = deferred.promise;\n  }\n\n  private hookupWebsocketEventListeners(websocket: WebSocket, deferred: angular.IDeferred<{}>) {\n    var onclose = (event) => {\n      deferred.reject();\n      this.connectedSocketPromise = null;\n      websocket.onclose = null;\n      websocket.onopen = null;\n      websocket.onerror = null;\n      websocket.onmessage = null;\n      this.subscribeTopics.forEach(topic => { topic.setSubscribed(false) })\n      this.syncTopicSubscriptions();\n    };\n    var onerror = onclose;\n    var onopen = (event) => {\n      deferred.resolve(websocket);\n    };\n    var onmessage = (event) => {\n      try {\n        this.onMessageReceived(JSON.parse(event.data));\n      } catch (e) {\n        console.log(\"Websocket parse error\", e);\n      }\n    };\n    websocket.onclose = onclose;\n    websocket.onopen = onopen;\n    websocket.onerror = onerror;\n    websocket.onmessage = onmessage;\n  }\n\n  private sendUnsubscribe(websocket: WebSocket, topic: HeatSubscriberTopic) {\n    if (websocket.readyState == 1) {\n      websocket.send(JSON.stringify([\"unsubscribe\",[[topic.topicId,topic.params]]]));\n      topic.setSubscribed(false);\n    }\n  }\n\n  private sendSubscribe(websocket: WebSocket, topic: HeatSubscriberTopic) {\n    if (websocket.readyState == 1) {\n      websocket.send(JSON.stringify([\"subscribe\",[[topic.topicId,topic.params]]]));\n      topic.setSubscribed(true);\n    }\n  }\n\n  private onMessageReceived(messageJson: Object) {\n    if (!angular.isArray(messageJson) || messageJson.length != 3) {\n      console.log(\"Websocket invalid message\", messageJson);\n      return;\n    }\n    var topicAsStr = messageJson[0], details = messageJson[1], contents = messageJson[2];\n    if (!angular.isString(topicAsStr)||!angular.isObject(details)) {\n      console.log(\"Websocket invalid field\", messageJson);\n      return;\n    }\n\n    this.subscribeTopics.forEach(topic => {\n      if (topic.topicId == topicAsStr && this.topicMatchesDetails(topic, details)) {\n        this.invokeListeners(topic, contents);\n      }\n    });\n  }\n\n  private topicMatchesDetails(topic: HeatSubscriberTopic, details: Object) {\n    var filterKeys = Object.getOwnPropertyNames(topic.params);\n    for (var i=0, key = filterKeys[i]; i<filterKeys.length; i++) {\n      if (topic.params[key] != details[key]) return false;\n    }\n    return true;\n  }\n\n  private invokeListeners(topic: HeatSubscriberTopic, contents: Object) {\n    topic.listeners.forEach(listener=>{\n      try {\n        listener(contents);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass HeatSubscriberTopic {\n\n  public listeners: Array<(any)=> void> = [];\n  private subscribed: boolean = false;\n\n  constructor(public topicId: string, public params: any) {\n    if (!angular.isString(topicId))\n      throw new Error(\"Topic must be a string\");\n    if (!angular.isObject(params))\n      throw new Error(\"Params must be an object\");\n    var names = Object.getOwnPropertyNames(params);\n    names.forEach(key => {\n      if (!angular.isString(params[key]))\n        throw new Error(`Params property ${key} is not a string`);\n    })\n  }\n\n  public setSubscribed(subscribed: boolean) {\n    this.subscribed = subscribed;\n  }\n\n  public isSubscribed(): boolean {\n    return this.subscribed;\n  }\n\n  public addListener(callback: (any)=> void) {\n    if (this.listeners.find(cb => cb === callback))\n      throw new Error(\"Duplicate listener\");\n    this.listeners.push(callback);\n  }\n\n  public removeListener(callback: (any)=> void) {\n    this.listeners = this.listeners.filter(c => c !== callback);\n  }\n\n  public isEmpty(): boolean {\n    return this.listeners.length == 0;\n  }\n\n  public equals(other: HeatSubscriberTopic): boolean {\n    if (this.topicId != other.topicId) return false;\n    return this.objectEquals(this.params, other.params);\n  }\n\n  private objectEquals(a: Object, b: Object): boolean {\n    let namesA = Object.getOwnPropertyNames(a);\n    let namesB = Object.getOwnPropertyNames(b);\n    if (namesA.length != namesB.length) return false;\n    for (var i=0; i<namesA.length; i++) {\n      let key = namesA[i];\n      if (a[key] != b[key]) return false;\n    }\n    return true;\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ninterface IHeatBundleKeyStore {\n  name: string;\n  value: string;\n}\n\ninterface IHeatBundleAssetProperties {\n  asset: string;\n  protocol: number;\n  value: string;\n}\n\nmodule heat.bundle {\n  var MAGIC = 2147483647;\n  var KEY_STORE_SEED = MAGIC - 1;\n  var ASSET_PROPERTIES_SEED = MAGIC - 2;\n\n  /* Creates a keystore bundle */\n  export function createKeyStore(bundle: IHeatBundleKeyStore): string {\n    var buffer = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, true);\n    buffer.writeInt32(KEY_STORE_SEED);\n    var nameBytes = converters.stringToByteArray(bundle.name);\n    buffer.writeShort(nameBytes.length);\n    nameBytes.forEach((b)=> { buffer.writeByte(b) });\n\n    var valueBytes = converters.stringToByteArray(bundle.value);\n    valueBytes.forEach((b)=> { buffer.writeByte(b) });\n\n    buffer.flip();\n    return buffer.toHex();\n  }\n\n  /* Creates an asset properties bundle */\n  export function createAssetProperties(bundle: IHeatBundleAssetProperties): string {\n    var buffer = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, true);\n    buffer.writeInt32(ASSET_PROPERTIES_SEED);\n    buffer.writeInt64(Long.fromString(bundle.asset, true));\n    buffer.writeInt32(bundle.protocol);\n\n    var valueBytes = converters.stringToByteArray(bundle.value);\n    buffer.writeShort(valueBytes.length);\n    valueBytes.forEach((b)=> { buffer.writeByte(b) });\n\n    buffer.flip();\n    return buffer.toHex();\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nmodule p2p {\n\n  /**\n   * Dialog for calling other user to establish WebRTC channel.\n   */\n  export class CallDialog extends GenericDialog {\n\n    private channelListener: IEventListenerFunction;\n\n    constructor($event,\n                private heat: HeatService,\n                private user: UserService,\n                private recipient: string,\n                private recipientPublicKey: string,\n                private p2pmessaging: P2PMessaging) {\n      super($event);\n      this.dialogTitle = 'Send offchain connect request';\n      this.dialogDescription = 'Connect other user to establish the peer-to-peer channel';\n      this.okBtnTitle = 'Connect';\n      this.okBtn['processing'] = false;\n      this.customFeeTitle = 'NO FEE';\n      this.okBtn['disabled'] = !recipient;\n    }\n\n    /* @override */\n    getFields($scope: angular.IScope) {\n      var builder = new DialogFieldBuilder($scope);\n      return [\n        builder\n          .account('recipient', this.recipient)\n          .label('Counterparty HEAT account id')\n          .required()\n          .onchange(newValue => this.onChangeRecipient($scope, newValue)),\n        // builder.text('note', '').readonly(true),\n        builder.hidden('recipientPublicKey', this.recipientPublicKey)\n      ]\n    }\n\n    getTransactionBuilder(): TransactionBuilder {\n      return undefined;\n    }\n\n    okBtn() {\n      this.okBtn['processing'] = true;\n      this.heat.api.getPublicKey(this.fields['recipient'].value).then(\n        (publicKey) => {\n          let room = this.p2pmessaging.getOneToOneRoom(publicKey);\n          if (this.p2pmessaging.isPeerConnected(publicKey)) {\n            this.okBtn['mdDialog'].hide(room);\n            return;\n          }\n\n          setTimeout(() => {\n            this.okBtn['scope'].$evalAsync(() => {\n              this.okBtn['processing'] = false;\n            });\n          }, 7000);\n\n          room = this.p2pmessaging.call(publicKey);\n\n          /*\n          listen WebRTC channel to close this dialog on connected event\n          */\n          //remove previous listener\n          if (this.channelListener) {\n            this.p2pmessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\n          }\n          this.channelListener = (roomParam: p2p.Room, peerId: string) => {\n            if (roomParam.name == room.name) {\n              this.okBtn['mdDialog'].hide(room);\n              this.okBtn['processing'] = false;\n              this.p2pmessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\n            }\n          };\n          this.p2pmessaging.on(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\n          //todo it is not good way to remove the listener. It is better to do it in the  dialog.show.finally(...)\n          setTimeout(() => {\n            this.p2pmessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\n          }, 60 * 1000);\n\n          let peerAccount = heat.crypto.getAccountIdFromPublicKey(publicKey);\n          this.heat.api.searchPublicNames(peerAccount, 0, 100).then(accounts => {\n            let expectedAccount = accounts.find(value => value.publicKey == publicKey);\n            if (expectedAccount) {\n              this.p2pmessaging.saveContact(peerAccount, publicKey, expectedAccount.publicName, -Date.now());\n            }\n          });\n        }, reason => {\n          this.okBtn['processing'] = false;\n        }\n      );\n    }\n\n    private onChangeRecipient($scope: angular.IScope, newRecipient) {\n      $scope.$evalAsync(() => {\n        this.okBtn['disabled'] = this.user.account == newRecipient;\n      });\n    }\n\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nmodule p2p {\n\n  export interface MessageHistoryItem {\n    timestamp: number,\n    fromPeer: string,\n    content: string\n  }\n\n  /*\n   Messages are stored in the local storage.\n   Messages are stored in bundles called pages:\n   key -> page\n   Page is encrypted array of messages.\n   Key format:  num.messagesCount.timestampOfLastMessage, for example  \"301.40.1552578853760\"\n   Pages are sorted by keys using substring 'num' in key's value.\n   Count of messages in the key is used for providing scrolling ability, i.e. getting items in some range 'start-end'.\n   Timestamp in the key is used for finding and deleting the oldest page on reaching limit of storage.\n  */\n  export class MessageHistory {\n\n    //todo migrate from localStorage to IndexedDB\n\n    static MAX_PAGES_COUNT = 200; //max number of pages for one room\n    static MAX_PAGE_LENGTH = 100; //count of messages in one page of localStorage\n\n    private enabled: boolean;\n\n    private store: Store;\n    // private db: IDBDatabase;\n\n    private pageStorageNum: number;  //for ordering pages from storage\n    private pageContent: Array<MessageHistoryItem>;\n    private pages: number[][];\n    constructor(private room: Room,\n                private storage: StorageService,\n                private user: UserService) {\n\n      this.enabled = true;\n      this.store = storage.namespace('p2p-messages.' + this.room.name);\n      //format of key of message history stored item: \"pageNumber.messagesCount\", e.g. \"502.78\"\n      //Message count by pages is needing for providing requesting message items from history by range \"from\" \"to\"\n      this.pages = this.store.keys()\n        .map(key => {\n          let ss = key.split('.');\n          return [\n            parseInt(ss[0]),\n            (ss.length > 1 ? parseInt(ss[1]) : -1),\n            (ss.length > 2 ? parseInt(ss[2]) : -1)\n          ];\n        })\n        .sort((a, b) => a[0] - b[0]);\n\n      //convert old format of keys to the new format\n      for (var i = 0; i < this.pages.length; i++) {\n        if (this.pages[i][1] == -1 || this.pages[i][2] == -1) {\n          let items = this.getItemsInternal(this.pageKey(i));\n          this.savePage(i, items);\n        }\n      }\n\n      if (this.pages.length == 0) {\n        this.pageStorageNum = 0;\n        this.pages.push([0, 0]);\n      } else {\n        this.pageStorageNum = this.pages[this.pages.length - 1][0];\n        this.pageContent = this.getItems(this.pages.length - 1);\n      }\n      if (!this.pageContent) {\n        this.pageContent = [];\n      }\n    }\n\n    public getPageCount() {\n      return this.pages.length;\n    }\n\n    public getItemCount(): number {\n      return this.pages.map(v => v[1]).reduce((previousValue, currentValue) => previousValue + currentValue);\n    }\n\n    /**\n     * Returns history items from 'start' (inclusive) to 'end' (exclusive).\n     */\n    public getItemsScrollable(start: number, end: number) {\n      let n = 0; //messages counter by pages\n      let result = [];\n      if (end <= 0) {\n        return result;\n      }\n      start = Math.max(0, start);\n      let needingLength = end - start;\n      for (var i = 0; i < this.pages.length; i++) {\n        let page = this.pages[i];\n        n = n + page[1];  //add number of messages on the page\n        if (n > start) {\n          let pageItems = this.getItems(i);\n          let pageStartIndex = Math.max(0, result.length > 0 ? 0 : start - (n - page[1]));\n          result = result.concat(pageItems.slice(pageStartIndex, pageStartIndex + (needingLength - result.length)));\n        }\n        if (result.length == needingLength) {\n          return result;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Returns messages by page.\n     * @param pageIndex in range [0, MessageHistory.getPageCount()]\n     */\n    public getItems(pageIndex: number): Array<MessageHistoryItem> {\n      if (pageIndex >= 0 && pageIndex < this.pages.length) {\n        return this.getItemsInternal(this.pageKey(pageIndex));\n      }\n      return [];\n    }\n\n    private getItemsInternal(key: string): Array<MessageHistoryItem> {\n      let v = this.store.getString(key);\n      if (v) {\n        try {\n          let encrypted = JSON.parse(v);\n          let pageContentStr = heat.crypto.decryptMessage(encrypted.data, encrypted.nonce, this.user.publicKey, this.user.secretPhrase);\n          return JSON.parse(pageContentStr);\n        } catch (e) {\n          console.log(\"Error on parse/decrypt message history page\");\n        }\n      }\n      return [];\n    }\n\n    public put(item: MessageHistoryItem) {\n      this.pageContent.push(item);\n      this.savePage(this.pages.length - 1, this.pageContent);\n\n      if (this.pageContent.length >= MessageHistory.MAX_PAGE_LENGTH) {\n        this.pageContent = [];\n        this.pageStorageNum++;\n        this.pages.push([this.pageStorageNum, 0]);\n      }\n\n      if (this.pages.length > MessageHistory.MAX_PAGES_COUNT) {\n        console.log(\"Remove page \" + this.pageKey(0));\n        this.store.remove(this.pageKey(0));\n        this.pages.splice(0, 1);\n      }\n    }\n\n    /**\n     * Removes message in the history. Returns number of deleted messages.\n     */\n    //using timestamp as message id is not ideal, but it is quick solution\n    public remove(timestamp: number): number {\n      //todo remove message on the remote peers also\n      //iterate from end to begin because more likely user removed the recent message\n      for (let i = this.pages.length - 1; i >= 0; i--) {\n        let items = this.getItems(i);\n        let newItems = items.filter(item => item.timestamp != timestamp);\n        if (items.length != newItems.length) {\n          this.savePage(i, newItems);\n          return items.length - newItems.length;\n        }\n      }\n      return 0;\n    }\n\n    private savePage(pageIndex: number, pageContent: Array<MessageHistoryItem>) {\n      let encrypted = heat.crypto.encryptMessage(JSON.stringify(pageContent), this.user.publicKey, this.user.secretPhrase, false);\n      let page = this.pages[pageIndex];\n      try {\n        //save page under updated key 'pageNumber.itemCount'\n        this.store.remove(this.pageKey(pageIndex));\n        page[1] = pageContent.length;\n        page[2] = pageContent.length > 0 ? pageContent[pageContent.length - 1].timestamp : 0;\n        this.store.put(this.pageKey(pageIndex), JSON.stringify(encrypted));\n      } catch (domException) {\n        console.log(\"Save page error \" + domException);\n        if (['QuotaExceededError', 'NS_ERROR_DOM_QUOTA_REACHED'].indexOf(domException.name) >= 0) {\n          //shrink history of all accounts when reach storage limit\n          let attempts = 5;\n          while (attempts > 0) {\n            try {\n              this.shrinkPageStore(6 - attempts);\n              this.store.put(this.pageKey(pageIndex), JSON.stringify(encrypted));\n              attempts = 0;\n            } catch (e) {\n              console.log(\"Error while shrinking message history \" + e);\n            }\n            attempts--;\n          }\n        }\n      }\n    }\n\n    /**\n     * Deletes the oldest pages among all contacts.\n     */\n    private shrinkPageStore(pageToRemoveNumber: number) {\n      //used 'p2p-messages' instead ('p2p-messages' + this.room.name) to get keys for all rooms.\n      //note 'p2p-messages' without '.'\n      let allRoomStore = this.storage.namespace('p2p-messages');\n      //last integer substring of page's key is timestamp of the page, example \"10344812140431697156-5056413637982060108.47.100.7367346346\"\n      let keysByTime = allRoomStore.keys()\n        .map(key => {\n          let ss = key.split('.');\n          return [ss[0], parseInt(ss[1]), parseInt(ss[2]), parseInt(ss[3])];\n        })\n        // @ts-ignore\n        .sort((a, b) => a[3] - b[3]);\n\n      //remove oldest pages\n      for (let key of keysByTime) {\n        allRoomStore.remove(key.join('.'));\n        if ((--pageToRemoveNumber) <= 0) {\n          break;\n        }\n      }\n    }\n\n    private pageKey(pageIndex: number) {\n      let page = this.pages[pageIndex];\n      //page[1] == -1 page[1] == -2  - it is for old format key, e.g. \"4\", new format is 4.122.765856765\"\n      return page[0] + (page[1] == -1 ? \"\" : \".\" + page[1]) + (page[2] == -1 ? \"\" : \".\" + page[2]);\n    }\n\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n/*\ntechnical notes\n\nchrome://webrtc-internals/\nhttps://testrtc.com/blog/\nhttps://testrtc.com/webrtc-api-trace/\nhttps://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/\nhttps://tools.ietf.org/html/draft-ietf-rtcweb-ip-handling-01\nhttps://webrtchacks.com/symmetric-nat/\nhttps://blog.codeship.com/webrtc-issues-and-how-to-debug-them/\nIf you use a STUN or a TURN server, you should see a onicecandidate() event with a candidate that has a ‘typ srflx’.\nif you use a TURN server, you need to check if you get an onicecandidate() event where the candidate has a ‘typ relay’.\n\nSTUN and TURN servers list\nhttps://gist.github.com/yetithefoot/7592580\nhttps://gist.github.com/sagivo/3a4b2f2c7ac6e1b5267c2f1f59ac6c6b\n\nhttps://security.stackexchange.com/questions/54579/webrtc-p2p-ssl-where-are-the-keys-generated\nAll the communications are encrypted using Datagram Transport layer Security (DTLS), which is a derivative of SSL.\nDTLS is build in to all browsers that support WebRTC. In short the the keys for the peer-to-peer SSL connection are\ngenerated by the peers and exchanged over the signalling protocol.\nThe Peers use a self signed certificate (asymmetric-key) based on RSA to exchange the symmetric keys they will use\nfor the communication. The peers use Diffie-Hellman to generate symmetric keys.\n\nhttp://webrtc-security.github.io/\n */\n\n\nmodule p2p {\n\n  export interface P2PMessenger {\n    /**\n     * Invoked on incoming message.\n     */\n    onMessage: (msg: {}, room: Room) => any;\n  }\n\n  /**\n   * Provides WebRTC channels through rooms using signaling server.\n   * Keeps websocket connection alive so that other party will can to establish WebRTC channel using signaling websocket connection.\n   */\n  export class P2PConnector {\n\n    rooms: Map<string, Room> = new Map<string, Room>(); // roomName -> room\n\n    private static MSG_TYPE_CHECK_CHANNEL = \"CHECK_CHANNEL\";\n    private static MSG_TYPE_REQUEST_PROOF_IDENTITY = \"GET_PROOF_IDENTITY\";\n    private static MSG_TYPE_RESPONSE_PROOF_IDENTITY = \"PROOF_IDENTITY\";\n\n    private webSocketPromise: Promise<WebSocket>;\n    private signalingMessageAwaitings: Function[] = [];\n    private notAcceptedResponse = \"notAcceptedResponse_@)(%$#&#&\";\n\n    private createRoom: (name: string, peerId) => Room;\n    private confirmIncomingCall: (caller: string) => Promise<void>;\n    private sign: (dataHex: string) => ProvingData;\n    private encrypt: (message: string, peerPublicKey: string) => heat.crypto.IEncryptedMessage;\n    private decrypt: (message: heat.crypto.IEncryptedMessage, peerPublicKey: string) => string;\n    private signalingError: (reason: string) => void;\n\n    private pendingIdentity: string;\n    private identity: string;\n    private pendingRooms: Function[] = [];\n    private pendingOnlineStatus: Function;\n    private _onlineStatus: OnlineStatus = \"offline\";\n    private signalingReady: boolean = null;\n\n    private config: RTCConfiguration = {\n      iceServers: [\n        {urls: \"stun:stun.l.google.com:19302\"},\n        {urls: [\"stun:stun1.l.google.com:19302\", \"stun:stun2.l.google.com:19302\", \"stun:stun3.l.google.com:19302\", \"stun:stun4.l.google.com:19302\"]},\n        {urls: \"stun:23.21.150.121\"},\n        {urls: \"stun:stun01.sipphone.com\"},\n        {urls: \"stun:stun.iptel.org\"},\n        {urls: \"stun:stun.ekiga.net\"},\n        {urls: \"stun:stun.fwdnet.net\"},\n        {urls: \"stun:stun.xten.com\"}\n      ],\n      /*iceTransportPolicy: \"relay\"*/\n    };\n\n    private pingSignalingInterval;\n\n    constructor(private messenger: p2p.P2PMessenger, private settings: SettingsService, private $interval: angular.IIntervalService) {\n    }\n\n    /**\n     * @param identity\n     * @param createRoom function to create the room on incoming call\n     * @param confirmIncomingCall function to accept the caller\n     * @param signalingError\n     * @param sign Signing delegated to client class because this service class should not to have deal with secret info\n     * @param encrypt Encrypt p2p messages\n     * @param decrypt Decrypt p2p messages\n     */\n    setup(identity: string,\n          createRoom: (name: string, peerId) => Room,\n          confirmIncomingCall: (caller: string) => Promise<void>,\n          signalingError: (reason: string) => void,\n          sign: (dataHex: string) => ProvingData,\n          encrypt: (message: string, peerPublicKey: string) => heat.crypto.IEncryptedMessage,\n          decrypt: (message: heat.crypto.IEncryptedMessage, peerPublicKey: string) => string) {\n      this.pendingIdentity = identity;\n      this.createRoom = createRoom;\n      this.confirmIncomingCall = confirmIncomingCall;\n      this.sign = sign;\n      this.signalingError = signalingError;\n      this.encrypt = encrypt;\n      this.decrypt = decrypt;\n    }\n\n    /**\n     * Sets online status on the server side for the peer associated with this connector (websocket connection for signaling).\n     */\n    setOnlineStatus(status: OnlineStatus) {\n      let sendOnlineStatus = () => {\n        this.sendSignalingMessage([{type: \"SET_ONLINE_STATUS\", status: status}]);\n        if (status == \"online\") {\n          this.rooms.forEach(room => {\n            if (room.state.entered == \"entered\") {\n              //enforce registration on the server because new room members could be entered while was offline\n              room.enter(true);\n            }\n          })\n        }\n      };\n      if (this.identity) {\n        sendOnlineStatus();\n      } else {\n        this.sendSignalingMessage([{type: \"WANT_PROVE_IDENTITY\"}]);\n        this.pendingOnlineStatus = sendOnlineStatus;\n      }\n      this._onlineStatus = status;\n      if (status == \"offline\") {\n        this.identity = null;\n        //todo clear rooms?\n      }\n    }\n\n    get onlineStatus(): OnlineStatus {\n      return this._onlineStatus;\n    }\n\n    getPeerOnlineStatus(peerId: string): Promise<string> {\n      return this.request(\n        () => this.sendSignalingMessage([{type: \"GET_ONLINE_STATUS\", peerId: peerId}]),\n        (msg) => {\n          if (msg.type === \"ONLINE_STATUS\" && msg.peerId == peerId)\n            return msg.status;\n          return this.notAcceptedResponse;\n        })\n    }\n\n    call(toPeerId: string, caller: string, room: Room) {\n      this.sendSignalingMessage([{type: \"CALL\", toPeerId: toPeerId, caller: caller, room: room.name}]);\n    }\n\n    getTmp(roomName: string): Promise<Array<string>> {\n      return this.request(\n        () => this.sendSignalingMessage([{type: \"WHO_ONLINE\"}]),\n        (msg) => {\n          if (msg.type === \"WHO_ONLINE\")\n            return msg.remotePeerIds;\n          return this.notAcceptedResponse;\n        })\n    }\n\n    enter(room: Room, enforce?: boolean) {\n      let existingRoom = this.rooms.get(room.name);\n      if (existingRoom && existingRoom.state.entered == \"entered\") {\n        if (enforce) {\n          existingRoom.state.entered = \"not\";\n        } else {\n          return;\n        }\n      }\n      let requestEnterRoom = () => {\n        room.state.approved = true;\n        if (room.state.entered == \"not\") {\n          room.state.entered = \"entering\";\n\n          //will return the state to not entered if will no the response from the server\n          setTimeout(() => {\n            if (room.state.entered != \"entered\") {\n              room.state.entered = \"not\";\n            }\n          }, 4000);\n\n          //request entering to the room\n          this.sendSignalingMessage([{type: \"ROOM\", room: room.name}]);\n        }\n      };\n\n      this.rooms.set(room.name, room);\n\n      if (this.identity) {\n        requestEnterRoom();\n      } else {\n        this.pendingRooms.push(requestEnterRoom);\n        this.sendSignalingMessage([{type: \"WANT_PROVE_IDENTITY\"}]);\n        return;\n      }\n    }\n\n    /**\n     * Resolves opened websocket.\n     */\n    getWebSocket() {\n      if (!this.webSocketPromise || this.signalingReady === false) {\n        this.webSocketPromise = new Promise((resolve, reject) => {\n            let url = this.settings.get(SettingsService.HEAT_WEBRTC_WEBSOCKET);\n            let socket = new WebSocket(url);\n            // console.log(\"new socket, readyState=\" + socket.readyState);\n            socket.onopen = () => {\n              socket.onmessage = (msg) => this.onSignalingMessage(msg);\n              socket.onclose = () => this.onSignalingClosed();\n              this.signalingReady = true;\n              if (this.pingSignalingInterval) {\n                this.$interval.cancel(this.pingSignalingInterval);\n              }\n              this.pingSignalingInterval = this.$interval(() => {\n                this.pingSignalingServer(socket);\n              }, 120 * 1000, 0, false);\n              resolve(socket);\n            };\n            socket.onerror = (error) => {\n              console.log(error);\n              reject(error);\n              this.webSocketPromise = null;\n            };\n          }\n        );\n      }\n      return this.webSocketPromise;\n    }\n\n    private pingSignalingServer(socket: WebSocket) {\n      if (this.signalingReady) {\n        this.sendSignalingMessage([{type: \"PING\"}]);\n      }\n    }\n\n    sendSignalingMessage(data: any[]): Promise<any> {\n      return this.getWebSocket()\n        .then(websocket => {\n          data.splice(0, 0, \"webrtc\");\n          websocket.send(JSON.stringify(data));\n          //console.log(\">> \\n\" + JSON.stringify(data));\n        }, reason => console.log(reason))\n        .catch(reason => {\n          console.log(\"error on get websocket \\n\" + reason);\n        })\n    }\n\n    onSignalingMessage(messageEvent: MessageEvent) {\n      if (this._onlineStatus == \"offline\") {\n        return;\n      }\n      let data = JSON.parse(messageEvent.data);\n      //console.log(\"<< \\n\"+ JSON.stringify(data));\n      let msg;\n      if (data.encrypted) {\n        msg = JSON.parse(this.decrypt(data.encrypted, data.fromPeer));\n        msg.fromPeer = data.fromPeer;\n        msg.toPeer = data.toPeer;\n        msg.room = data.room;\n      } else {\n        msg = data;\n      }\n\n      let roomName: string = msg.room;\n\n      if (msg.type === 'PONG') {\n        //console.log(\"signaling pong\");\n      } else if (msg.type === 'PROVE_IDENTITY') {\n        let signedData = this.sign(msg.data);\n        signedData[\"type\"] = P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY;\n        this.sendSignalingMessage([signedData]);\n      } else if (msg.type === 'APPROVED_IDENTITY') {\n        this.identity = this.pendingIdentity;\n        this.pendingRooms.forEach(f => f());\n        this.pendingRooms = [];\n        if (this.pendingOnlineStatus)\n          this.pendingOnlineStatus();\n        this.pendingOnlineStatus = null;\n      } else if (msg.type === 'CALL') {\n        let caller: string = msg.caller;\n        this.confirmIncomingCall(caller).then(value => {\n          let room = this.createRoom(roomName, caller);\n          this.enter(room, true);\n        });\n      } else if (msg.type === 'ERROR') {\n        this.signalingError(msg.reason);\n      } else if (msg.type === 'WELCOME') {  //welcome to existing room\n        let room = this.rooms.get(roomName);\n        room.state.entered = \"entered\";\n        msg.remotePeerIds.forEach((peerId: string) => {\n          let peer = room.createPeer(peerId, peerId);\n          if (peer && !peer.isConnected()) {\n            let pc = this.askPeerConnection(roomName, peerId);\n            this.doOffer(roomName, peerId, pc);\n          }\n        });\n      } else if (msg.type === 'offer') {\n        let peerId: string = msg.fromPeer;\n        let peer = this.rooms.get(roomName).createPeer(peerId, peerId);\n        if (peer && !peer.isConnected()) {\n          let room = this.rooms.get(roomName);\n          let pc = this.askPeerConnection(roomName, peerId);\n          if (pc) {\n            pc.setRemoteDescription(new RTCSessionDescription(msg))\n              .then(() => {\n                this.doAnswer(roomName, peerId, pc);\n              })\n              .catch(e => {\n                if (room.onFailure) {\n                  room.onFailure(peerId, e);\n                } else {\n                  console.log(e.name + \"  \" + e.message);\n                }\n              });\n          }\n        }\n      } else if (msg.type === 'answer') {\n        let room = this.rooms.get(roomName);\n        let peer = room.getPeer(msg.fromPeer);\n        if (peer && !peer.isConnected()) {\n          let pc = peer.peerConnection;\n          if (pc) {\n            pc.setRemoteDescription(new RTCSessionDescription(msg))\n              .catch(e => {\n                if (room.onFailure) {\n                  room.onFailure(msg.fromPeer, e);\n                } else {\n                  console.log(e.name + \"  \" + e.message);\n                }\n              });\n          }\n        }\n      } else if (msg.type === 'candidate') {\n        let room = this.rooms.get(roomName);\n        let peer = room.getPeer(msg.fromPeer);\n        let pc = peer.peerConnection;\n        let candidate = new RTCIceCandidate({\n          sdpMLineIndex: msg.label,\n          candidate: msg.candidate\n        });\n        pc.addIceCandidate(candidate)\n          .catch(e => {\n            console.log(\"Failure during addIceCandidate(): \" + e.name + \"  \" + e.message);\n            if (room.onFailure) {\n              room.onFailure(msg.fromPeer, e);\n            }\n          });\n\n        //hack\n        if (!peer['noNeedReconnect']) {\n          setTimeout(() => {\n            if (!peer.isConnected() && peer['connectionRole'] == \"answer\") {\n              peer['noNeedReconnect'] = true;\n              let pc = this.askPeerConnection(roomName, msg.fromPeer);\n              this.doOffer(roomName, msg.fromPeer, pc);\n            }\n          }, 2500);\n        }\n        // } else if (msg.type === 'GETROOM') {\n        //   this.room = msg.value;\n        //   this.onRoomReceived(this.room);\n        //   //printState(\"Room received\");\n      } else if (msg.type === 'WRONGROOM') {\n        //window.location.href = \"/\";\n        console.log(\"Wrong room\");\n      } else {\n        this.signalingMessageAwaitings.forEach(f => f(msg));\n      }\n    }\n\n    onSignalingClosed() {\n      this.signalingReady = false;\n      this.$interval.cancel(this.pingSignalingInterval);\n    }\n\n    askPeerConnection(roomName: string, peerId: string) {\n      let peer = this.rooms.get(roomName).getPeer(peerId);\n\n      //that's rude. Should analyze the connection state and create a new one or use an existing\n      let pc: RTCPeerConnection = peer.peerConnection;\n      if (pc && pc.iceConnectionState != \"connected\" && pc.iceConnectionState != \"completed\") {\n        pc.close();\n        pc = null;\n      }\n\n      try {\n        pc = new RTCPeerConnection(this.config);\n        pc.onicecandidate = (event) => {\n          if (event.candidate) {\n            let data = {\n              type: 'candidate',\n              label: event.candidate.sdpMLineIndex,\n              id: event.candidate.sdpMid,\n              candidate: event.candidate.candidate\n            };\n            let encrypted = this.encrypt(JSON.stringify(data), peerId);\n            this.sendSignalingMessage([\n              {room: roomName, toPeerId: peerId},\n              {room: roomName, fromPeer: this.identity, encrypted: encrypted}\n              ]);\n          }\n        };\n        pc.ondatachannel = (event) => {\n          let dataChannel = event.channel;\n          //console.log('Received data channel creating request');  //calee do\n          this.initDataChannel(roomName, peerId, dataChannel, true);\n          //console.log(\"init Data Channel\");\n          peer.dataChannel = dataChannel;\n        };\n        pc.oniceconnectionstatechange = (event: Event) => {\n          if (pc.iceConnectionState == \"failed\") {\n            console.log(\"iceConnectionState failed\");\n          }\n          if (pc.iceConnectionState == 'disconnected') {\n            if (peer.dataChannel) {\n              peer.dataChannel.close();\n              this.onCloseDataChannel(roomName, peerId, peer.dataChannel);\n            }\n            console.log('Peer is disconnected');\n          }\n        };\n        pc.onicecandidateerror = event => {\n          console.log(`${event.errorCode}  ${event.hostCandidate}  ${event.url}  ${event.errorText}`);\n        };\n\n        peer.peerConnection = pc;\n\n        return pc;\n      } catch (e) {\n        console.log(e);\n        pc = null;\n        return;\n      }\n    }\n\n    initDataChannel(roomName: string, peerId: string, dataChannel: RTCDataChannel, sendCheckingMessage?: boolean) {\n      dataChannel.onopen = (event) => this.onOpenDataChannel(roomName, peerId, dataChannel, sendCheckingMessage);\n      dataChannel.onclose = (event) => this.onCloseDataChannel(roomName, peerId, dataChannel);\n      dataChannel.onmessage = (event) => this.onMessage(roomName, peerId, dataChannel, event);\n      this.rooms.get(roomName).getPeer(peerId).dataChannel = dataChannel;\n      //console.log(`initDataChannel ${roomName} ${peerId} ${dataChannel.label}`);\n    }\n\n    onOpenDataChannel(roomName: string, peerId: string, dataChannel: RTCDataChannel, sendCheckingMessage?: boolean) {\n      if (sendCheckingMessage) {\n        let checkChannelMessage = {type: P2PConnector.MSG_TYPE_CHECK_CHANNEL, room: roomName, value: (\"\" + Math.random())};\n        //send checking message to signaling server,\n        // then when other peer will send this value also the server will be sure that both ends established channel\n        this.sendSignalingMessage([checkChannelMessage]);\n        //send checking message to peer\n        this.send(roomName, JSON.stringify(checkChannelMessage), dataChannel);\n        //console.log(\"Checking message sent \" + checkChannelMessage.value);\n      }\n\n      let room: Room = this.rooms.get(roomName);\n      if (room.onOpenDataChannel) {\n        room.onOpenDataChannel(peerId);\n      }\n      room.getPeer(peerId).dataChannel = dataChannel;\n\n      //request proof of identity - other party must respond by sending the data signed by its public key.\n      //In request my party send own proof also.\n      //For example, generate random data, sign it, send signed data to other party, the other party signs the data and sends it back\n      let dataHex = converters.stringToHexString(randomString());\n      if (!room[\"proofData\"])\n        room[\"proofData\"] = {};\n      room[\"proofData\"][peerId] = dataHex;\n      let signedData = this.sign(dataHex);\n      let proofRequest = {type: P2PConnector.MSG_TYPE_REQUEST_PROOF_IDENTITY,\n        signature: signedData.signatureHex, data: signedData.dataHex, publicKey: signedData.publicKeyHex};\n      this.send(roomName, JSON.stringify(proofRequest), dataChannel);\n\n      //console.log(`Data channel is opened ${dataChannel.label}`);\n    }\n\n    onCloseDataChannel(roomName: string, peerId: string, dataChannel: RTCDataChannel) {\n      //console.log(`onCloseDataChannel ${roomName} ${peerId}`);\n      let room: Room = this.rooms.get(roomName);\n\n      room.getPeer(peerId).dataChannel = null;\n\n      // if (dataChannels.length == 0)\n      //   delete this.rooms[roomName];\n\n      //commented out because websocket somewhy does not open on the next request\n      // if (Object.keys(this.rooms).length == 0)\n      //   if (this.signalingChannel)\n      //     this.signalingChannel.close();\n\n      if (room && room.onCloseDataChannel)\n        room.onCloseDataChannel(peerId);\n    }\n\n    createDataChannel(room: string, peerId: string, peerConnection: RTCPeerConnection, role) {\n      let dataChannel: RTCDataChannel;\n      try {\n        dataChannel = peerConnection.createDataChannel(room + \":\" + peerId, null);  //caller do\n      } catch (e) {\n        console.log('error creating data channel ' + e);\n        return;\n      }\n      this.initDataChannel(room, peerId, dataChannel);\n    }\n\n    onFailure(roomName: string, peerId: string, e) {\n      let room: Room = this.rooms.get(roomName);\n      if (room.onFailure)\n        room.onFailure(peerId, e);\n    }\n\n    /**\n     * offer example:\n     * [\n     * {\"room\":\"1\", \"toPeerId\":\"93ac1cc5f78d3c54da74282dfb5012a2f29b5310b52bea5288f147f31a361419\"},\n     * {\"type\":\"offer\", \"sdp\":\"v=0\\r\\no=- 199179691613427 ... webrtc-datachannel 1024\\r\\n\"}\n     * ]\n     */\n    doOffer(roomName: string, peerId: string, peerConnection: RTCPeerConnection) {\n      console.log(\"do offer\");\n      let peer = this.rooms.get(roomName).getPeer(peerId);\n      peer['connectionRole'] = 'offer';\n      this.createDataChannel(roomName, peerId, peerConnection, \"caller\");\n      peerConnection.createOffer((offer) => {\n          peerConnection.setLocalDescription(offer, () => {\n            let encrypted = this.encrypt(JSON.stringify(peerConnection.localDescription), peerId);\n            this.sendSignalingMessage([\n              {room: roomName, toPeerId: peerId, fromPeer: this.identity, encrypted: encrypted}\n            ]);\n          }, (e) => this.onFailure(roomName, peerId, e));\n        }, (e) => this.onFailure(roomName, peerId, e),\n        null);\n    }\n\n    /**\n     * answer example:\n     * [\n     * {\"room\":\"1\", \"toPeerId\":\"12a26b3d6c17395f787166254b50259075fa0649ef0045ebd0c1555c4c5d8462\"},\n     * {\"type\":\"answer\", \"sdp\":\"v=0\\r\\no=- 6490594091461 ... webrtc-datachannel 1024\\r\\n\"}\n     * ]\n     */\n    doAnswer(roomName: string, peerId: string, peerConnection: RTCPeerConnection) {\n      console.log(\"do answer\");\n      let peer = this.rooms.get(roomName).getPeer(peerId);\n      peer['connectionRole'] = peer['connectionRole'] ? 'no need' : 'answer';\n      peerConnection.createAnswer((answer) => {\n        peerConnection.setLocalDescription(answer, () => {\n          let encrypted = this.encrypt(JSON.stringify(peerConnection.localDescription), peerId);\n          this.sendSignalingMessage([\n            {room: roomName, toPeerId: peerId, fromPeer: this.identity, encrypted: encrypted}\n          ]);\n        }, (e) => this.onFailure(roomName, peerId, e));\n      }, (e) => this.onFailure(roomName, peerId, e));\n    }\n\n    // onChannelStateChange(dataChannel) {\n    //   console.log('Data channel state is: ' + dataChannel.readyState);\n    // }\n\n    /**\n     * Sends message to all online members of room.\n     */\n    sendMessage(roomName: string, message: P2PMessage) {\n      return this.send(roomName, JSON.stringify(message));\n    }\n\n    private send(roomName: string, data: string, channel?: RTCDataChannel) {\n      let room = this.rooms.get(roomName);\n      let peers = Array.from(room.getAllPeers().values());\n      let count = 0;\n      for (let peer of peers) {\n        if (channel) {\n          if (peer.dataChannel == channel) {\n            let encrypted: heat.crypto.IEncryptedMessage = this.encrypt(data, peer.publicKey);\n            return this.sendInternal(channel, JSON.stringify(encrypted));\n          }\n        } else {\n          let encrypted: heat.crypto.IEncryptedMessage = this.encrypt(data, peer.publicKey);\n          count = count + this.sendInternal(peer.dataChannel, JSON.stringify(encrypted));\n        }\n      }\n      return count;\n    }\n\n    private sendInternal(channel: RTCDataChannel, data: string): number {\n      let notSentReason;\n      if (channel.readyState == \"open\") {\n        try {\n          channel.send(data);\n          //console.log(`>>> channel ${channel.label} \\n ${data}`);\n          return 1;\n        } catch (e) {\n          notSentReason = e.toString();\n        }\n      } else {\n        notSentReason = \"Channel state \" + channel.readyState;\n      }\n      if (notSentReason) {\n        console.log(\"Not sent: \" + notSentReason);\n      }\n      return 0;\n    }\n\n    onMessage(roomName: string, peerId: string, dataChannel: RTCDataChannel, event: MessageEvent) {\n      try {\n        let encrypted: heat.crypto.IEncryptedMessage = JSON.parse(event.data);\n        let msg = JSON.parse(this.decrypt(encrypted, peerId));\n        //todo consider if needing to remove all special symbols from msg.text\n\n        // console.log(`<<< channel ${dataChannel.label} \\n ${event.data}`);\n\n        let room: Room = this.rooms.get(roomName);\n        if (room) {\n          msg.fromPeerId = peerId;\n          msg.roomName = roomName;\n          room.onMessageInternal(msg);\n          this.messenger.onMessage(msg, room);\n        }\n        if (msg.type === P2PConnector.MSG_TYPE_CHECK_CHANNEL) {\n          this.sendSignalingMessage([{room: roomName}, msg]);\n        } else if (msg.type === P2PConnector.MSG_TYPE_REQUEST_PROOF_IDENTITY) {\n          let signedData = this.sign(msg.data);\n          let response = {type: P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY,\n            signature: signedData.signatureHex, data: signedData.dataHex, publicKey: signedData.publicKeyHex};\n          this.send(roomName, JSON.stringify(response), dataChannel);\n        } else if (msg.type === P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY) {\n          if (msg.rejected) {\n            if (room.onRejected) {\n              room.onRejected(peerId, msg.rejected);\n            }\n            console.log(`Peer ${peerId} rejected channel to him`);\n            dataChannel.close();\n            return;\n          }\n          let rejectedReason;\n          if (room[\"proofData\"][peerId] !== msg.data) {\n            rejectedReason = \"Received data does not match the sent data\";\n          } else if (msg.publicKey !== peerId) {\n            rejectedReason = \"Received public key does not match the peer's public key\";\n          } else if (room.memberPublicKeys.indexOf(msg.publicKey) == -1) {\n            rejectedReason = \"Received public key is not allowed\";\n          }\n          if (rejectedReason) {\n            let response = {type: P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY, rejected: rejectedReason};\n            this.send(roomName, JSON.stringify(response), dataChannel);\n            dataChannel.close();\n            return;\n          }\n          if (heat.crypto.verifyBytes(msg.signature, msg.data, msg.publicKey)) {\n            delete room[\"proofData\"][peerId];\n            console.log(\"PROOF_IDENTITY ok: \\n\" + msg.signature + \" \" +  msg.data + \" \" + msg.publicKey);\n            if (!room.provenPublicKeyAllowed(room, peerId, msg.publicKey)) {\n              let response = {type: P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY, rejected: \"Public key owner is not allowed to connect\"};\n              this.send(roomName, JSON.stringify(response), dataChannel);\n              dataChannel.close();\n            }\n          } else {\n            let response = {type: P2PConnector.MSG_TYPE_REQUEST_PROOF_IDENTITY, rejected: \"Invalid signature\"};\n            this.send(roomName, JSON.stringify(response), dataChannel);\n            dataChannel.close();\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    /**\n     * Close all data channels for the room, delete the room.\n     */\n    closeRoom(room: Room) {\n      let dataChannels = room.getDataChannels();\n      dataChannels.forEach(channel => channel.close());\n\n      //room deleting is in the onCloseDataChannel()\n    }\n\n    /**\n     * Clear all data. Close websocket of signaling channel.\n     */\n    close(closeWebsocket?: boolean) {\n      this.identity = null;\n      this.pendingIdentity = null;\n      this.pendingRooms = [];\n      this.pendingOnlineStatus = null;\n      this.rooms.forEach(room => this.closeRoom(room));\n      if ((closeWebsocket === undefined || closeWebsocket) && this.signalingReady) {\n        this.getWebSocket().then(socket => socket.close());\n      }\n    }\n\n\n    private request(request: () => void, handleResponse: (msg) => any): Promise<any> {\n      let p = new Promise<any>((resolve, reject) => {\n        let f = (msg) => {\n          let v = handleResponse(msg);\n          if (v !== this.notAcceptedResponse) {\n            resolve(v);\n            let i: number = this.signalingMessageAwaitings.indexOf(f);\n            if (i !== -1)\n              this.signalingMessageAwaitings.splice(i, 1);\n          }\n        };\n        this.signalingMessageAwaitings.push(f);\n        return request();\n      });\n      return promiseTimeout(3000, p);\n    }\n\n  }\n\n  function promiseTimeout(ms, promise) {\n    return new Promise(function (resolve, reject) {\n      // create a timeout to reject promise if not resolved\n      var timer = setTimeout(function () {\n        reject(new Error(\"promise timeout\"));\n      }, ms);\n\n      promise\n        .then(function (res) {\n          clearTimeout(timer);\n          resolve(res);\n        })\n        .catch(function (err) {\n          clearTimeout(timer);\n          reject(err);\n        });\n    });\n  }\n\n  function randomString() {\n    return Math.random().toString(36).substr(2);\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ntype OnlineStatus = \"online\" | \"offline\";\ntype EnterRoomState = \"not\" | \"entering\" | \"entered\";\n\n/**\n * This class is bridge between heat-ui components and p2p connector low level components (which intended to be independent of heat-ui).\n * So this service is intended to provide p2p connector to the heat-ui functions.\n */\n@Service('P2PMessaging')\n@Inject('settings', 'user', 'storage', '$interval', 'heat', '$mdToast')\nclass P2PMessaging extends EventEmitter implements p2p.P2PMessenger {\n\n  public static EVENT_NEW_MESSAGE = 'EVENT_NEW_MESSAGE';\n  public static EVENT_HAS_UNREAD_CHANGED = 'EVENT_HAS_UNREAD_CHANGED';\n  public static EVENT_ON_OPEN_DATA_CHANNEL = 'EVENT_ON_OPEN_DATA_CHANNEL';\n  public static EVENT_ON_CLOSE_DATA_CHANNEL = 'EVENT_ON_CLOSE_DATA_CHANNEL';\n\n  public p2pContactStore: Store;\n  public seenP2PMessageTimestampStore: Store;\n  public offchainMode: boolean = false;\n  public hasUnreadMessage: boolean = false;\n\n  public connector: p2p.P2PConnector;\n\n  constructor(private settings: SettingsService,\n              private user: UserService,\n              private storage: StorageService,\n              private $interval: angular.IIntervalService,\n              private heat: HeatService,\n              private $mdToast: angular.material.IToastService) {\n    super();\n\n    let closeConnector = () => {\n      if (this.connector) {\n        this.connector.close(false);\n        this.connector = null;\n      }\n    };\n\n    user.on(UserService.EVENT_UNLOCKED, () => {\n      closeConnector();\n\n      this.connector = new p2p.P2PConnector(this, settings, $interval);\n      this.connector.setup(\n        this.user.publicKey,\n        (roomName, peerId: string) => this.createRoomOnIncomingCall(roomName, peerId),\n        peerId => this.confirmIncomingCall(peerId),\n        reason => this.onSignalingError(reason),\n        dataHex => this.sign(dataHex),\n        (message, peerPublicKey) => this.encrypt(message, peerPublicKey),\n        (message: heat.crypto.IEncryptedMessage, peerPublicKey: string) => this.decrypt(message, peerPublicKey)\n      );\n    });\n\n    user.on(UserService.EVENT_LOCKED, closeConnector);\n\n    this.p2pContactStore = storage.namespace('p2pContacts');\n    this.seenP2PMessageTimestampStore = storage.namespace('contacts.seenP2PMessageTimestamp');\n  }\n\n  private encrypt(message: string, peerPublicKey: string) {\n    return heat.crypto.encryptMessage(message, peerPublicKey, this.user.secretPhrase, false);\n  }\n\n  private decrypt(message: heat.crypto.IEncryptedMessage, peerPublicKey: string) {\n    return heat.crypto.decryptMessage(message.data, message.nonce, peerPublicKey, this.user.secretPhrase, false);\n  }\n\n  onMessage(msg: {}, room: p2p.Room) {\n    this.emit(P2PMessaging.EVENT_NEW_MESSAGE, msg, room);\n    this.seenP2PMessageTimestampStore.put(room.name + \"_last-message-time\", Date.now());\n    this.updateSeenTime(null);\n    this.displayNewMessagePopup(msg, room);\n  }\n\n  private displayNewMessagePopup(msg: any, room: p2p.Room) {\n    if (msg.type == \"chat\" && msg.text) {\n      let account = heat.crypto.getAccountIdFromPublicKey(msg.fromPeerId);\n      let text: string = msg.text.substring(0, 50);\n      if (msg.text.length > 50) {\n        let lastSpaceIndex = Math.max(text.lastIndexOf(\" \"), 30);\n        text = text.substring(0, lastSpaceIndex) + \" ...\";\n      }\n      this.$mdToast.show(\n        this.$mdToast.simple().textContent(`New message from ${account}: \"${text}\"`).hideDelay(6000)\n      );\n    } else if(msg.type == \"contactUpdate\") {\n      let parsedMessage = JSON.parse(msg.text);\n      let account = heat.crypto.getAccountIdFromPublicKey(msg.fromPeerId);\n      let publicKey = msg.fromPeerId\n      console.log(msg.text)\n      this.heat.api.searchPublicNames(account, 0, 100).then((accounts)=> {\n        let expectedAccount = accounts.find(value => value.publicKey == publicKey);\n          if (expectedAccount) {\n            let contactUtils = <P2pContactUtils>heat.$inject.get('p2pContactUtils');\n            contactUtils.updateContactCurrencyAddress(account, parsedMessage.name, parsedMessage.address, publicKey, expectedAccount.publicName, -Date.now())\n          }\n      })\n    }\n  }\n\n  set onlineStatus(status: OnlineStatus) {\n    this.connector.setOnlineStatus(status);\n  }\n\n  get onlineStatus(): OnlineStatus {\n    return this.connector.onlineStatus;\n  }\n\n  /**\n   * Returns room with single peer.\n   */\n  getOneToOneRoom(peerId: string, required?: boolean): p2p.Room {\n    let roomName = this.generateOneToOneRoomName(this.user.publicKey, peerId);\n    let room = this.connector.rooms.get(roomName);\n    if (!room && required) {\n      room = this.setupRoom(new p2p.Room(roomName, this.connector, this.storage, this.user, [peerId]));\n      this.connector.rooms.set(roomName, room);\n    }\n    if (room && room.getAllPeers().size <= 1) {\n      //todo check is opened channel\n      return room;\n    }\n  }\n\n  sendKeys = (room: p2p.Room, text: string) => {\n    room.sendMessage({timestamp: Date.now(), type: \"contactUpdate\", text});\n  }\n\n  /**\n   * Creates new room and registers it on the signaling server.\n   */\n  enterRoom(peerId: string): p2p.Room {\n    if (this.onlineStatus == \"offline\") {\n      return null;\n    }\n    let roomName = this.generateOneToOneRoomName(this.user.publicKey, peerId);\n    let room = this.connector.rooms.get(roomName);\n    if (!room) {\n      room = this.setupRoom(new p2p.Room(roomName, this.connector, this.storage, this.user, [peerId]));\n      this.connector.rooms.set(roomName, room);\n    }\n    if (room.state.entered == \"not\") {\n      room.enter();\n    }\n    return room;\n  }\n\n  call(peerId: string): p2p.Room {\n    let room = this.enterRoom(peerId);\n    this.connector.call(peerId, this.user.publicKey, room);\n    return room;\n  }\n\n  onSignalingError(reason: string) {\n    console.log(\"Signaling error: \" + reason);\n  }\n\n  sign(dataHex: string): p2p.ProvingData {\n    //proof the passed to room public key is owned\n    let signature = heat.crypto.signBytes(dataHex, converters.stringToHexString(this.user.secretPhrase));\n    return {signatureHex: signature, dataHex: dataHex, publicKeyHex: this.user.publicKey}\n  }\n\n  private setupRoom(room: p2p.Room): p2p.Room {\n    room.onOpenDataChannel = peerId => {\n      this.emit(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, room, peerId);\n    };\n    room.onCloseDataChannel = peerId => {\n      this.emit(P2PMessaging.EVENT_ON_CLOSE_DATA_CHANNEL, room, peerId);\n    };\n    room.lastIncomingMessageTimestamp = this.seenP2PMessageTimestampStore.getNumber(room.name + \"_last-message-time\", 0);\n    return room;\n  }\n\n  private generateOneToOneRoomName(peerOnePublicKey: string, peerTwoPublicKey: string) {\n    let arr = [heat.crypto.getAccountIdFromPublicKey(peerOnePublicKey), heat.crypto.getAccountIdFromPublicKey(peerTwoPublicKey)];\n    arr.sort();\n    return arr[0] + \"-\" + arr[1];\n  }\n\n  private createRoomOnIncomingCall(roomName: string, peerId: string) {\n    let room = this.connector.rooms.get(roomName);\n    if (!room) {\n      room = this.setupRoom(new p2p.Room(roomName, this.connector, this.storage, this.user, [peerId]));\n      this.connector.rooms.set(roomName, room);\n    }\n    return room;\n  }\n\n  private confirmIncomingCall(peerId: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      // if peer is connected already confirm silently\n      if (this.isPeerConnected(peerId)) {\n        resolve();\n        return;\n      }\n\n      let updateContactCallTime = (account: string, publicKey: string, publicName: string) => {\n        //save negative time to force to select contact in contact list\n        this.saveContact(peerAccount, peerId, publicName, -Date.now());\n      };\n\n      let peerAccount = heat.crypto.getAccountIdFromPublicKey(peerId);\n      this.heat.api.searchPublicNames(peerAccount, 0, 100).then(accounts => {\n        let expectedAccount = accounts.find(value => value.publicKey == peerId);\n        if (expectedAccount) {\n          let closeDialogOnConnected = (mdDialog: angular.material.IDialogService) => {\n            let interval = this.$interval(() => {\n              if (this.isPeerConnected(peerId)) {\n                mdDialog.cancel(\"Already connected\");\n                this.$interval.cancel(interval);\n                updateContactCallTime(peerAccount, peerId, expectedAccount.publicName);\n              }\n            }, 500, 7, false);\n          };\n          dialogs.confirm(\n            \"Incoming connect request\",\n            `Account &nbsp;&nbsp;<b>${expectedAccount.publicName}</b>&nbsp;&nbsp; wants to connect with you. Accepting connection will share your current IP address. Accept or decline? Click OK to accept, Cancel to decline.`,\n            closeDialogOnConnected\n          ).then(() => {\n            updateContactCallTime(peerAccount, peerId, expectedAccount.publicName);\n            resolve();\n          });\n        } else {\n          reject(\"Account not found\");\n        }\n      });\n    });\n  }\n\n  dialog($event?, recipient?: string, recipientPublicKey?: string, userMessage?: string): p2p.CallDialog {\n    return new p2p.CallDialog($event, this.heat, this.user, recipient, recipientPublicKey, this);\n  }\n\n  saveContact(account: string, publicKey: string, publicName: string, calledTimestamp?: number) {\n    if (!publicKey) return;\n    let contact: IHeatMessageContact = this.p2pContactStore.get(account);\n    if (contact && calledTimestamp && calledTimestamp != contact.activityTimestamp) {\n      contact.activityTimestamp = calledTimestamp;\n      this.p2pContactStore.put(account, contact);\n    }\n    if (!contact) {\n      contact = {\n        account: account,\n        privateName: '',\n        publicKey: publicKey,\n        publicName: publicName,\n        timestamp: 0,\n        activityTimestamp: calledTimestamp\n      };\n      this.p2pContactStore.put(account, contact);\n    }\n  }\n\n  isPeerConnected(peerId: string): boolean {\n    let room = this.getOneToOneRoom(peerId);\n    if (room) {\n      let peer = room.getPeer(peerId);\n      return peer && peer.isConnected();\n    }\n    return false;\n  }\n\n  roomHasUnreadMessage(room: p2p.Room): boolean {\n    return room.lastIncomingMessageTimestamp > this.seenP2PMessageTimestampStore.getNumber(room.name, 0);\n  }\n\n  /**\n   * The seen time is needed to display mark for contact when it receives the new unread messages.\n   */\n  updateSeenTime(roomName: string, timestamp?: number) {\n    if (roomName) {\n      this.seenP2PMessageTimestampStore.put(roomName, timestamp ? timestamp : Date.now() - 500);\n    }\n\n    //update read status on all rooms\n    let unreadRooms = [];\n    this.connector.rooms.forEach(room => {\n      if (this.roomHasUnreadMessage(room)) {\n        unreadRooms.push(room);\n      }\n    });\n    let nowHasUnreadMessage = unreadRooms.length > 0;\n    if (nowHasUnreadMessage != this.hasUnreadMessage) {\n      this.hasUnreadMessage = nowHasUnreadMessage;\n      this.emit(P2PMessaging.EVENT_HAS_UNREAD_CHANGED, unreadRooms);\n    }\n  }\n\n}\n","@Service('p2pContactUtils')\n@Inject('storage', 'heat', '$q', 'user')\nclass P2pContactUtils {\n  private static numbersOnly = /^[0-9]+$/;\n  private p2pContactStore: Store;\n\n  constructor(\n    private storage: StorageService,\n    private heat: HeatService,\n    private $q: angular.IQService,\n    private user: UserService) {\n    this.p2pContactStore = storage.namespace('p2pContacts')\n  }\n\n  saveContact(account: string, publicKey: string, publicName: string, calledTimestamp?: number) {\n    if (!publicKey) return;\n    let contact: IHeatMessageContact = this.p2pContactStore.get(account);\n    if (contact && calledTimestamp && calledTimestamp != contact.activityTimestamp) {\n      contact.activityTimestamp = calledTimestamp;\n      this.p2pContactStore.put(account, contact);\n    }\n    if (!contact) {\n      contact = {\n        account: account,\n        privateName: '',\n        publicKey: publicKey,\n        publicName: publicName,\n        timestamp: 0,\n        activityTimestamp: calledTimestamp\n      };\n      this.p2pContactStore.put(account, contact);\n    }\n  }\n\n  updateContactCurrencyAddress(account: string, currency: string, address: string, publicKey: string, publicName: string, calledTimeStamp?: number) {\n    if (!publicKey) return;\n    let contact: IHeatMessageContact = this.p2pContactStore.get(account);\n    if (!contact) this.saveContact(account, publicKey, publicName, calledTimeStamp);\n    let currencyAddressMap: currencyAddressMap = {\n      name: currency,\n      address\n    }\n    if (!contact.cryptoAddresses) {\n      contact.cryptoAddresses = [currencyAddressMap];\n    } else if (contact.cryptoAddresses.findIndex(map => map.name === currency) === -1) {\n      contact.cryptoAddresses.push(currencyAddressMap);\n    } else {\n      contact.cryptoAddresses[contact.cryptoAddresses.findIndex(map => map.name === currency)] = currencyAddressMap;\n    }\n    this.p2pContactStore.put(account, contact);\n  }\n\n  lookupContact(query: string) {\n    let deferred = this.$q.defer<IHeatMessageContact[]>()\n    let isNumbersOnly = P2pContactUtils.numbersOnly.test(query)\n    if (isNumbersOnly) {\n      deferred.resolve(this.searchContactByNumericId(query));\n    } else {\n      deferred.resolve(this.searchContactByPublicName(query));\n    }\n    return deferred.promise;\n  }\n\n  searchContactByNumericId(query: string) {\n    let contacts: IHeatMessageContact[] = [];\n    let keys = this.p2pContactStore.keys().filter(key => key.startsWith(query))\n    keys.forEach(key => contacts.push(this.p2pContactStore.get(key)))\n    return contacts;\n  }\n\n  searchContactByPublicName(query: string) {\n    let contacts: IHeatMessageContact[] = [];\n    let keys = this.p2pContactStore.keys()\n    keys.forEach(key => {\n      let contact = this.p2pContactStore.get(key)\n      if (contact.publicName.indexOf(query) > -1) {\n        contacts.push(contact)\n      }\n    })\n    return contacts;\n  }\n\n  shareCryptoAddress(contact: IHeatMessageContact, currency: string, value: string) {\n    let validatedCurrency = currency.toLocaleLowerCase();\n    this.heat.api.getKeystoreAccountEntry(this.user.account, `${contact.account}-${validatedCurrency}`).then(response => {\n      let parsed = utils.parseResponse(response);\n      if (parsed.errorDescription === 'Unknown key') {\n        let encrypted = heat.crypto.encryptMessage(value, contact.publicKey, this.user.secretPhrase)\n        this.heat.api.saveKeystoreEntry(`${contact.account}-${validatedCurrency}`, `${encrypted.data}-${encrypted.nonce}`, this.user.secretPhrase)\n      } else {\n        let split = parsed.value.split(\"-\");\n        let decrypted = heat.crypto.decryptMessage(split[0], split[1], contact.publicKey, this.user.secretPhrase)\n        if(decrypted == value) {\n          return\n        } else {\n          let encrypted = heat.crypto.encryptMessage(value, contact.publicKey, this.user.secretPhrase)\n          this.heat.api.saveKeystoreEntry(`${contact.account}-${validatedCurrency}`, `${encrypted.data}-${encrypted.nonce}`, this.user.secretPhrase)\n        }\n      }\n    }).catch(e => {\n      let parsed = utils.parseResponse(e);\n      if (parsed.description === 'Unknown key') {\n        let encrypted = heat.crypto.encryptMessage(value, contact.publicKey, this.user.secretPhrase)\n        this.heat.api.saveKeystoreEntry(`${contact.account}-${validatedCurrency}`, `${encrypted.data}-${encrypted.nonce}`, this.user.secretPhrase)\n      }\n    })\n  }\n\n  fetchCryptoAddress(contact: IHeatMessageContact, currency: string) {\n    let validatedCurrency = currency.toLocaleLowerCase();\n    this.heat.api.getKeystoreAccountEntry(contact.account, `${this.user.account}-${validatedCurrency}`).then(response => {\n      let parsed = utils.parseResponse(response);\n      let split = parsed.value.split(\"-\");\n      let decrypted = heat.crypto.decryptMessage(split[0], split[1], contact.publicKey, this.user.secretPhrase)\n      console.log('decrypted value: ' + decrypted)\n      this.updateContactCurrencyAddress(contact.account, currency, decrypted, contact.publicKey, contact.publicName)\n    }).catch(e => {\n      console.log(`Error getting keystore value of contact ${contact.account}-${validatedCurrency}`, e)\n    })\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nmodule p2p {\n\n  /**\n   * Room it is the way to connect peers. When two peers (client apps) will create the room object with the same name\n   * they will get the WebRTC channel between each other (if signaling happened succesfully).\n   * The room property peers may no contains entry of peer until the peer enter the room in his application.\n   */\n  export class Room {\n\n    constructor(public name: string,\n                private connector: P2PConnector,\n                private storage: StorageService,\n                private user: UserService,\n                public memberPublicKeys: string[]) {\n    }\n\n    state: {approved: boolean, entered: EnterRoomState} = {\n      approved: false,\n      entered: \"not\"\n    };\n\n    lastIncomingMessageTimestamp: number = 0;\n\n    private peers: Map<string, RTCPeer> = new Map<string, RTCPeer>();\n    private messageHistory: MessageHistory;\n\n    /**\n     * If room not exists registers the room on the server (signaling server).\n     * Registers user in the room on the server.\n     */\n    enter(enforce?: boolean) {\n      this.connector.enter(this, enforce);\n      return this;\n    }\n\n    /**\n     * Sends message to all members of room (all peers in the room).\n     * Returns count of peers to which message sent.\n     */\n    sendMessage(message: P2PMessage): number {\n      let count = this.connector.sendMessage(this.name, message);\n      if (message.type == \"chat\") {\n        let item = {timestamp: message.timestamp, fromPeer: this.user.publicKey, content: message.text};\n        this.getMessageHistory().put(item);\n        if (this.onNewMessageHistoryItem) {\n          this.onNewMessageHistoryItem(item);\n        }\n      }\n      return count;\n    }\n\n    onMessageInternal(msg: any) {\n      if (msg.type == \"chat\") {\n        let item: MessageHistoryItem = {timestamp: msg.timestamp, fromPeer: msg.fromPeerId, content: msg.text};\n        this.getMessageHistory().put(item);\n        if (this.onNewMessageHistoryItem) {\n          this.onNewMessageHistoryItem(item);\n        }\n        this.lastIncomingMessageTimestamp = Date.now();\n      }\n      if (this.onMessage) {\n        this.onMessage(msg);\n      }\n    }\n\n    onNewMessageHistoryItem: (item: MessageHistoryItem) => any;\n\n    /**\n     * On receiving message callback.\n     */\n    onMessage: (msg: {}) => any;\n\n    /**\n     * On failure callback.\n     */\n    onFailure: (peerId: string, e: any) => any;\n\n    /**\n     * On opening channel callback.\n     */\n    onOpenDataChannel: (peerId: string) => any;\n\n    /**\n     * On closing channel callback.\n     */\n    onCloseDataChannel: (peerId: string) => any;\n\n    /**\n     * Invoked when peer rejects connection to him.\n     */\n    onRejected: (byPeerId: string, reason: string) => any;\n\n    /**\n     * Invoked on offer from remote peer to establish p2p channel. Needs to resolve promise if user allows call.\n     * It is default implementation allowing all calls.\n     */\n    // confirmIncomingCall: (peerId: string) => Promise<void> = (peerId: string) => {\n    //   return Promise.resolve();\n    // };\n\n\n    getMessageHistory() {\n      if (!this.messageHistory) {\n        this.messageHistory = new MessageHistory(this, this.storage, this.user);\n      }\n      return this.messageHistory;\n    }\n\n    /**\n     * Public key is proven. Returns true if the public key owner is allowed to connect.\n     * @param room\n     * @param peerId\n     * @param publicKey\n     */\n    provenPublicKeyAllowed(room: Room, peerId: string, publicKey: any): boolean {\n      if (true /*existing public key*/)\n        return true;\n    }\n\n    getDataChannels() {\n      let dataChannels: RTCDataChannel[] = [];\n      this.peers.forEach(peer => {\n        if (peer.dataChannel) {\n          dataChannels.push(peer.dataChannel)\n        }\n      });\n      return dataChannels;\n    }\n\n    getPeer(peerId: string) {\n      return this.peers.get(peerId);\n    }\n\n    createPeer(peerId: string, publicKey: string) {\n      if (this.memberPublicKeys.indexOf(publicKey) == -1) {\n        return;  //do not create peer for not room member\n      }\n      let existingPeer = this.peers.get(peerId);\n      if (existingPeer) {\n        return existingPeer;\n      }\n      let p: RTCPeer = new RTCPeer(publicKey);\n      this.peers.set(peerId, p);\n      return p;\n    }\n\n    getAllPeers() {\n      return this.peers;\n    }\n\n  }\n\n  export interface P2PMessage {\n    timestamp: number,\n    type: \"chat\" | \"contactUpdate\" | \"\",\n    text: string\n  }\n\n  export class RTCPeer {\n    constructor(publicKey: string) {\n      this.publicKey = publicKey;\n    }\n\n    publicKey: string;\n    peerConnection: RTCPeerConnection;\n    dataChannel: RTCDataChannel;\n\n    isConnected() {\n      return this.dataChannel && this.dataChannel.readyState == \"open\"\n    }\n  }\n\n  export interface ProvingData {\n    signatureHex: string,\n    dataHex: string,\n    publicKeyHex: string\n  }\n\n}\n","///<reference path='../RenderService.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('controlCharRender')\nclass ControlCharRenderService implements IRenderer {\n  toHtml(rawText: string) : string {\n    return this.nl2br(rawText, '<br />');\n  }\n\n  nl2br (str, breakTag) {\n    // Converts newlines to HTML line breaks\n    // version: 1103.1210\n    // discuss at: http://phpjs.org/functions/nl2br\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: Philip Peterson\n    // +   improved by: Onno Marsman\n    // +   improved by: Atli Þór\n    // +   bugfixed by: Onno Marsman\n    // +      input by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: Brett Zamir (http://brett-zamir.me)\n    // +   improved by: Maximusya\n    // *     example 1: nl2br('Kevin\\nvan\\nZonneveld');\n    // *     returns 1: 'Kevin\\nvan\\nZonneveld'\n    // *     example 2: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false);\n    // *     returns 2: '<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'\n    // *     example 3: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true);\n    // *     returns 3: '\\nOne\\nTwo\\n\\nThree\\n'\n    return (str + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2');\n  }\n}","///<reference path='../RenderService.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('emojiiRender')\nclass EmojiiRenderService implements IRenderer {\n\n  // TODO implement this emoji picker https://codepen.io/needim/pen/rxKZmy\n\n  toHtml(rawText: string) : string {\n    return rawText;\n  }\n}","/// <reference path='lib/AbstractTransaction.ts'/>\n/// <reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('assetTransfer')\n@Inject('$q','user','heat')\nclass AssetTransferService extends AbstractTransaction {\n\n  constructor(public $q: angular.IQService,\n              public user: UserService,\n              public heat: HeatService) {\n    super();\n  }\n\n  dialog($event?, recipient?: string, recipientPublicKey?, asset?: string, amount?: string, userMessage?: string): IGenericDialog {\n    return new AssetTransferDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey, asset, amount, userMessage);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 2) return false;\n\n    transaction.assetId = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.quantity = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n\n   return transaction.assetId === data.AssetTransfer.assetId &&\n          transaction.quantity === data.AssetTransfer.quantity;\n  }\n}\n\nclass AssetTransferDialog extends GenericDialog {\n\n  constructor($event,\n              public transaction: AbstractTransaction,\n              public $q: angular.IQService,\n              public user: UserService,\n              public heat: HeatService,\n              public recipient: string,\n              public recipientPublicKey: string,\n              public asset: string,\n              public amount: string,\n              public userMessage: string) {\n    super($event);\n    this.dialogTitle = 'Asset Transfer';\n    this.dialogDescription = 'Description on how to transfer asset';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n    this.recipient = this.recipient || '';\n    this.asset = this.asset || '';\n    this.amount = this.amount || '0';\n    this.recipientPublicKey = this.recipientPublicKey || null;\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.account('recipient', this.recipient).\n              label('Recipient').\n              onchange(() => {\n                this.fields['recipientPublicKey'].value = null;\n                this.fields['message'].changed();\n                this.heat.api.getPublicKeyOrEmptyString(this.fields['recipient'].value).then(\n                  (publicKey) => {\n                    /* account exists but has no public key */\n                    if (publicKey == '') {\n                      $scope.$evalAsync(()=>{\n                        this.fields['recipient']['accountExists'] = true\n                        // this.fields['message'].visible(false);\n                      });\n                    }\n                    else {\n                      this.fields['recipientPublicKey'].value = publicKey;\n                      $scope.$evalAsync(()=>{\n                        this.fields['recipient']['accountExists'] = true\n                        // this.fields['message'].visible(true);\n                      });\n                    }\n                  },()=>{\n                    $scope.$evalAsync(()=>{\n                      this.fields['recipient']['accountExists'] = false\n                      // this.fields['message'].visible(false);\n                    });\n                  }\n                );\n              }).\n              required(),\n      builder.asset('asset', this.asset).\n              label('Asset').\n              onchange(() => {\n                /* when the asset changes we update the symbol and precission of the amount field */\n                var amountField = <DialogFieldMoney> this.fields['amount'];\n                var assetField = <DialogFieldAsset> this.fields['asset'];\n                var assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\n                if (assetInfo) {\n                  amountField.symbol(assetInfo.symbol);\n                  amountField.precision(assetInfo.decimals);\n                }\n                this.fields['amount'].changed();\n              }).\n              validate(\"You dont own this asset\", () => {\n                var assetField = <DialogFieldAsset> this.fields['asset'];\n                var assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\n                return !!assetInfo;\n              }).\n              required(),\n      builder.money('amount', this.amount).\n              label('Amount').\n              required().\n              precision(8).\n              symbol('').\n              asyncValidate(\"Not enough funds\", (amount) => {\n                let deferred = this.$q.defer<boolean>();\n                if (this.fields['asset'].value) {\n                  this.heat.api.getAccountBalance(this.user.account, this.fields['asset'].value).then(\n                    (balance: IHeatAccountBalance) => {\n                      try {\n                        var avail = new Big(balance.unconfirmedBalance);\n                        var total = new Big(amount);\n                        if (avail.gte(total) > 0) {\n                          deferred.resolve();\n                        }\n                        else {\n                          deferred.reject();\n                        }\n                      } catch (e) {\n                        deferred.reject();\n                      }\n                    }, deferred.reject);\n                }\n                else {\n                  deferred.resolve();\n                }\n                return deferred.promise;\n              }),\n      builder.text('message', this.userMessage).\n              rows(2).\n              // visible(false).\n              asyncValidate(\"No recipient public key\", (message) => {\n                let deferred = this.$q.defer<boolean>();\n                if (String(message).trim().length == 0) {\n                  deferred.resolve();\n                }\n                else {\n                  if (this.fields['recipientPublicKey'].value) {\n                    deferred.resolve();\n                  }\n                  else {\n                    this.heat.api.getPublicKey(this.fields['recipient'].value).then(\n                      (publicKey) => {\n                        this.fields['recipientPublicKey'].value = publicKey;\n                        deferred.resolve();\n                      },\n                      deferred.reject\n                    );\n                  }\n                }\n                return deferred.promise;\n              }).\n              label('Message'),\n      builder.hidden('recipientPublicKey', this.recipientPublicKey)\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('AssetTransfer', <IHeatCreateAssetTransfer>{\n              assetId: this.fields['asset'].value,\n              quantity: this.fields['amount'].value\n            });\n    builder.recipient(this.fields['recipient'].value);\n    builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\n    if (this.fields['message'].value) {\n      builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\n    }\n    // if (angular.isDefined(this.bundle)) {\n    //   builder.bundle(this.bundle);\n    // }\n    return builder;\n  }\n}\n","/// <reference path='lib/AbstractTransaction.ts'/>\n/// <reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface IHeatAssetWithdrawInfo {\n  /**\n   * Withdraw percentage, for instance 0.4 which means 0.4%\n   */\n  feePercentage: number;\n\n  /**\n   * Minimum quantity to withdraw, anything below this quantity will not be processed,\n   * quantity is expressed in asset QNT (sample 0.001 BTC is 100000 qnt)\n   */\n  minimumQuantity: string;\n\n  /**\n   * Free form extra info to be displayed at bottom of dialog\n   */\n  notice1: string;\n  notice2: string;\n}\n\n@Service('assetWithdraw')\n@Inject('$q','user','heat')\nclass AssetWithdrawService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService) {\n    super();\n  }\n\n  // use promise to later support fetching from server\n  getWithdrawFeeInfo(asset:string): angular.IPromise<IHeatAssetWithdrawInfo> {\n\n    // for now this will do.\n    // for now this will do.\n    let localCache = heat.isTestnet ? {} : {\n      \"5592059897546023466\": { // btc\n        feePercentage: 0.4,\n        minimumQuantity: \"40000\",\n        notice1: 'Bitcoin withdrawals are usually processed within 1 hour from request.',\n        notice2: 'Occasionally longer delays on non-banking days are possible.'\n      },\n       \"12723185826655406325\": { // nxt\n        feePercentage: 0.4,\n        minimumQuantity: \"500000000\",\n        notice1: 'NXT withdrawals are usually processed within 24 hour from requests.',\n        notice2: 'Occasionally longer delays on non-banking days are possible.'\n      },\n        \"17622812277075597103\": { // ardr\n        feePercentage: 0.4,\n        minimumQuantity: \"500000000\",\n        notice1: 'ARDOR withdrawals are usually processed within 24 hours from requests.',\n        notice2: 'Occasionally longer delays on non-banking days are possible.'\n      },\n      \"8593933499455210945\": { // fimk\n        feePercentage: 0.4,\n        minimumQuantity: \"500000000\",\n        notice1: 'FIMK withdrawals are usually processed with 1-12 hours from requests.',\n        notice2: 'Occasionally longer delays due to network issues are possible.'\n      }\n    };\n\n    let deferred = this.$q.defer<IHeatAssetWithdrawInfo>();\n    if (angular.isDefined(localCache[asset]))\n      deferred.resolve(localCache[asset]);\n    else\n      deferred.reject();\n    return deferred.promise;\n  }\n\n  // the assetInfo is the $scope.currencyInfo property in the parent component\n  dialog($event?, assetInfo?: AssetInfo, amount?: string): angular.IPromise<IGenericDialog> {\n    let deferred = this.$q.defer<IGenericDialog>();\n\n    // you can never withdraw HEAT (which has asset id 0)\n    if (assetInfo.id == \"0\")\n      deferred.reject();\n\n    // determine the asset issuer\n    this.heat.api.getAsset(assetInfo.id, \"0\", 1).then((asset) => {\n      let issuer = asset.account;\n\n      // look up the issuer public key\n      this.heat.api.getPublicKey(issuer).then((publicKey)=>{\n\n        // look up the user asset balance\n        this.heat.api.getAccountBalance(this.user.account, assetInfo.id).then((balance) => {\n\n          // look up asset withdraw info\n          this.getWithdrawFeeInfo(assetInfo.id).then((withdrawInfo) => {\n\n            // create the dialog, return through promise\n            deferred.resolve(new AssetWithdrawDialog($event, this, this.$q, this.user, this.heat, issuer, publicKey, assetInfo, withdrawInfo, amount, balance));\n\n          }, deferred.reject);\n        }, deferred.reject);\n      }, deferred.reject);\n    }, deferred.reject)\n\n    return deferred.promise;\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 2) return false;\n\n    transaction.assetId = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.quantity = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n\n   return transaction.assetId === data.AssetTransfer.assetId &&\n          transaction.quantity === data.AssetTransfer.quantity;\n  }\n}\n\nclass AssetWithdrawDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService,\n              private recipient: string,\n              private recipientPublicKey: string,\n              private assetInfo: AssetInfo,\n              private withdrawInfo: IHeatAssetWithdrawInfo,\n              private amount: string,\n              private userBalance: IHeatAccountBalance) {\n    super($event);\n    this.dialogClass = \"withdraw-asset-service\";\n    this.dialogTitle = 'Withdraw ' + this.assetInfo.symbol;\n    this.dialogDescription = 'Description on how to withdraw ' + this.assetInfo.symbol;\n    this.okBtnTitle = 'WITHDRAW';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n    this.amount = this.userBalance.unconfirmedBalance || this.amount || '0';\n  }\n\n  /* @override */\n  fieldsReady($scope: angular.IScope) {\n    let minFeeFloat = parseFloat(this.withdrawInfo.minimumQuantity+'');\n    let amountFloat = parseFloat(this.userBalance.unconfirmedBalance+'');\n    if (amountFloat > minFeeFloat) {\n      $scope.$evalAsync(()=>{\n        this.updateTotalAmountQNT(amountFloat, minFeeFloat);\n      });\n    }\n    this.fields['amount'].changed(true);\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    let balance = utils.formatQNT(this.userBalance.balance, this.userBalance.decimals)\n    let userBalanceText = `${balance} ${this.assetInfo.symbol} available on account`;\n    let feeText = `Processing and network fee ${this.withdrawInfo.feePercentage.toFixed(2)}% (${this.assetInfo.symbol})`;\n    let minAmountFormatted = utils.formatQNT(this.withdrawInfo.minimumQuantity, 8);\n    let minWithdrawText = `Minimum withdraw fee is ${minAmountFormatted} ${this.assetInfo.symbol}`;\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      // builder.staticText('balance', userBalanceText),\n      builder.hidden('recipient', this.recipient)\n             .required(),\n      builder.text('message', '')\n             .visible(true)\n             .label(`Recipient ${this.assetInfo.symbol} address`)\n             .required(),\n      builder.hidden('asset', this.assetInfo.id)\n             .required(),\n      builder.money('amount', this.amount)\n             .label('Amount')\n             .required()\n             .precision(this.assetInfo.decimals)\n             .symbol(this.assetInfo.symbol).\n              asyncValidate(\"Not enough funds\", (amount) => {\n                let deferred = this.$q.defer<boolean>();\n                if (this.fields['asset'].value) {\n                  this.heat.api.getAccountBalance(this.user.account, this.fields['asset'].value).then(\n                    (balance: IHeatAccountBalance) => {\n                      try {\n                        var avail = new Big(balance.unconfirmedBalance);\n                        var total = new Big(amount);\n                        if (avail.gte(total) > 0) {\n                          deferred.resolve();\n                        }\n                        else {\n                          deferred.reject();\n                        }\n                      } catch (e) {\n                        deferred.reject();\n                      }\n                    }, deferred.reject);\n                }\n                else {\n                  deferred.resolve();\n                }\n                return deferred.promise;\n              }).\n              validate(`Minimum amount is ${minAmountFormatted} ${this.assetInfo.symbol}`, (amount) => {\n                return parseInt(amount) > parseInt(this.withdrawInfo.minimumQuantity);\n              }).\n              onchange(() => {\n                let amountQNT = parseFloat(this.fields['amount'].value || '0');\n                this.updateTotalAmountQNT(amountQNT, parseFloat(this.withdrawInfo.minimumQuantity));\n\n                // if (amountQNT <= 0) {\n                //   this.fields['youWillReceive'].value = '';\n                //   this.fields['totalFeeText'].value = '';\n                // }\n                // else {\n                //   let multiplier = 1.0 - (this.withdrawInfo.feePercentage / 100);\n                //   let received = Math.round(amountQNT * multiplier);\n                //   let totalFee = amountQNT - received;\n                //   this.fields['youWillReceive'].value = utils.formatQNT(received+'', 8);\n                //   this.fields['totalFeeText'].value = `Total fee ${utils.formatQNT(totalFee+'', 8)} ${this.assetInfo.symbol}`;\n                // }\n              }),\n      builder.hidden('recipientPublicKey', this.recipientPublicKey),\n      builder.text('youWillReceive', '0')\n             .label('You will receive')\n             .readonly(true),\n      builder.staticText('feeText', feeText),\n      builder.staticText('totalFeeText', 'Total fee: '),\n      builder.staticText('minWithdrawText', minWithdrawText),\n      builder.staticText('withdrawalNotice1', this.withdrawInfo.notice1),\n      builder.staticText('withdrawalNotice2', this.withdrawInfo.notice2)\n    ]\n  }\n\n  updateTotalAmountQNT(amountFloat: number, minFeeFloat: number) {\n    if (amountFloat <= 0) {\n      this.fields['youWillReceive'].value = '0';\n      this.fields['totalFeeText'].value = `Total fee ${utils.formatQNT(Math.round(minFeeFloat)+'', 8)} ${this.assetInfo.symbol}`;\n    }\n    else {\n      let multiplier = 1.0 - (this.withdrawInfo.feePercentage / 100);\n      let received = Math.round(amountFloat * multiplier);\n      let totalFee = amountFloat - received;\n      if (totalFee < minFeeFloat) {\n        totalFee = minFeeFloat;\n        received = Math.round(amountFloat - minFeeFloat);\n      }\n      this.fields['youWillReceive'].value = received < 0 ? '0' : utils.formatQNT(received+'', 8);\n      this.fields['totalFeeText'].value = `Total fee ${utils.formatQNT(totalFee+'', 8)} ${this.assetInfo.symbol}`;\n    }\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('AssetTransfer', <IHeatCreateAssetTransfer>{\n              assetId: this.fields['asset'].value,\n              quantity: this.fields['amount'].value\n            });\n    builder.recipient(this.fields['recipient'].value);\n    builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\n    if (this.fields['message'].value) {\n      builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\n    }\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('balanceLease')\n@Inject('$q','user')\nclass BalanceLeaseService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService) {\n    super();\n  }\n\n  dialog(period: number, recipient: string, $event?): IGenericDialog {\n    return new BalanceLeaseDialog($event, this, this.$q, this.user, this.heat, period, recipient);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 4) return false;\n    if (transaction.subtype !== 0) return false;\n\n    transaction.period = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\n    bytes.pos += 4;\n\n    return transaction.period === data.EffectiveBalanceLeasing.period;\n  }\n}\n\nclass BalanceLeaseDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService,\n              private period: number,\n              private recipient: string) {\n    super($event);\n    this.dialogTitle = 'Balance Lease';\n    this.dialogDescription = 'Description on how to lease balance';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.account('recipient', this.recipient).\n              label('Recipient').\n              required(),\n      builder.text('period', this.period).\n              label('Period (number of blocks)').\n              required()\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .recipient(this.fields['recipient'].value)\n           .attachment('EffectiveBalanceLeasing', <IHeatCreateEffectiveBalanceLeasing>{\n              period: parseInt(this.fields['period'].value)\n           });\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('cancelAskOrder')\n@Inject('$q','user')\nclass CancelAskOrderService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService) {\n    super();\n  }\n\n  dialog(order: string, readonly?: boolean, $event?): IGenericDialog {\n    return new CancelAskOrderDialog($event, this, this.$q, this.user, order, readonly);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 5) return false;\n\n    transaction.order = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n\n    return transaction.order === data.AskOrderCancellation.orderId;\n  }\n}\n\nclass CancelAskOrderDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private order: string,\n              private readonly: boolean) {\n    super($event);\n    this.dialogTitle = 'Cancel ask order';\n    this.dialogDescription = 'Description on how to cancel ask order';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.text('order', this.order).\n              label('Order').\n              required().\n              readonly(this.readonly)\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('AskOrderCancellation', <IHeatCreateAskOrderCancellation>{\n              orderId: this.fields['order'].value\n            });\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('cancelBidOrder')\n@Inject('$q','user')\nclass CancelBidOrderService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService) {\n    super();\n  }\n\n  dialog(order: string, readonly?: boolean, $event?): IGenericDialog {\n    return new CancelBidOrderDialog($event, this, this.$q, this.user, order, readonly);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 6) return false;\n\n    transaction.order = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n\n    return transaction.order === data.BidOrderCancellation.orderId;\n  }\n}\n\nclass CancelBidOrderDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private order: string,\n              private readonly: boolean) {\n    super($event);\n    this.dialogTitle = 'Cancel bid order';\n    this.dialogDescription = 'Description on how to cancel bid order';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.text('order', this.order).\n              label('Order').\n              required().\n              readonly(this.readonly)\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('BidOrderCancellation', <IHeatCreateBidOrderCancellation>{\n              orderId: this.fields['order'].value\n            });\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('masternode')\n@Inject('$q', 'user')\nclass MasternodeService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService) {\n    super();\n  }\n\n  dialog($event?): IGenericDialog {\n    return new RegisterInternetAddressDialog($event, this, this.$q, this.user, this.heat, \"\");\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (!AbstractTransaction.checkType(transaction, 4, 1)) return false;\n\n    let len = bytes.byteArray[bytes.pos];\n    bytes.pos += 1;\n\n    transaction.internetAddress = converters.byteArrayToString(bytes.byteArray, bytes.pos, len);\n    bytes.pos += len;\n\n    return transaction.internetAddress === data.InternetAddress.internetAddress;\n  }\n}\n\nclass RegisterInternetAddressDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService,\n              private internetAddress: string) {\n    super($event);\n    this.dialogTitle = 'Register Masternode Address';\n    this.dialogDescription = 'Register Internet Address to be Masternode';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.registerInternetAddressFee, 8).replace(/000000$/, '');\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder\n        .text('internetAddress', this.internetAddress)\n        .label('IP address or domain name')\n        .required(),\n      builder.staticText('note1', \"MASTERNODE REGISTRATION WILL BECOME AVAILABLE AT BLOCK 2700000 (approx. 2019-08-10)\"),\n      builder.staticText('note2', \"Minimum stake for Masternode to receive POP reward at block generation is 1000 HEAT\"),\n      builder.staticText('feeText', \"NOTICE: Masternode registration will expire after 311040  blocks (~90 days). To keep receiving POP rewards you will need to re-register at that time\"),\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n      .recipient(this.user.account)\n      .feeNQT(HeatAPI.fee.registerInternetAddressFee)\n      .attachment('InternetAddress', <IHeatRegisterInternetAddress>{\n        internetAddress: this.fields['internetAddress'].value\n      });\n    return builder;\n  }\n\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('placeAskOrder')\n@Inject('$q','user')\nclass PlaceAskOrderService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService) {\n    super();\n  }\n\n  dialog(currencyInfo: AssetInfo, assetInfo: AssetInfo, price?: string, quantity?: string, expiration?: number,\n            readonly?: boolean, $event?): IGenericDialog {\n    return new PlaceAskOrderDialog($event, this, this.$q, this.user,\n                    currencyInfo, assetInfo, price, quantity, expiration, readonly);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 3) return false;\n\n    transaction.currency = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.asset = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.quantity = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.price = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.expiration = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\n    bytes.pos += 4;\n\n    return transaction.currency === data.AskOrderPlacement.currencyId &&\n           transaction.asset === data.AskOrderPlacement.assetId &&\n           transaction.quantity === data.AskOrderPlacement.quantity &&\n           transaction.price === data.AskOrderPlacement.price &&\n           transaction.expiration === data.AskOrderPlacement.expiration;\n  }\n}\n\nclass PlaceAskOrderDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private currencyInfo: AssetInfo,\n              private assetInfo: AssetInfo,\n              private price: string,\n              private quantity: string,\n              private expiration: number,\n              private readonly: boolean) {\n    super($event);\n    this.dialogTitle = 'Place ask order';\n    this.dialogDescription = 'Description on how to place ask order';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.text('currency', this.currencyInfo.id).\n              label('Currency').\n              required().\n              readonly(this.readonly),\n      builder.text('asset', this.assetInfo.id).\n              label('Asset').\n              required().\n              readonly(this.readonly),\n      builder.text('price', this.price).\n              label('Price').\n              required().\n              readonly(this.readonly),\n      builder.text('quantity', this.quantity).\n              label('Amount').\n              required().\n              readonly(this.readonly),\n      builder.text('expiration', this.expiration).\n              label('Expiration').\n              required().\n              readonly(this.readonly)\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('AskOrderPlacement', <IHeatCreateAskOrderPlacement>{\n              currencyId: this.fields['currency'].value,\n              assetId: this.fields['asset'].value,\n              price: utils.convertToQNT(this.fields['price'].value),\n              quantity: utils.convertToQNT(this.fields['quantity'].value),\n              expiration: this.fields['expiration'].value\n            });\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('placeBidOrder')\n@Inject('$q','user')\nclass PlaceBidOrderService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService) {\n    super();\n  }\n\n  dialog(currencyInfo: AssetInfo, assetInfo: AssetInfo, price?: string, quantity?: string, expiration?: number,\n            readonly?: boolean, $event?): IGenericDialog {\n    return new PlaceBidOrderDialog($event, this, this.$q, this.user,\n                    currencyInfo, assetInfo, price, quantity, expiration, readonly);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 4) return false;\n\n    transaction.currency = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.asset = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.quantity = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.price = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.expiration = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\n    bytes.pos += 4;\n\n    return transaction.currency === data.BidOrderPlacement.currencyId &&\n           transaction.asset === data.BidOrderPlacement.assetId &&\n           transaction.quantity === data.BidOrderPlacement.quantity &&\n           transaction.price === data.BidOrderPlacement.price &&\n           transaction.expiration === data.BidOrderPlacement.expiration;\n  }\n}\n\nclass PlaceBidOrderDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private currencyInfo: AssetInfo,\n              private assetInfo: AssetInfo,\n              private price: string,\n              private quantity: string,\n              private expiration: number,\n              private readonly: boolean) {\n    super($event);\n    this.dialogTitle = 'Place bid order';\n    this.dialogDescription = 'Description on how to place bid order';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.text('currency', this.currencyInfo.id).\n              label('Currency').\n              required().\n              readonly(this.readonly),\n      builder.text('asset', this.assetInfo.id).\n              label('Asset').\n              required().\n              readonly(this.readonly),\n      builder.text('price', this.price).\n              label('Price').\n              required().\n              readonly(this.readonly),\n      builder.text('quantity', this.quantity).\n              label('Amount').\n              required().\n              readonly(this.readonly),\n      builder.text('expiration', this.expiration).\n              label('Expiration').\n              required().\n              readonly(this.readonly)\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('BidOrderPlacement', <IHeatCreateBidOrderPlacement>{\n              currencyId: this.fields['currency'].value,\n              assetId: this.fields['asset'].value,\n              price: utils.convertToQNT(this.fields['price'].value),\n              quantity: utils.convertToQNT(this.fields['quantity'].value),\n              expiration: this.fields['expiration'].value\n            });\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('sendmessage')\n@Inject('$q','user','heat')\nclass SendmessageService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService) {\n    super();\n  }\n\n  dialog($event?, recipient?: string, recipientPublicKey?: string, userMessage?: string): IGenericDialog {\n    return new SendmessageDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey, userMessage);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition): boolean {\n    return transaction.type === 1 && transaction.subtype === 0;\n  }\n}\nclass SendmessageDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService,\n              private recipient: string,\n              private recipientPublicKey: string,\n              private userMessage: string) {\n    super($event);\n    this.dialogTitle = 'Send Message';\n    this.dialogDescription = 'Description on how to send message';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\n    this.recipient = this.recipient || '';\n    this.recipientPublicKey = this.recipientPublicKey || null;\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.account('recipient', this.recipient).\n              label('Recipient').\n              onchange(() => {\n                this.fields['recipientPublicKey'].value = null;\n                this.fields['message'].changed();\n                this.heat.api.getPublicKey(this.fields['recipient'].value).then(\n                  (publicKey) => {\n                    this.fields['recipientPublicKey'].value = publicKey;\n                    $scope.$evalAsync(()=>{\n                      this.fields['recipient']['accountExists'] = true\n                      // this.fields['message'].visible(true);\n                      this.fields['messagWarning'].visible(false);\n                    });\n                  },()=>{\n                    $scope.$evalAsync(()=>{\n                      this.fields['recipient']['accountExists'] = false\n                      // this.fields['message'].visible(false);\n                      this.fields['messagWarning'].visible(true);\n                    });\n                  }\n                );\n              }).\n              required(),\n      builder.staticText('messagWarning', 'Message field will be visible only if the receiver account is known by the HEAT p2p network.')\n             .visible(true),\n      builder.text('message', this.userMessage).\n              rows(2).\n              // visible(false).\n              asyncValidate(\"No recipient public key\", (message) => {\n                let deferred = this.$q.defer<boolean>();\n                if (String(message).trim().length == 0) {\n                  deferred.resolve();\n                }\n                else {\n                  if (this.fields['recipientPublicKey'].value) {\n                    deferred.resolve();\n                  }\n                  else {\n                    this.heat.api.getPublicKey(this.fields['recipient'].value).then(\n                      (publicKey) => {\n                        this.fields['recipientPublicKey'].value = publicKey;\n                        deferred.resolve();\n                      },\n                      deferred.reject\n                    );\n                  }\n                }\n                return deferred.promise;\n              }).\n              label('Message'),\n      builder.hidden('recipientPublicKey', this.recipientPublicKey)\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.standard)\n           .attachment('ArbitraryMessage', <IHeatCreateArbitraryMessage>{\n            });\n    builder.recipient(this.fields['recipient'].value);\n    builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\n    if (this.fields['message'].value) {\n      builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\n    }\n    // if (angular.isDefined(this.bundle)) {\n    //   builder.bundle(this.bundle);\n    // }\n    return builder;\n  }\n}\n","///<reference path='lib/AbstractTransaction.ts'/>\n///<reference path='lib/GenericDialog.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Service('whitelistMarket')\n@Inject('$q','user','heat')\nclass WhitelistMarketService extends AbstractTransaction {\n\n  constructor(private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService) {\n    super();\n  }\n\n  dialog($event?, recipient?: string, recipientPublicKey?): IGenericDialog {\n    return new WhitelistMarketferDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey);\n  }\n\n  verify(transaction: any, bytes: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\n    if (transaction.type !== 2) return false;\n    if (transaction.subtype !== 9) return false;\n\n    transaction.currencyId = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n    transaction.assetId = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\n    bytes.pos += 8;\n\n   return transaction.currencyId === data.WhitelistMarket.currencyId &&\n          transaction.assetId === data.WhitelistMarket.assetId;\n  }\n}\n\nclass WhitelistMarketferDialog extends GenericDialog {\n\n  constructor($event,\n              private transaction: AbstractTransaction,\n              private $q: angular.IQService,\n              private user: UserService,\n              private heat: HeatService,\n              private recipient: string,\n              private recipientPublicKey: string) {\n    super($event);\n    this.dialogTitle = 'Whitelist Market';\n    this.dialogDescription = 'Description on how to whitelist a market';\n    this.okBtnTitle = 'SEND';\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.whitelistMarket, 8).replace(/000000$/,'');\n    this.recipient = this.recipient || '';\n    this.recipientPublicKey = this.recipientPublicKey || null;\n  }\n\n  /* @override */\n  getFields($scope: angular.IScope) {\n    var builder = new DialogFieldBuilder($scope);\n    return [\n      builder.asset('asset').\n              label('Your asset').\n              validate(\"You dont own this asset\", (value) => {\n                if (value == \"0\")\n                  return true;\n                var assetField = <DialogFieldAsset> this.fields['asset'];\n                var assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\n                return !!assetInfo;\n              }).\n              required(),\n      builder.asset('currency').\n              label('Allow market').\n              searchAllAssets(true).\n              required(),\n    ]\n  }\n\n  /* @override */\n  getTransactionBuilder(): TransactionBuilder {\n    var builder = new TransactionBuilder(this.transaction);\n    builder.secretPhrase(this.user.secretPhrase)\n           .feeNQT(HeatAPI.fee.whitelistMarket)\n           .attachment('WhitelistMarket', <IHeatCreateWhitelistMarket>{\n              assetId: this.fields['asset'].value,\n              currencyId: this.fields['currency'].value\n            });\n    return builder;\n  }\n\n\n}\n","@RouteConfig('/ardor-account/:account')\n@Component({\n  selector: 'ardorAccount',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Address:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/ardor-account/{{vm.account}}\">{{vm.account}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\n            </div>\n            <div class=\"value\">\n              {{vm.balanceUnconfirmed}} ARDR\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              ARDOR Server:\n            </div>\n            <div class=\"value\">\n              <md-select class=\"md-select-ws\" ng-model=\"vm.selectSocketEndPoint\" ng-change=\"vm.changeSocketAddress()\">\n                <md-option ng-repeat=\"socket in vm.sockets\" value=\"{{socket.name}}\">{{socket.name}}</md-option>\n              </md-select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div flex layout=\"column\">\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\n          <md-list flex layout-fill layout=\"column\">\n            <md-list-item class=\"header\">\n              <div class=\"truncate-col date-col left\">Time</div>\n              <div class=\"truncate-col id-col left\">Status</div>\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\n            </md-list-item>\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\n              <div class=\"truncate-col id-col left\">\n                Pending&nbsp;<elipses-loading></elipses-loading>\n              </div>\n              <div class=\"truncate-col info-col left\" flex>\n                <span>{{item.txId}}</span>\n              </div>\n            </md-list-item>\n          </md-list>\n          <p></p>\n        </div>\n        <virtual-repeat-ardor-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-ardor-transactions>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope', 'ardorBlockExplorerService', 'ardorPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\nclass ArdorAccountComponent {\n  account: string; // @input\n  balanceUnconfirmed: any;\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string, fullHash: string }> = []\n  prevIndex = 0\n  busy = true\n  sockets: any;\n\n  constructor(private $scope: angular.IScope,\n              private ardorBlockExplorerService: ArdorBlockExplorerService,\n              private ardorPendingTransactions: ArdorPendingTransactionsService,\n              private $interval: angular.IIntervalService,\n              private $mdToast: angular.material.IToastService,\n              private settings: SettingsService,\n              private user: UserService) {\n\n    this.refresh();\n\n    let listener = this.updatePendingTransactions.bind(this)\n    ardorPendingTransactions.addListener(listener)\n    this.updatePendingTransactions()\n\n    let promise = $interval(this.timerHandler.bind(this), 30000)\n    this.timerHandler()\n\n    $scope.$on('$destroy', () => {\n      ardorPendingTransactions.removeListener(listener)\n      $interval.cancel(promise)\n    })\n\n    this.sockets = [\n      {\n        name: 'HEAT_Ardr_node',\n        socketUrl: 'https://bitnode.heatwallet.com:27876/'\n      },\n      {\n        name: 'Localhost',\n        socketUrl: 'http://localhost:27876/'\n      }\n    ]\n\n    this.$scope['vm'].selectSocketEndPoint = this.sockets.find(w => this.ardorBlockExplorerService.getSocketUrl() == w.socketUrl).name\n  }\n\n  changeSocketAddress() {\n    let ret = this.sockets.find(w => this.$scope['vm'].selectSocketEndPoint == w.name)\n    this.ardorBlockExplorerService.setUrl(ret.socketUrl)\n  }\n\n  timerHandler() {\n    this.refresh()\n    if (this.pendingTransactions.length) {\n      this.prevIndex += 1\n      if (this.prevIndex >= this.pendingTransactions.length) {\n        this.prevIndex = 0\n      }\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\n      this.ardorBlockExplorerService.getTransactionStatus(pendingTxn.fullHash).then(\n        data => {\n          if (data.confirmations) {\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\n            this.ardorPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time, pendingTxn.fullHash)\n          }\n        },\n        err => {\n          console.log('Transaction not found', err)\n        }\n      )\n    }\n  }\n\n  updatePendingTransactions() {\n    this.$scope.$evalAsync(() => {\n      this.pendingTransactions = []\n      let addr = this.user.currency.address\n      let txns = this.ardorPendingTransactions.pending[addr]\n      if (txns) {\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n        txns.forEach(tx => {\n          this.pendingTransactions.push({\n            date: dateFormat(new Date(tx.time), format),\n            time: tx.time,\n            txId: tx.txId,\n            address: addr,\n            fullHash: tx.fullHash\n          })\n        })\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\n      }\n    })\n  }\n\n  refresh() {\n    this.busy = true;\n    this.balanceUnconfirmed = \"\";\n    this.ardorBlockExplorerService.getBalance(this.account).then(info => {\n      this.$scope.$evalAsync(() => {\n        this.balanceUnconfirmed = new Big(utils.convertToQNTf(info)).toFixed(8);\n        this.busy = false;\n      })\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/bitcoin-account/:account')\n@Component({\n  selector: 'bitcoinAccount',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Address:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/bitcoin-account/{{vm.account}}\">{{vm.account}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\n            </div>\n            <div class=\"value\">\n              {{vm.balanceUnconfirmed}} BTC\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div flex layout=\"column\">\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\n          <md-list flex layout-fill layout=\"column\">\n            <md-list-item class=\"header\">\n              <div class=\"truncate-col date-col left\">Time</div>\n              <div class=\"truncate-col id-col left\">Status</div>\n              <div class=\"truncate-col tx-col left\" flex>Transaction Id</div>\n            </md-list-item>\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\n              <div class=\"truncate-col id-col left\">\n                Pending&nbsp;<elipses-loading></elipses-loading>\n              </div>\n              <div class=\"truncate-col tx-col left\" flex>\n                <a target=\"_blank\" href=\"https://live.blockcypher.com/btc/tx/{{item.txId}}\">{{item.txId}}</a>\n              </div>\n            </md-list-item>\n          </md-list>\n          <p></p>\n        </div>\n        <virtual-repeat-btc-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-btc-transactions>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope', 'btcBlockExplorerService', 'bitcoinPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\nclass BitcoinAccountComponent {\n  account: string; // @input\n  balanceUnconfirmed: any;\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\n  prevIndex = 0\n  busy = true\n\n  constructor(private $scope: angular.IScope,\n    private btcBlockExplorerService: BtcBlockExplorerService,\n    private bitcoinPendingTransactions: BitcoinPendingTransactionsService,\n    private $interval: angular.IIntervalService,\n    private $mdToast: angular.material.IToastService,\n    private settings: SettingsService,\n    private user: UserService) {\n\n    this.refresh();\n\n    let listener = this.updatePendingTransactions.bind(this)\n    bitcoinPendingTransactions.addListener(listener)\n    this.updatePendingTransactions()\n\n    let promise = $interval(this.timerHandler.bind(this), 30000)\n    this.timerHandler()\n\n    $scope.$on('$destroy', () => {\n      bitcoinPendingTransactions.removeListener(listener)\n      $interval.cancel(promise)\n    })\n  }\n\n  timerHandler() {\n    this.refresh()\n    if (this.pendingTransactions.length) {\n      this.prevIndex += 1\n      if (this.prevIndex >= this.pendingTransactions.length) {\n        this.prevIndex = 0\n      }\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\n      this.btcBlockExplorerService.getTxInfo(pendingTxn.txId).then(\n        data => {\n          if (data.blockheight !== -1) {\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\n            this.bitcoinPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time)\n          }\n        },\n        err => {\n          console.log('Transaction not found', err)\n        }\n      )\n    }\n  }\n\n  updatePendingTransactions() {\n    this.$scope.$evalAsync(() => {\n      this.pendingTransactions = []\n      let addr = this.user.currency.address\n      let txns = this.bitcoinPendingTransactions.pending[addr]\n      if (txns) {\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n        txns.forEach(tx => {\n          this.pendingTransactions.push({\n            date: dateFormat(new Date(tx.time), format),\n            time: tx.time,\n            txId: tx.txId,\n            address: addr\n          })\n        })\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\n      }\n    })\n  }\n\n  refresh() {\n    this.busy = true;\n    this.balanceUnconfirmed = \"\";\n    this.btcBlockExplorerService.getBalance(this.account).then(info => {\n      this.$scope.$evalAsync(() => {\n        this.balanceUnconfirmed = new Big(info / 100000000).toFixed(8);\n        this.busy = false;\n      })\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/ethereum-account/:account')\n@Component({\n  selector: 'ethereumAccount',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Address:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/ethereum-account/{{vm.account}}\">{{vm.account}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Balance:\n            </div>\n            <div class=\"value\">\n              {{vm.balanceUnconfirmed}} ETH\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\" flex>\n          <div class=\"col-item\" flex layout-fill>\n            <div class=\"title\">\n              ERC-20 Tokens:\n            </div>\n            <div class=\"scrollable\">\n              <div class=\"value\" ng-repeat=\"item in vm.erc20Tokens\">\n                <span class=\"balance\">{{item.balance}}</span>\n                <span class=\"symbol\"><b>{{item.symbol}}</b></span>\n                <span class=\"balance\">Token: {{item.name}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div flex layout=\"column\">\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\n          <md-list flex layout-fill layout=\"column\">\n            <md-list-item class=\"header\">\n              <div class=\"truncate-col date-col left\">Time</div>\n              <div class=\"truncate-col id-col left\">Status</div>\n              <div class=\"truncate-col info-col left\" flex>Transaction Hash</div>\n            </md-list-item>\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\n              <div class=\"truncate-col id-col left\">\n                Pending&nbsp;<elipses-loading></elipses-loading>\n              </div>\n              <div class=\"truncate-col info-col left\" flex>\n                <a target=\"_blank\" href=\"https://ethplorer.io/tx/{{item.txHash}}\">{{item.txHash}}</a>\n              </div>\n            </md-list-item>\n          </md-list>\n          <p></p>\n        </div>\n        <virtual-repeat-eth-transactions layout=\"column\" flex layout-fill account=\"vm.account\" personalize=\"vm.personalize\"></virtual-repeat-eth-transactions>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','web3','assetInfo','$q','user','ethplorer',\n  'ethereumPendingTransactions','settings','$interval','$mdToast')\nclass EthereumAccountComponent {\n  account: string; // @input\n\n  balanceUnconfirmed: string;\n  erc20Tokens: Array<{balance:string, symbol:string, name:string, id:string}> = [];\n  personalize: boolean\n\n  pendingTransactions: Array<{date:string, txHash:string, timestamp:number, address:string}> = []\n  prevIndex = 0\n\n  constructor(private $scope: angular.IScope,\n              private web3: Web3Service,\n              private assetInfo: AssetInfoService,\n              private $q: angular.IQService,\n              private user: UserService,\n              private ethplorer: EthplorerService,\n              private ethereumPendingTransactions: EthereumPendingTransactionsService,\n              private settings: SettingsService,\n              private $interval: angular.IIntervalService,\n              private $mdToast: angular.material.IToastService) {\n    this.personalize = this.account == this.user.currency.address\n    this.refresh();\n\n    // TODO register some refresh interval\n    // this.refresh();\n\n    let listener = this.updatePendingTransactions.bind(this)\n    ethereumPendingTransactions.addListener(listener)\n    this.updatePendingTransactions()\n\n    let promise = $interval(this.timerHandler.bind(this), 20000)\n    this.timerHandler()\n\n    $scope.$on('$destroy', () => {\n      ethereumPendingTransactions.removeListener(listener)\n      $interval.cancel(promise)\n    })\n  }\n\n  /* Continueous timer that polls for one pending txn every 20 seconds,\n      in case there is more than one txn pending we test one other\n      each iteration */\n  timerHandler() {\n    this.refresh()\n    if (this.pendingTransactions.length) {\n      this.prevIndex += 1\n      if (this.prevIndex>=this.pendingTransactions.length) {\n        this.prevIndex = 0\n      }\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\n      this.ethplorer.getTxInfo(pendingTxn.txHash).then(\n        data => {\n          this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with hash ${pendingTxn.txHash} found`).hideDelay(2000));\n          this.ethereumPendingTransactions.remove(pendingTxn.address, pendingTxn.txHash, pendingTxn.timestamp)\n        },\n        err => {\n          console.log('Transaction not found', err)\n        }\n      )\n    }\n  }\n\n  updatePendingTransactions() {\n    this.$scope.$evalAsync(() => {\n      this.pendingTransactions = []\n      let addr = this.user.currency.address\n      let txns = this.ethereumPendingTransactions.pending[addr]\n      if (txns) {\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n        txns.forEach(tx => {\n          this.pendingTransactions.push({\n            date: dateFormat(new Date(tx.timestamp), format),\n            timestamp: tx.timestamp,\n            txHash: tx.txHash,\n            address: addr\n          })\n        })\n        this.pendingTransactions.sort((a,b) => b.timestamp-a.timestamp)\n      }\n    })\n  }\n\n  refresh() {\n    this.balanceUnconfirmed = \"*\";\n    this.ethplorer.getAddressInfo(this.account).then(info => {\n      this.$scope.$evalAsync(()=>{\n        this.balanceUnconfirmed = new Big(info.ETH.balance).toFixed(18);\n        if (info.tokens) {\n          this.erc20Tokens = info.tokens.map(token => {\n            let tokenInfo = this.ethplorer.tokenInfoCache[token.tokenInfo.address]\n            return {\n              balance: utils.formatQNT(new Big(token.balance+\"\").toFixed(), tokenInfo?tokenInfo.decimals:18),\n              symbol: token.tokenInfo.symbol,\n              name: token.tokenInfo.name,\n              id: ''\n            }\n          })\n        }\n      })\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('rewardsProviderFactory')\n@Inject('heat','$q')\nclass RewardsProviderFactory  {\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\n\n  public createProvider(): IPaginatedDataProvider {\n    return new RewardsProvider(this.heat, this.$q);\n  }\n}\n\nclass RewardsProvider implements IPaginatedDataProvider {\n  constructor(private heat: HeatService,\n              private $q: angular.IQService) {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    return this.heat.api.rewardsListCount()\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatRewardsInfo>> {\n    return this.heat.api.rewardsList(firstIndex, lastIndex);\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('searchAccountsProviderFactory')\n@Inject('heat','$q')\nclass SearchAccountsProviderFactory  {\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\n\n  public createProvider(query: string): IPaginatedDataProvider {\n    return new SearchAccountsProvider(this.heat, this.$q, query);\n  }\n}\n\nclass SearchAccountsProvider implements IPaginatedDataProvider {\n  constructor(private heat: HeatService,\n              private $q: angular.IQService,\n              private query: string) {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    return this.heat.api.searchAccountsCount(this.query);\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatAccount>> {\n    return this.heat.api.searchAccounts(this.query, firstIndex, lastIndex);\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/explorer-account/:account/:type')\n@Component({\n  selector: 'explorerAccount',\n  inputs: ['account','type'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <explorer-search layout=\"column\" type=\"''\" query=\"''\"></explorer-search>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Account:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/explorer-account/{{vm.account}}/{{vm.type}}\">{{vm.accountName||vm.account}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Numeric account id:\n            </div>\n            <div class=\"value\">\n              {{vm.account}}\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Balance:\n            </div>\n            <div class=\"value\">\n              {{vm.balanceUnconfirmed}} HEAT\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Effective bal:\n            </div>\n            <div class=\"value\">\n              {{vm.effectiveBalance}} HEAT\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Lease: [{{vm.leaseTitle}}]\n            </div>\n            <div class=\"value\">\n              <span ng-if=\"vm.currentLessee=='0'\">None</span>\n              <span ng-if=\"vm.currentLessee!='0'\">\n                <a href=\"#/explorer-account/{{vm.currentLessee}}/{{vm.type}}\">{{vm.currentLesseeName}}</a>\n              </span>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Next lease: [{{vm.nextLeaseTitle}}]\n            </div>\n            <div class=\"value\">\n              <span ng-if=\"vm.nextLessee=='0'\">None</span>\n              <span ng-if=\"vm.nextLessee!='0'\">\n                <a href=\"#/explorer-account/{{vm.nextLessee}}/{{vm.type}}\">{{vm.nextLesseeName}}</a>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\" flex>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Total rewards:\n            </div>\n            <div class=\"value\">\n              {{vm.totalRewards}}\n            </div>\n          </div>\n          <div class=\"col-item\" flex layout-fill>\n            <div class=\"title\">\n              Assets:\n            </div>\n            <div class=\"scrollable\">\n              <div class=\"value\" ng-repeat=\"item in vm.assetInfos\">\n                <span class=\"balance\">{{item.balance}}</span>\n                <span class=\"symbol\"><b>{{item.symbol}}</b></span>\n                <span class=\"name\">\n                  <a ng-click=\"vm.showDescription($event, item)\">{{item.name}}</a>\n                </span>\n                <span class=\"issuer\">\n                  Issued by: <a href=\"#/explorer-account/{{item.issuer}}/{{vm.type}}\">{{item.issuerPublicName||item.issuer}}</a>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div layout=\"row\" layout-align=\"start center\" class=\"type-row\">\n        <md-button ng-class=\"{'active':vm.type=='accounts'}\"\n          ng-disabled=\"vm.type=='transactions'\"\n          ng-href=\"#/explorer-account/{{vm.account}}/transactions\">Transactions</md-button>\n        <md-button ng-class=\"{'active':vm.type=='blocks'}\"\n          ng-disabled=\"vm.type=='blocks'\"\n          ng-href=\"#/explorer-account/{{vm.account}}/blocks\">Blocks</md-button>\n        <md-button ng-class=\"{'active':vm.type=='lessors'}\"\n          ng-disabled=\"vm.type=='lessors'\"\n          ng-href=\"#/explorer-account/{{vm.account}}/lessors\">Lessors</md-button>\n        <md-button ng-class=\"{'active':vm.type=='trades'}\"\n          ng-disabled=\"vm.type=='trades'\"\n          ng-href=\"#/explorer-account/{{vm.account}}/trades\">Trades</md-button>\n        <span flex></span>\n        <md-button ng-click=\"vm.csv($event)\">Download CSV</md-button>\n      </div>\n      <div ng-if=\"vm.type=='transactions'\" flex layout=\"column\">\n        <virtual-repeat-transactions hide-label=\"true\" layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-transactions>\n      </div>\n      <div ng-if=\"vm.type=='blocks'\" flex layout=\"column\">\n        <explorer-latest-blocks layout=\"column\" flex account=\"vm.account\" hide-label=\"true\"></explorer-latest-blocks>\n      </div>\n      <div ng-if=\"vm.type=='trades'\" flex layout=\"column\">\n        <virtual-repeat-trades hide-label=\"true\" layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-trades>\n      </div>\n      <div ng-if=\"vm.type=='lessors'\" flex layout=\"column\" layout-fill>\n        <md-list flex layout-fill layout=\"column\" class=\"lessors\">\n          <md-list-item class=\"header\">\n            <div class=\"truncate-col id-col left\">ID</div>\n            <div class=\"truncate-col balance-col left\">Balance</div>\n            <div class=\"truncate-col from-col left\">From</div>\n            <div class=\"truncate-col to-col left\">To</div>\n            <div class=\"truncate-col next-lessee-col\">Next</div>\n            <div class=\"truncate-col from-col\">From</div>\n            <div class=\"truncate-col to-col\" flex>To</div>\n          </md-list-item>\n          <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n            <md-list-item md-virtual-repeat=\"item in vm.lessors\" aria-label=\"Entry\">\n              <div class=\"truncate-col id-col left\">\n                <a href=\"#/explorer-account/{{item.id}}/transactions\">{{item.id}}</a>\n              </div>\n              <div class=\"truncate-col balance-col\">\n                {{item.balance}}\n              </div>\n              <div class=\"truncate-col from-col left\">\n                {{item.currentHeightFrom}}\n              </div>\n              <div class=\"truncate-col to-col left\">\n                {{item.currentHeightTo}}\n              </div>\n              <div class=\"truncate-col next-lessee-col\">\n                <a ng-if=\"item.nextLessee\" href=\"#/explorer-account/{{item.nextLessee}}/transactions\">{{item.nextLessee}}</a>\n              </div>\n              <div class=\"truncate-col from-col\">\n                {{item.nextHeightFrom}}\n              </div>\n              <div class=\"truncate-col to-col\" flex>\n                {{item.nextHeightTo}}\n              </div>\n            </md-list-item>\n          </md-virtual-repeat-container>\n        </md-list>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','heat','assetInfo','$q')\nclass ExploreAccountComponent {\n  account: string; // @input\n  type: string; // @input\n\n  accountName: string;\n  email: string;\n  publicKey: string;\n  firstSeen: string;\n  lease: string;\n  leaseBlocksRemain: string;\n  totalRewards: string;\n  effectiveBalance: string;\n  balanceUnconfirmed: string;\n  balanceConfirmed: string;\n  assetInfos: Array<AssetInfo> = [];\n\n\n  currentLessee: string;\n  currentLesseeName: string;\n  currentLeasingHeightFrom: number;\n  currentLeasingHeightTo: number;\n  currentLeasingRemain: number;\n  nextLessee: string;\n  nextLesseeName: string;\n  nextLeasingHeightFrom: number;\n  nextLeasingHeightTo: number;\n  leaseTitle: string;\n  nextLeaseTitle: string;\n  lessors: Array<IHeatLessors>;\n\n  constructor(private $scope: angular.IScope,\n              private heat: HeatService,\n              private assetInfo: AssetInfoService,\n              private $q: angular.IQService) {\n    this.refresh();\n    heat.subscriber.balanceChanged({ account: this.account, currency: \"0\" }, () => {\n      this.refresh();\n    }, $scope);\n  }\n\n  csv($event) {\n    dialogs.download($event, this.account)\n  }\n\n  refresh() {\n    this.accountName = \"*\";\n    this.email = \"*\";\n    this.publicKey = \"*\";\n    this.firstSeen = \"*\";\n    this.lease = \"*\";\n    this.leaseBlocksRemain = \"*\";\n    this.totalRewards = \"*\";\n    this.effectiveBalance = \"*\";\n    this.balanceUnconfirmed = \"*\";\n    this.balanceConfirmed = \"*\";\n\n    this.heat.api.getPublicKey(this.account).then((publicKey)=>{\n      this.$scope.$evalAsync(()=>{\n        this.publicKey = publicKey;\n      })\n    });\n\n    this.heat.api.getAccountByNumericId(this.account).then((account)=>{\n      this.$scope.$evalAsync(()=>{\n        this.accountName = account.publicName;\n        this.balanceConfirmed = utils.formatQNT(account.balance, 8);\n        this.effectiveBalance = utils.formatQNT(account.effectiveBalance, 8);\n        this.balanceUnconfirmed = utils.formatQNT(account.unconfirmedBalance, 8);\n        this.currentLessee = account.currentLessee;\n        this.currentLesseeName = account.currentLesseeName || account.currentLessee;\n        this.currentLeasingHeightFrom = account.currentLeasingHeightFrom;\n        this.currentLeasingHeightTo = account.currentLeasingHeightTo;\n        this.nextLessee = account.nextLessee;\n        this.nextLesseeName = account.nextLesseeName || account.nextLessee;\n        this.nextLeasingHeightFrom = account.nextLeasingHeightFrom;\n        this.nextLeasingHeightTo = account.nextLeasingHeightTo;\n        this.lessors = <Array<IHeatLessors>>account.lessors;\n        if (angular.isArray(this.lessors)) {\n          this.lessors.forEach((lessor:any) => {\n            lessor.balance = utils.formatQNT(lessor.effectiveBalance, 8) + \" HEAT\";\n            if (lessor.nextLessee==\"0\") {\n              lessor.nextLessee = \"\";\n            }\n            if (lessor.nextHeightFrom==2147483647||lessor.nextHeightFrom==lessor.currentHeightFrom) {\n              lessor.nextHeightFrom = \"\";\n            }\n            if (lessor.nextHeightTo==2147483647) {\n              lessor.nextHeightTo = \"\";\n            }\n          });\n        }\n      });\n      if (this.currentLessee != \"0\") {\n        this.heat.api.getBlockchainStatus().then(status=>{\n          this.$scope.$evalAsync(()=>{\n            this.currentLeasingRemain = status.lastBlockchainFeederHeight - account.currentLeasingHeightTo;\n            this.leaseTitle = `from ${this.currentLeasingHeightFrom} to ${this.currentLeasingHeightTo} remain ${this.currentLeasingRemain}`;\n            this.nextLeaseTitle = `from ${this.nextLeasingHeightFrom} to ${this.nextLeasingHeightTo}`;\n          })\n        })\n      }\n    });\n\n    this.getAccountAssets().then(assetInfos=>{\n      this.$scope.$evalAsync(()=>{\n        this.assetInfos = assetInfos\n          .filter(info => parseFloat(info.userBalance) !== 0)\n          .map(info => {\n            info['balance'] = utils.formatQNT(info.userBalance, 8);\n            return info;\n          });\n      })\n    })\n\n    this.heat.api.rewardsAccount(this.account).then(info=>{\n      this.$scope.$evalAsync(()=>{\n        this.totalRewards = utils.commaFormat(utils.formatQNT(info.totalRewards, 8))\n      })\n    });\n  }\n\n  showDescription($event, info: AssetInfo) {\n    dialogs.assetInfo($event, info);\n  }\n\n  private getAccountAssets(): angular.IPromise<Array<AssetInfo>> {\n    let deferred = this.$q.defer<Array<AssetInfo>>();\n    this.heat.api.getAccountBalances(this.account, \"0\", 1, 0, 100).then(balances => {\n      let assetInfos: Array<AssetInfo> = [];\n      let promises = [];\n      balances.forEach(balance=>{\n        if (balance.id != '0') {\n          promises.push(\n            this.assetInfo.getInfo(balance.id).then(info=>{\n              assetInfos.push(angular.extend(info, {\n                userBalance: balance.virtualBalance\n              }))\n            })\n          );\n        }\n      });\n      if (promises.length > 0) {\n        this.$q.all(promises).then(()=>{\n          assetInfos.sort((a,b)=>{\n            var textA = a.symbol.toUpperCase();\n            var textB = b.symbol.toUpperCase();\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n          });\n          deferred.resolve(assetInfos);\n        }, deferred.reject);\n      }\n      else {\n        deferred.resolve([]);\n      }\n    }, deferred.reject);\n    return <angular.IPromise<Array<AssetInfo>>> deferred.promise;\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/explorer-block/:block')\n@Component({\n  selector: 'explorerBlock',\n  inputs: ['block'],\n  styles: [`\n    explorer-block h3 {\n      font-size: 24px !important;\n      font-weight: bold;\n      padding-bottom: 0px;\n      margin-bottom: 0px;\n    }\n    explorer-block a {\n      cursor: pointer;\n    }\n    explorer-block a i {\n      font-size: 14px !important;\n    }\n  `],\n  template: `\n    <div layout=\"column\" flex layout-fill layout-padding >\n      <explorer-search layout=\"column\" type=\"''\" query=\"''\"></explorer-search>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Height:\n            </div>\n            <div class=\"value\">\n              {{vm.height}}\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Time:\n            </div>\n            <div class=\"value\">\n              {{vm.time}}\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Block id:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/explorer-block/{{vm.block}}\">{{vm.block}}</a>\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Generator:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/explorer-account/{{vm.generator}}/transactions\">{{vm.generatorPublicName||vm.generator}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Total amount:\n            </div>\n            <div class=\"value\">\n              {{vm.totalAmount}} HEAT\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Total fee:\n            </div>\n            <div class=\"value\">\n              {{vm.totalFee}} HEAT\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\" flex>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              POP reward:\n            </div>\n            <div class=\"value\">\n              {{vm.popReward}} HEAT\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              POS reward:\n            </div>\n            <div class=\"value\">\n              {{vm.posReward}} HEAT\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              JSON:\n            </div>\n            <div class=\"value\">\n              <a ng-click=\"vm.jsonDetails($event, vm.blockObject)\">Show <i class=\"material-icons\">code</i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <virtual-repeat-transactions layout=\"column\" flex layout-fill block=\"vm.block\"></virtual-repeat-transactions>\n    </div>\n  `\n})\n@Inject('$scope','heat','settings')\nclass ExplorerBlockComponent {\n  block: string;//@input\n\n  generator: string;\n  generatorPublicName: string;\n  totalAmount: string;\n  totalFee: string;\n  popReward: string;\n  posReward: string;\n  time: string;\n  height: number;\n\n  blockObject: any;\n\n  constructor(private $scope: angular.IScope,\n              private heat: HeatService,\n              private settings: SettingsService) {\n    let format = settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    heat.api.getBlock(this.block).then(block=>{\n      $scope.$evalAsync(()=>{\n        this.generator = block.generator;\n        this.generatorPublicName = block['generatorPublicName'];\n        this.totalAmount = utils.formatQNT(block.totalAmountHQT, 8);\n        this.totalFee = utils.formatQNT(block.totalFeeHQT, 8);\n        this.popReward = utils.formatQNT(block.popRewardHQT, 8);\n        this.posReward = utils.formatQNT(block.posRewardHQT, 8);\n        var date = utils.timestampToDate(block.timestamp);\n        this.time = dateFormat(date, format);\n        this.height = block.height;\n        this.blockObject = block;\n      })\n    })\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Block: '+item.block);\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'explorerLatestBlocks',\n  inputs: ['blockObject','account','hideLabel'],\n  styles: [`\n  .he {         \n    min-width: 40px !important;         \n    max-width: 70px !important;         \n  }\n  .tx {         \n    min-width: 20px !important;         \n    max-width: 40px !important;         \n  }\n  .fee {         \n    max-width: 70px !important;         \n  }\n  `],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Blocks\n      </div>\n      <md-list flex layout-fill layout=\"column\" >\n        <md-list-item class=\"header\">\n          <div class=\"he truncate-col height-col left\">Height</div>\n          <div class=\"truncate-col date-col left\">Time</div>\n          <div class=\"truncate-col block-col block left\">Block</div>\n          <div class=\"truncate-col generator-col block left\" ng-if=\"!vm.account\">Generator</div>\n          <div class=\"tx truncate-col transactions-col\">Tx</div>\n          <div class=\"truncate-col amount-col\">Amount</div>\n          <div class=\"fee truncate-col fee-col\">Fee</div>\n          <div class=\"truncate-col pos-col left\">POS Reward</div>\n          <div class=\"truncate-col pop-col left\" flex>POP Reward</div>\n          <!-- JSON -->\n          <div class=\"truncate-col json-col\"></div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\n            <div class=\"he truncate-col height-col left\">{{item.height}}</div>\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\n            <div class=\"truncate-col block-col block left\"><a href=\"#/explorer-block/{{item.block}}\">{{item.block}}</a></div>\n            <div class=\"truncate-col generator-col block left\" ng-if=\"!vm.account\"><a href=\"#/explorer-account/{{item.generator}}/transactions\">{{item.generatorPublicName||item.generator}}</a></div>\n            <div class=\"tx truncate-col transactions-col\">{{item.numberOfTransactions}}</div>\n            <div class=\"truncate-col amount-col\">{{item.amount}}</div>\n            <div class=\"fee truncate-col fee-col\">{{item.fee}}</div>\n            <div class=\"truncate-col pos-col left\">{{item.pos}}</div>\n            <div class=\"truncate-col pop-col left\" flex>{{item.pop}}</div>\n            <!-- JSON -->\n            <div class=\"truncate-col json-col\">\n              <a ng-click=\"vm.jsonDetails($event, item)\">\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\n              </a>\n            </div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope','$q','heat','latestBlocksProviderFactory','settings')\nclass ExplorerLatestBlocksComponent extends VirtualRepeatComponent {\n\n  blockObject: IHeatBlock; // @input\n  account: string; // @input\n\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService,\n              private heat: HeatService,\n              private latestBlocksProviderFactory: LatestBlocksProviderFactory,\n              private settings: SettingsService) {\n    super($scope, $q);\n\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    this.initializeVirtualRepeat(\n      this.latestBlocksProviderFactory.createProvider(this.blockObject, this.account),\n      /* decorator function */\n      (block: any|IHeatBlock) => {\n        var date = utils.timestampToDate(block.timestamp);\n        block.time = dateFormat(date, format);\n        block.amount = utils.formatQNT(block.totalAmountHQT, 8) + \" HEAT\";\n        block.fee = utils.trimDecimals(utils.formatQNT(block.totalFeeHQT, 8),2) + \" HEAT\";\n        block.pos = utils.trimDecimals(utils.formatQNT(block.posRewardHQT, 8),2) + \" HEAT\";\n        block.pop = utils.trimDecimals(utils.formatQNT(block.popRewardHQT, 8),2) + \" HEAT\";\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    heat.subscriber.blockPopped({}, refresh, $scope);\n    heat.subscriber.blockPushed({}, refresh, $scope);\n  }\n\n  jsonDetails($event, item) {\n    dialogs.jsonDetails($event, item, 'Block: '+item.block);\n  }\n\n  onSelect(selectedBlock) {}\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'explorerResultsAccounts',\n  inputs: ['query'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col id-col left\">Account</div>\n          <div class=\"truncate-col balance-col\">Balance</div>\n          <div class=\"truncate-col name-col left\" flex>Name</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\n            <div class=\"truncate-col id-col left\"><a href=\"#/explorer-account/{{item.id}}/transactions\">{{item.id}}</a></div>\n            <div class=\"truncate-col balance-col\">{{item.balanceFormatted}}</div>\n            <div class=\"truncate-col name-col left\" flex>{{item.publicName}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope','$q','searchAccountsProviderFactory')\nclass ExplorerResultsAccountsComponent extends VirtualRepeatComponent {\n  query: string; // @input\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService,\n              private searchAccountsProviderFactory: SearchAccountsProviderFactory) {\n    super($scope, $q);\n    this.initializeVirtualRepeat(\n      this.searchAccountsProviderFactory.createProvider(this.query),\n      (account: any|IHeatAccount) => {\n        account.balanceFormatted = utils.formatQNT(account.unconfirmedBalance, 8);\n        if (account.publicName == account.id) {\n          account.publicName = '[private]';\n        }\n      }\n    );\n  }\n\n  onSelect(selectedAccount) {}\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/explorer-results/:type/', '/explorer-results/:type/:query')\n@Component({\n  selector: 'explorerResults',\n  inputs: ['type', 'query'],\n  template: `\n    <div layout=\"column\" flex layout-padding layout-fill>\n      <explorer-search layout=\"column\" query=\"vm.query\"></explorer-search>\n      <div layout=\"row\" layout-align=\"start center\" class=\"type-row\">\n        <md-button ng-class=\"{'active':vm.type=='accounts'}\"\n          ng-disabled=\"vm.type=='accounts'\"\n          ng-href=\"#/explorer-results/accounts/{{vm.query}}\">Accounts</md-button>\n        <md-button ng-class=\"{'active':vm.type=='blocks'}\"\n          ng-disabled=\"vm.type=='blocks'\"\n          ng-href=\"#/explorer-results/blocks/{{vm.query}}\">Blocks</md-button>\n        <md-button ng-class=\"{'active':vm.type=='transactions'}\"\n          ng-disabled=\"vm.type=='transactions'\"\n          ng-href=\"#/explorer-results/transactions/{{vm.query}}\">Transactions</md-button>\n      </div>\n\n      <!-- ACCOUNTS -->\n      <div layout=\"column\" flex ng-if=\"vm.type=='accounts'\">\n        <explorer-results-accounts query=\"vm.query\" flex layout=\"column\"></explorer-results-accounts>\n      </div>\n\n      <!-- BLOCKS -->\n      <div layout=\"column\" flex ng-if=\"vm.type=='blocks'\">\n        <explorer-latest-blocks ng-if=\"vm.blockObject\" layout=\"column\" flex block-object=\"vm.blockObject\"></explorer-latest-blocks>\n        <span ng-if=\"!vm.blockObject\">\n          No blocks found with that height or id.\n        </span>\n      </div>\n\n      <!-- TRANSACTIONS -->\n      <div layout=\"column\" flex ng-if=\"vm.type=='transactions'\">\n        <virtual-repeat-transactions ng-if=\"vm.transactionObject\" layout=\"column\" flex transaction-object=\"vm.transactionObject\"></virtual-repeat-transactions>\n        <span ng-if=\"!vm.transactionObject\">\n          No transaction found with that id.\n        </span>\n      </div>\n\n      <div layout=\"column\" flex ng-if=\"vm.type=='search'\">No results found</div>\n\n    </div>\n  `\n})\n@Inject('$scope', 'heat', '$location')\nclass ExplorerResultsComponent {\n  type: string; // @input\n  query: string; // @input\n\n  blockObject: IHeatBlock;\n  transactionObject: IHeatTransaction;\n\n  constructor(private $scope: angular.IScope,\n    private heat: HeatService,\n    private $location: angular.ILocationService) {\n\n    if (this.type === 'search' || this.type === 'accounts') {\n      heat.api.searchAccountsCount(this.query).then(count => {\n        $scope.$evalAsync(() => {\n          if (this.type === 'search' && count > 0) {\n            this.type = 'accounts'\n            this.$location.path(`/explorer-results/${this.type}/${this.query}`)\n          }\n        })\n      })\n    }\n\n    if (this.type === 'search' || this.type === 'blocks') {\n      heat.api.getBlock(this.query, true).then(block => {\n        $scope.$evalAsync(() => {\n          this.blockObject = block;\n          if (this.type === 'search') {\n            this.type = 'blocks'\n            this.$location.path(`/explorer-results/${this.type}/${this.query}`)\n          }\n        })\n      }, () => {\n        let height = parseInt(this.query);\n        if (!isNaN(height)) {\n          heat.api.getBlockAtHeight(height, true).then(block => {\n            $scope.$evalAsync(() => {\n              this.blockObject = block;\n              if (this.type === 'search') {\n                this.type = 'blocks'\n                this.$location.path(`/explorer-results/${this.type}/${this.query}`);\n              }\n            })\n          });\n        }\n      });\n    }\n    if (this.type === 'search' || this.type === 'transactions') {\n      heat.api.getTransaction(this.query).then(transaction => {\n        $scope.$evalAsync(() => {\n          this.transactionObject = transaction;\n          if (this.type === 'search') {\n            this.type = 'transactions';\n            this.$location.path(`/explorer-results/${this.type}/${this.query}`);\n          }\n        })\n      });\n    }\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/explorer-rewards')\n@Component({\n  selector: 'explorerRewards',\n  template: `\n    <div layout=\"column\" flex layout-fill layout-padding>\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Forging Rewards\n      </div>\n      <md-list flex layout-fill layout=\"column\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col account-col left\">Account</div>\n          <div class=\"truncate-col effective-col block left\">Effective Balance</div>\n          <div class=\"truncate-col total-col left\">Total Rewards</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\n            <div class=\"truncate-col account-col left\">\n              <a href=\"#/explorer-account/{{item.account}}/transactions\">{{item.accountName||item.account}}</a>\n            </div>\n            <div class=\"truncate-col effective-col block left\">{{item.effectiveBalanceFormatted}}</div>\n            <div class=\"truncate-col total-col left\">{{item.totalRewardsFormatted}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope','$q','heat','rewardsProviderFactory','settings')\nclass ExplorerRewardsBlocksComponent extends VirtualRepeatComponent {\n\n  blockObject: IHeatBlock; // @input\n  account: string; // @input\n\n  constructor(protected $scope: angular.IScope,\n              protected $q: angular.IQService,\n              private heat: HeatService,\n              private rewardsProviderFactory: RewardsProviderFactory,\n              private settings: SettingsService) {\n    super($scope, $q);\n\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    this.initializeVirtualRepeat(\n      this.rewardsProviderFactory.createProvider(),\n      /* decorator function */\n      (reward: IHeatRewardsInfo) => {\n        // var date = utils.timestampToDate(reward.lastBlockTimestamp);\n        // reward['lastBlockDate'] = dateFormat(date, format);\n        reward['effectiveBalanceFormatted'] = utils.commaFormat(reward.effectiveBalance) + \" HEAT\";\n        reward['totalRewardsFormatted'] = utils.commaFormat(utils.formatQNT(reward.totalRewards, 8)) + \" HEAT\";\n      }\n    );\n\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\n    heat.subscriber.blockPopped({}, refresh, $scope);\n    heat.subscriber.blockPushed({}, refresh, $scope);\n  }\n\n  onSelect(selectedBlock) {}\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'explorerSearch',\n  inputs: ['type','query'],\n  template: `\n    <div layout=\"row\" flex layout-fill>\n      <md-input-container flex>\n        <label>Search for account id, account public names, transaction id, block id or block height</label>\n        <input name=\"search-text\" ng-model=\"vm.query\" ng-keypress=\"vm.onKeyPress($event)\">\n      </md-input-container>\n    </div>\n  `\n})\n@Inject('$scope','$location')\nclass ExplorerSearchComponent {\n  type: string; // @input\n  query: string; // @input\n\n  constructor(private $scope: angular.IScope, private $location: angular.ILocationService) {}\n\n  onKeyPress($event) {\n    if ($event.keyCode == 13) {\n      let type = this.type || 'search';\n      let query = this.query || '';\n      this.$location.path(`/explorer-results/${type}/${query}`);\n    }\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/explorer')\n@Component({\n  selector: 'explorer',\n  styles: [`\n    explorer h3 {\n      font-size: 24px !important;\n      font-weight: bold;\n      padding-bottom: 0px;\n      margin-bottom: 0px;\n    }\n    explorer md-list-item.active {\n      background-color: #B2DFDB;\n    }\n    explorer .wallet {\n      height: 32px;\n    }\n  `],\n  template: `\n    <div layout=\"column\" flex layout-padding layout-fill>\n      <explorer-search layout=\"column\" type=\"''\" query=\"''\"></explorer-search>\n      <explorer-latest-blocks layout=\"column\" flex=\"30\"></explorer-latest-blocks>\n      <virtual-repeat-transactions layout=\"column\" flex=\"60\"></virtual-repeat-transactions>\n    </div>\n  `\n})\n@Inject('$scope')\nclass ExplorerComponent {\n  constructor(private $scope: angular.IScope) {\n  }\n}\n","@RouteConfig('/fimk-account/:account')\n@Component({\n  selector: 'fimkAccount',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Address:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/fimk-account/{{vm.account}}\">{{vm.account}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\n            </div>\n            <div class=\"value\">\n              {{vm.balanceUnconfirmed}} FIM\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              FIMK Server:\n            </div>\n            <div class=\"value\">\n              <md-select class=\"md-select-ws\" ng-model=\"vm.selectSocketEndPoint\" ng-change=\"vm.changeSocketAddress()\">\n                <md-option ng-repeat=\"socket in vm.sockets\" value=\"{{socket.name}}\">{{socket.name}}</md-option>\n              </md-select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div flex layout=\"column\">\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\n          <md-list flex layout-fill layout=\"column\">\n            <md-list-item class=\"header\">\n              <div class=\"truncate-col date-col left\">Time</div>\n              <div class=\"truncate-col id-col left\">Status</div>\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\n            </md-list-item>\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\n              <div class=\"truncate-col id-col left\">\n                Pending&nbsp;<elipses-loading></elipses-loading>\n              </div>\n              <div class=\"truncate-col info-col left\" flex>\n                <span>{{item.txId}}</span>\n              </div>\n            </md-list-item>\n          </md-list>\n          <p></p>\n        </div>\n        <virtual-repeat-fimk-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-fimk-transactions>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope', 'mofoSocketService', 'fimkPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\nclass FimkAccountComponent {\n  account: string; // @input\n  balanceUnconfirmed: any;\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\n  prevIndex = 0\n  busy = true\n  sockets: any;\n  selectSocketEndPoint = 'Mofowallet'\n\n  constructor(private $scope: angular.IScope,\n    private mofoSocketService: MofoSocketService,\n    private fimkPendingTransactions: FimkPendingTransactionsService,\n    private $interval: angular.IIntervalService,\n    private $mdToast: angular.material.IToastService,\n    private settings: SettingsService,\n    private user: UserService) {\n\n    this.refresh();\n\n    let listener = this.updatePendingTransactions.bind(this)\n    fimkPendingTransactions.addListener(listener)\n    this.updatePendingTransactions()\n\n    let promise = $interval(this.timerHandler.bind(this), 30000)\n    this.timerHandler()\n\n    $scope.$on('$destroy', () => {\n      fimkPendingTransactions.removeListener(listener)\n      $interval.cancel(promise)\n    })\n\n    this.sockets = [\n      {\n        name: 'Mofowallet',\n        socketUrl: 'wss://cloud.mofowallet.org:7986/ws/'\n      },\n      {\n        name: 'Localhost',\n        socketUrl: 'ws://localhost:7986/ws/'\n      }\n    ]\n\n    this.$scope['vm'].selectSocketEndPoint = this.sockets.find(w => this.mofoSocketService.getSocketUrl() == w.socketUrl).name\n\n\n  }\n\n  changeSocketAddress() {\n    let ret = this.sockets.find(w => this.$scope['vm'].selectSocketEndPoint == w.name)\n    this.mofoSocketService.mofoSocket(ret.socketUrl)\n  }\n\n  timerHandler() {\n    this.refresh()\n    if (this.pendingTransactions.length) {\n      this.mofoSocketService.getRecentTx(this.user.currency.address).then(recentTransactions => {\n        for(let i = 0; i < this.pendingTransactions.length; i++) {\n          let isPending = false;\n          for(let j = 0; j < recentTransactions.length; j++) {\n            if(recentTransactions[j].transaction == this.pendingTransactions[i].txId) {\n              isPending = true;\n              break;\n            }\n          }\n          if(!isPending) {\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${this.pendingTransactions[i].txId} found`).hideDelay(2000));\n            this.fimkPendingTransactions.remove(this.pendingTransactions[i].address, this.pendingTransactions[i].txId, this.pendingTransactions[i].time)\n          }\n        }\n      }, err => {\n        console.log('Error in getting recent FIMK Transactions '+ err)\n      })\n    }\n  }\n\n  updatePendingTransactions() {\n    this.$scope.$evalAsync(() => {\n      this.pendingTransactions = []\n      let addr = this.user.currency.address\n      let txns = this.fimkPendingTransactions.pending[addr]\n      if (txns) {\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n        txns.forEach(tx => {\n          this.pendingTransactions.push({\n            date: dateFormat(new Date(tx.time), format),\n            time: tx.time,\n            txId: tx.txId,\n            address: addr\n          })\n        })\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\n      }\n    })\n  }\n\n  refresh() {\n    this.busy = true;\n    this.balanceUnconfirmed = \"\";\n    this.mofoSocketService.getAccount(this.account).then(info => {\n      this.$scope.$evalAsync(() => {\n        let balance = info.unconfirmedBalanceNQT ? parseInt(info.unconfirmedBalanceNQT) / 100000000 : 0;\n        let formattedBalance = new Big(balance + \"\");\n        this.balanceUnconfirmed = new Big(formattedBalance).toFixed(8);\n        this.busy = false;\n      })\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/home')\n@Component({\n  selector: 'home',\n  template: `\n    <div layout=\"column\" flex layout-padding layout-fill>\n      <virtual-repeat-transactions layout=\"column\" flex account=\"vm.user.account\" personalize=\"true\"></virtual-repeat-transactions>\n      <!-- <virtual-repeat-eth-transactions layout=\"column\" flex account=\"vm.user.account\" personalize=\"true\"></virtual-repeat-eth-transactions> -->\n    </div>\n  `\n})\n@Inject('user')\nclass HomeComponent {\n\n\n  constructor(public user: UserService) {\n    user.requireLogin();\n\n    user.on(UserService.EVENT_UNLOCKED, () => {\n\n    })\n  }\n}\n","@RouteConfig('/iota-account/:account')\n@Component({\n  selector: 'iotaAccount',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Address:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/iota-account/{{vm.account}}\">{{vm.account}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\n            </div>\n            <div class=\"value\">\n              {{vm.balanceUnconfirmed}} IOTA\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div flex layout=\"column\">\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\n          <md-list flex layout-fill layout=\"column\">\n            <md-list-item class=\"header\">\n              <div class=\"truncate-col date-col left\">Time</div>\n              <div class=\"truncate-col id-col left\">Status</div>\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\n            </md-list-item>\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\n              <div class=\"truncate-col id-col left\">\n                Pending&nbsp;<elipses-loading></elipses-loading>\n              </div>\n              <div class=\"truncate-col info-col left\" flex>\n                <span>{{item.txId}}</span>\n              </div>\n            </md-list-item>\n          </md-list>\n          <p></p>\n        </div>\n        <virtual-repeat-iota-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-iota-transactions>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope', 'iotaBlockExplorerService', 'iotaPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\nclass IotaAccountComponent {\n  account: string; // @input\n  balanceUnconfirmed: any;\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\n  prevIndex = 0\n  busy = true\n\n  constructor(private $scope: angular.IScope,\n    private iotaBlockExplorerService: IotaBlockExplorerService,\n    private iotaPendingTransactions: IotaPendingTransactionsService,\n    private $interval: angular.IIntervalService,\n    private $mdToast: angular.material.IToastService,\n    private settings: SettingsService,\n    private user: UserService) {\n\n    this.refresh();\n\n    let listener = this.updatePendingTransactions.bind(this)\n    iotaPendingTransactions.addListener(listener)\n    this.updatePendingTransactions()\n\n    let promise = $interval(this.timerHandler.bind(this), 30000)\n    this.timerHandler()\n\n    $scope.$on('$destroy', () => {\n      iotaPendingTransactions.removeListener(listener)\n      $interval.cancel(promise)\n    })\n\n  }\n\n  timerHandler() {\n    this.refresh()\n    if (this.pendingTransactions.length) {\n      this.iotaBlockExplorerService.getAccountInfo(this.user.currency.secretPhrase).then(recentTransactions => {\n        for(let i = 0; i < this.pendingTransactions.length; i++) {\n          let isPending = true;\n          for(let j = 0; j < recentTransactions.transfers.length; j++) {\n            if(recentTransactions.transfers[j][0].hash == this.pendingTransactions[i].txId) {\n              isPending = false;\n              break;\n            }\n          }\n          if(!isPending) {\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${this.pendingTransactions[i].txId} found`).hideDelay(2000));\n            this.iotaPendingTransactions.remove(this.pendingTransactions[i].address, this.pendingTransactions[i].txId, this.pendingTransactions[i].time)\n          }\n        }\n      }, err => {\n        console.log('Error in getting recent IOTA Transactions '+ err)\n      })\n    }\n  }\n\n  updatePendingTransactions() {\n    this.$scope.$evalAsync(() => {\n      this.pendingTransactions = []\n      let addr = this.user.currency.address\n      let txns = this.iotaPendingTransactions.pending[addr]\n      if (txns) {\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n        txns.forEach(tx => {\n          this.pendingTransactions.push({\n            date: dateFormat(new Date(tx.time), format),\n            time: tx.time,\n            txId: tx.txId,\n            address: addr\n          })\n        })\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\n      }\n    })\n  }\n\n  refresh() {\n    this.busy = true;\n    this.balanceUnconfirmed = \"\";\n    this.iotaBlockExplorerService.getAccountInfo(this.user.currency.secretPhrase).then(info => {\n      this.$scope.$evalAsync(() => {\n        this.balanceUnconfirmed = info ? info.balance : 0;\n        this.busy = false;\n      })\n    })\n  }\n}\n","  /*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'editMessage',\n  inputs: ['publickey'],\n  styles: [`\n    edit-message .md-button {\n      margin: 0px;\n      min-width: 46px;\n    }\n    .edit-message-textarea {\n      border: solid 1px;\n      border-radius: 5px 5px 0px;\n    }\n    .edit-message-textarea.offchain {\n      border-color: green;\n    }\n    .edit-message-textarea::placeholder {\n      color: rgb(117, 117, 117);\n    }\n    .send-button-container {\n      padding-left: 10px;\n    }\n    edit-message .offchain-button {\n      width: 110px;\n      height: 30px;\n    }\n    edit-message .offchain-button.disable span {\n      color: grey;\n    }\n    edit-message .offchain-button.active {\n      background-color: green;\n    }\n    edit-message .send-button {\n      margin-top: 6px;\n    }\n  `],\n  template: `\n    <div layout=\"row\" flex>\n      <div layout=\"column\" flex=\"noshrink\">\n        <form hide-gt-xs name=\"editMessageForm\" ng-submit=\"vm.sendMessage($event)\" flex layout=\"row\">\n          <textarea flex rows=\"4\" ng-model=\"vm.messageText\"></textarea>\n          <md-button type=\"submit\" aria-label=\"Submit\">\n            <md-icon md-font-library=\"material-icons\">send</md-icon>\n          </md-button>\n        </form>\n        <textarea hide-xs ng-model=\"vm.messageText\" flex rows=\"4\" class=\"edit-message-textarea\"\n          ng-class=\"{'offchain': vm.p2pMessaging.offchainMode}\"\n          ng-keypress=\"vm.onKeyPress($event)\" placeholder=\"Hit ENTER key to send, SHIFT+ENTER for new line\"></textarea>\n      </div>\n      <div layout=\"column\" class=\"send-button-container\">\n        <md-button class=\"offchain-button\" ng-click=\"vm.toggleOffchain()\" ng-class=\"{'active': vm.p2pMessaging.offchainMode, 'disable': !vm.p2pMessaging.offchainMode}\">\n          <md-tooltip md-direction=\"top\">Peer-to-peer messages off blockchain</md-tooltip>\n          {{vm.p2pMessaging.offchainMode ? 'offchain  ✔' : 'offchain'}}\n        </md-button>\n        <md-button class=\"md-primary send-button\" flex ng-click=\"vm.send($event)\">\n          Send\n        </md-button>\n      </div>\n    </div>\n\n  `\n})\n@Inject('$scope','sendmessage','storage','$timeout', 'user', 'P2PMessaging', '$mdToast')\nclass EditMessageComponent {\n\n  publickey: string; // @inputs\n\n  private messageText: string;\n  private store: Store;\n\n  constructor(private $scope: angular.IScope,\n              private sendmessage: SendmessageService,\n              storage: StorageService,\n              private $timeout: angular.ITimeoutService,\n              private user: UserService,\n              private p2pMessaging: P2PMessaging,\n              private $mdToast: angular.material.IToastService) {\n    this.store = storage.namespace('contacts.latestTimestamp', $scope);\n  }\n\n  onKeyPress($event: KeyboardEvent) {\n    if ($event.keyCode == 13 && !$event.shiftKey) {\n      this.send($event);\n    }\n  }\n\n  send($event) {\n    if (this.messageText && this.messageText.trim().length != 0) {\n      if($event.preventDefault) $event.preventDefault();\n      if (this.p2pMessaging.offchainMode) {\n        this.sendP2PMessage($event);\n      } else {\n        this.sendMessage($event);\n      }\n    }\n  }\n\n  sendP2PMessage($event) {\n    let notSentReason: string;\n    let room = this.p2pMessaging.getOneToOneRoom(this.publickey);\n    if (room) {\n      let peer = room.getPeer(this.publickey);\n      if (peer && peer.isConnected()) {\n        let count = room.sendMessage({timestamp: Date.now(), type: \"chat\", text: this.messageText});\n        this.$scope.$evalAsync(() => {\n          this.messageText = '';\n        });\n      } else {\n        notSentReason = \"Peer is not connected\";\n      }\n    } else {\n      notSentReason = \"Chat 'room' for contact is not created\";\n    }\n    if (notSentReason) {\n      this.$mdToast.show(\n        this.$mdToast.simple().textContent(`Not sent. ${notSentReason}`).hideDelay(3000)\n      );\n    }\n  }\n\n  sendMessage($event) {\n    var account = heat.crypto.getAccountIdFromPublicKey(this.publickey);\n    this.sendmessage.\n         dialog($event, account, this.publickey, this.messageText).\n         send().\n         then(() => {\n      this.$scope.$evalAsync(() => {\n        this.messageText = '';\n      });\n      // This solves (for now) the need to re-set the unread status in the\n      // user-contacts component. A proper solution would include a change to\n      // the server API where we return the lastTimestamp - but only for\n      // messages received.\n      this.$timeout(2 * 1000, false).then(() => {\n        var latestTimestamp = this.store.getNumber(account, 0);\n        this.store.put(account, latestTimestamp + 1);\n      })\n    });\n  }\n\n  toggleOffchain($event) {\n    this.p2pMessaging.offchainMode = !this.p2pMessaging.offchainMode;\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'messageBatchEntry',\n  inputs: ['message'],\n  styles: [`\n    message-batch-entry .header {\n      font-size: 12px;\n    }\n    message-batch-entry .outgoing .header {\n      text-align: right;\n    }\n    message-batch-entry .batch-entry {\n      padding-left: 0px;\n    }\n    message-batch-entry .message-content {\n      font-size: 16px;\n    }\n\n    message-batch-entry .column {\n      border-radius: 15px;\n      min-width: 120px;\n      padding-top: 5px;\n    }\n    message-batch-entry .outgoing {\n      float: right;\n      background-color: #0c5f68;\n      color: white;\n      padding-left: 10px;\n      padding-top: 10px;\n      padding-right: 10px;\n      padding-bottom: 0px;\n      border-radius: .4em;\n      max-width: 75%;\n      min-width: 20%;\n    }\n    message-batch-entry .incoming {\n      text-align: left;\n      float: left;\n      background-color: #52a7b1;\n      color: black;\n      padding-left: 10px;\n      padding-top: 10px;\n      padding-right: 10px;\n      padding-botton: 0px;\n      border-radius: .4em;\n      max-width: 75%;\n      min-width: 20%;\n    }\n    message-batch-entry .message-content pre {\n      white-space: pre-wrap;       /* Since CSS 2.1 */\n      white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */\n      white-space: -pre-wrap;      /* Opera 4-6 */\n      white-space: -o-pre-wrap;    /* Opera 7 */\n      word-wrap: break-word;       /* Internet Explorer 5.5+ */\n      /* Adds a hyphen where the word breaks, if supported (No Blink) */\n      -ms-hyphens: auto;\n      -moz-hyphens: auto;\n      -webkit-hyphens: auto;\n      hyphens: auto;\n    }\n  `],\n  template: `\n    <div ng-class=\"vm.io\">\n      <div class=\"header\">\n        {{::vm.message.date}}\n      </div>\n      <div class=\"message-content\"><pre>{{vm.message.contents}}</pre></div>\n    </div>\n  `\n})\n//@Inject('$scope','$q','$timeout')\nclass MessageBatchEntryComponent {\n  message: IHeatMessage; // @input\n  io: string;\n  constructor() {\n    this.io = this.message['outgoing'] ? 'outgoing' : 'incoming';\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'messageBatchViewer',\n  inputs: ['publickey','@containerId'],\n  styles: [`\n    message-batch-viewer .message-item {\n      min-height: 80px;\n    }\n  `],\n  template: `\n    <div layout=\"column\" flex>\n      <div class=\"scroll-up\" layout=\"row\" flex ng-hide=\"vm.getParentScope().loading || vm.batches[vm.batches.length-1].firstIndex == 0\" layout-align=\"center\">\n        <md-button ng-click=\"vm.scrollUp()\" aria-label=\"Go up\">Go up</md-button>\n      </div>\n      <div layout=\"column\">\n        <div layout=\"column\" ng-repeat=\"batch in vm.batches | orderBy:'-'\">\n          <div layout=\"column\" ng-repeat=\"entry in batch.entries\">\n            <message-batch-entry id=\"{{::entry.__id}}\" message=\"entry\" flex=\"none\" class=\"message-item\"></message-batch-entry>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','$q','$timeout','$document','heat','user','settings',\n        'render','controlCharRender','storage')\nclass MessageBatchViewerComponent extends AbstractBatchViewerComponent {\n\n  private publickey: string; // @input\n  private containerId: string; // @input\n  private store: Store;\n  private dateFormat;\n  constructor($scope: angular.IScope,\n              $q: angular.IQService,\n              $timeout: angular.ITimeoutService,\n              private $document: angular.IDocumentService,\n              private heat: HeatService,\n              private user: UserService,\n              private settings: SettingsService,\n              private render: RenderService,\n              private controlCharRender: ControlCharRenderService,\n              storage: StorageService) {\n    super($scope, $q, $timeout);\n    this.store = storage.namespace('contacts.latestTimestamp',$scope);\n    this.dateFormat = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    var refresh = utils.debounce((angular.bind(this, this.onMessageAdded)), 500, false);\n    heat.subscriber.message({sender:this.user.account}, refresh, $scope);\n    heat.subscriber.message({recipient:this.user.account}, refresh, $scope);\n\n    this.loadInitial();\n    if (this.publickey == this.user.publicKey) {\n      throw Error(\"Same public key as logged in user\");\n    }\n  }\n\n  loadInitial() {\n    var deferred = this.$q.defer();\n    this.clear();\n    this.$scope.$evalAsync(() => { this.getParentScope().loading = true });\n    this.getBatch(0).then((batch) => {\n      this.$scope.$evalAsync(() => { // ensure contents are rendered\n        this.getParentScope().loading = false;\n        this.$timeout(0).then(() => { // resolve promise in next event loop\n          deferred.resolve();\n        });\n      })\n    });\n    deferred.promise.then(() => {\n      if (this.batches[0].entries.length > 0) {\n        this.goTo(this.getFirst().getLast().__id, 0, 1);\n      }\n    });\n    return deferred.promise;\n  }\n\n  /* websocket event listener */\n  onMessageAdded() {\n    var batch = this.getFirst();\n    batch.loadMore().then(() => {\n      var entry = batch.getLast();\n      var id = entry.__id;\n      this.$scope.$evalAsync(() => {\n        this.$timeout(0).then(() => { // leave render loop before coming back and doing the scroll\n          this.goTo(id, 0, 1000); // scroll to the new last element\n        })\n      })\n    });\n  }\n\n  /* websocket event listener */\n  onMessageRemoved() {}\n\n  /* websocket event listener */\n  onMessageConfirmed() {}\n\n  goTo(id: string, offset?: number, duration?: number) : angular.IPromise<any> {\n    var container = this.getScrollContainer();\n    var element = angular.element(document.getElementById(id));\n    if (!element) return;\n    var _offset = offset || 30;\n    var _duration = duration || 2000;\n    return container.duScrollToElement(element, _offset, _duration, heat.easing.easeOutCubic);\n  }\n\n  getScrollContainer() : duScroll.IDocumentService {\n     return <duScroll.IDocumentService> angular.element(document.getElementById(this.containerId))\n  }\n\n  getCount() : angular.IPromise<number> {\n    return this.heat.api.getMessagingContactMessagesCount(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey));\n  }\n\n  getItems(firstIndex: number, lastIndex: number) : angular.IPromise<Array<any>> {\n    let deferred = this.$q.defer<Array<any>>();\n    this.heat.api.getMessagingContactMessages(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey),\n                firstIndex, lastIndex).then((messages) => {\n      let index = firstIndex;\n\n      let result = messages.map((message) => {\n        var date = utils.timestampToDate(message.timestamp);\n        message['date'] = dateFormat(date, this.dateFormat);\n        message['outgoing'] = this.user.account == message.sender;\n        message['contents'] = this.decryptMessage(message);\n        message['index'] = index++;\n        message['html'] = this.render.render(message['contents'], [this.controlCharRender]);\n        this.updateLatestMessageReadTimestamp(message);\n        return message;\n      });\n\n      deferred.resolve(result);\n    });\n    return deferred.promise;\n  }\n\n  decryptMessage(message: IHeatMessage) {\n    return this.heat.getHeatMessageContents(message);\n  }\n\n  updateLatestMessageReadTimestamp(message: IHeatMessage) {\n    var account = this.user.account == message.sender ? message.recipient : message.sender;\n    var latestTimestamp = this.store.getNumber(account, 0);\n    if (message.timestamp > latestTimestamp) {\n      this.store.put(account, message.timestamp);\n    }\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/messenger/:publickey')\n@Component({\n  selector: 'messenger',\n  inputs: ['publickey'],\n  styles: [`\n    messenger user-contacts {\n      width: 300px;\n      min-width: 240px;\n    }\n    messenger .control-panel {\n      margin-top: 6px;\n      margin-right: 6px;\n    }\n    messenger edit-message {\n      min-height: 80px;\n    }\n    messenger .outer-container {\n      padding-top: 0px;\n      padding-bottom: 0px;\n    }\n    messenger md-content {\n      height: 100%;\n      //padding: 0 0 0 12px;\n    }\n    messenger .progress-indicator {\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n    messenger md-progress-linear > .md-container {\n      height: 3px;\n      max-height: 3px;\n    }\n    messenger .edit-message {\n      padding-right: 0px;\n    }\n    .control-panel button {\n      flex: auto;\n    }\n    .p2p-messages {\n      height: 100%;\n    }\n    #offchainButton.disable span {\n      color: grey;\n    }\n    #offchainButton.active {\n      background-color: green;\n    }\n    #onlineStatusButton.disable span {\n      color: grey;\n    }\n    #onlineStatusButton.active {\n      background-color: green;\n    }\n    #newContactButton {\n      max-width: 171px;\n    }\n    #newContactButton md-icon {\n      margin-right: 8px;\n      color: white;\n    }\n  `],\n  template: `\n    <div layout=\"column\" flex layout-padding layout-fill class=\"outer-container\">\n      <div layout=\"row\" flex layout-fill>\n        <div layout=\"column\">\n          <user-contacts flex layout=\"column\" ></user-contacts>\n          <div layout=\"row\" class=\"control-panel\">\n            <md-button id=\"newContactButton\" class=\"md-primary\" aria-label=\"Add contact\" ng-click=\"vm.showSendmessageDialog($event)\">\n              <md-tooltip md-direction=\"top\">\n                Send message to new contact\n              </md-tooltip>\n              <md-icon md-font-library=\"material-icons\">add_circle_outline</md-icon>\n              New CONTACT\n            </md-button>\n            <md-button id=\"CallButton\" class=\"md-primary\" aria-label=\"Call\"\n            ng-if=\"vm.p2pMessaging.onlineStatus == 'online'\" ng-click=\"vm.showCallDialog($event)\">\n              <md-tooltip md-direction=\"top\">\n                Connect user to establish the peer-to-peer channel\n              </md-tooltip>\n              CONNECT\n            </md-button>\n          </div>\n          <div layout=\"row\" class=\"control-panel\">\n            <md-button class=\"online\" id=\"onlineStatusButton\" ng-click=\"vm.toggleOnline()\"\n            ng-class=\"{'active': vm.p2pMessaging.onlineStatus == 'online', 'disable': vm.p2pMessaging.onlineStatus !== 'online'}\">\n              <md-tooltip md-direction=\"top\">Set online peer-to-peer messaging status</md-tooltip>\n              {{vm.p2pMessaging.onlineStatus == 'online' ? 'online  ✔' : 'online'}}\n            </md-button>\n          </div>\n        </div>\n        <div layout=\"column\" layout-fill>\n          <div class=\"row\" class=\"progress-indicator\" flex ng-show=\"vm.loading\">\n            <md-progress-linear class=\"md-primary\" md-mode=\"indeterminate\"></md-progress-linear>\n          </div>\n          <md-content flex ng-if=\"!vm.p2pMessaging.offchainMode\" id=\"message-batch-container\">\n            <message-batch-viewer flex layout=\"column\" container-id=\"message-batch-container\"\n                    publickey=\"::vm.publickey\"></message-batch-viewer>\n          </md-content>\n          <md-content flex ng-if=\"vm.p2pMessaging.offchainMode && vm.publickey != 0\" id=\"p2p-messages-container\">\n            <p2p-messages-viewer flex layout=\"column\" class=\"p2p-messages\" container-id=\"p2p-messages-container\"\n                    publickey=\"::vm.publickey\"></p2p-messages-viewer>\n          </md-content>\n          <div layout=\"row\" flex=\"none\" class=\"edit-message\">\n            <edit-message publickey=\"vm.publickey\" layout=\"row\" flex></edit-message>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','user','sendmessage', 'P2PMessaging')\nclass MessengerComponent {\n\n  publickey: string; // @input\n  loading: boolean;\n\n  constructor(private $scope: angular.IScope,\n              private user: UserService,\n              private sendmessage: SendmessageService,\n              private p2pMessaging: P2PMessaging) {\n    user.requireLogin();\n  }\n\n  showSendmessageDialog($event) {\n    this.sendmessage.dialog($event).show();\n  }\n\n  showCallDialog($event) {\n    this.p2pMessaging.dialog($event).show().then(room => {});\n    let recipient = heat.crypto.getAccountIdFromPublicKey(this.publickey);\n    this.p2pMessaging.dialog($event, recipient, this.publickey).show().finally(() => {});\n  }\n\n  toggleOnline($event) {\n    this.p2pMessaging.onlineStatus = this.p2pMessaging.onlineStatus == \"online\" ? \"offline\" : \"online\";\n    this.p2pMessaging.enterRoom(this.publickey);\n  }\n\n}\n","@Component({\n  selector: 'msgViewer',\n  inputs: ['publickey', '@containerId'],\n  template: `\n    <div>\n      <div class=\"row\" class=\"progress-indicator\" flex ng-show=\"vm.loading\">\n        <md-progress-linear class=\"md-primary\" md-mode=\"indeterminate\"></md-progress-linear>\n      </div>\n      <div layout=\"column\" flex>\n        <div class=\"scroll-up\" layout=\"row\" flex ng-hide=\"vm.loading || vm.displayMessages.messages.length === vm.messagesCount\" layout-align=\"center\">\n          <md-button ng-click=\"vm.scrollUp()\" aria-label=\"Go up\">Go up</md-button>\n        </div>\n        <div layout=\"column\">\n          <div layout=\"column\" ng-repeat=\"message in vm.displayMessages.messages | orderBy:'date'\">\n            <message-batch-entry id=\"{{::message.__id}}\" message=\"message\" flex=\"none\" class=\"message-item\"></message-batch-entry>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('heat', 'user', '$scope', 'P2PMessaging', 'settings', '$timeout')\nclass MsgViewerComponent {\n  private publickey: string; //input\n  private allMessages;\n  private onchainMessagesCount;\n  private dateFormat;\n  private messageHistory: p2p.MessageHistory;\n  private displayMessages;\n  private offchainPages: number;\n  private scrollElement;\n  private loading: boolean;\n  private static count: number;\n  private containerId;\n  private messagesCount: number;\n\n  constructor(private heat: HeatService,\n    private user: UserService,\n    private $scope: angular.IScope,\n    private p2pMessaging: P2PMessaging,\n    private settings: SettingsService,\n    private $timeout: angular.ITimeoutService) {\n\n    if (this.publickey == this.user.publicKey) {\n      throw Error(\"Same public key as logged in user\");\n    }\n    this.dateFormat = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    var refresh = utils.debounce((angular.bind(this, this.onMessageAdded)), 500, false);\n    heat.subscriber.message({ sender: this.user.account }, refresh, $scope);\n    heat.subscriber.message({ recipient: this.user.account }, refresh, $scope);\n    MsgViewerComponent.count = 10000;\n    this.initMessages()\n  }\n\n  private initMessages() {\n    this.offchainPages = 0;\n    this.onchainMessagesCount = 0;\n    this.messagesCount = 0;\n    this.displayMessages = { index: 0, messages: [] };\n    this.allMessages = [];\n\n    this.heat.api.getMessagingContactMessagesCount(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey)).then(count => {\n      if (count > 0) {\n        this.onchainMessagesCount = count;\n        this.messagesCount += count;\n      }\n      let room = this.p2pMessaging.getOneToOneRoom(this.publickey, true);\n      if (room) {\n        this.messageHistory = room.getMessageHistory()\n        this.offchainPages = this.messageHistory.getPageCount() - 1;\n        room.onNewMessageHistoryItem = (item: p2p.MessageHistoryItem) => { this.onMessageAdded(item, true) }\n        this.messagesCount += this.messageHistory.getItemCount();\n      }\n      this.loadMessages();\n    })\n  }\n\n  private loadMessages() {\n    let promises: Promise<any>[] = [];\n    let to = this.onchainMessagesCount;\n    let from = this.onchainMessagesCount - 10 > 0 ? this.onchainMessagesCount - 10 : 0;\n    promises.push(this.loadOnchainMessages(from, to));\n    promises.push(this.loadOffchainMessages());\n    // can improvise sorting --> currently sorting the already sorted elements too\n    Promise.all(promises).then((messages) => {\n      this.allMessages = this.allMessages.concat(...messages)\n      this.allMessages.sort((a, b) => (Date.parse(a.date) < Date.parse(b.date)) ? 1 : ((Date.parse(b.date) < Date.parse(a.date)) ? -1 : 0));\n      this.displayMessages.messages = this.displayMessages.messages.concat(this.allMessages.slice(this.displayMessages.index, this.displayMessages.index + 10))\n\n      this.$scope.$evalAsync(() => { // ensure contents are rendered\n        this.$timeout(0).then(() => { // resolve promise in next event loop\n          this.scrollElement = document.getElementById(this.displayMessages.messages[this.displayMessages.index].__id);\n          this.displayMessages.index = this.displayMessages.index + 10 <= this.messagesCount ? this.displayMessages.index + 10 : this.messagesCount;\n          this.getScrollContainer().duScrollToElement(angular.element(this.scrollElement), 0, 1200, heat.easing.easeOutCubic);\n        });\n      })\n    })\n  }\n\n  private loadOnchainMessages(from: number, to: number) {\n    return new Promise((resolve, reject) => {\n      let onchainMessages = [];\n      if (from < 0 || to < 0)\n        resolve(onchainMessages)\n      else {\n        this.heat.api.getMessagingContactMessages(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey), from, to).then(messages => {\n          messages.forEach(message => onchainMessages.push(this.processOnchainItem(message)));\n          resolve(onchainMessages)\n        }).catch(() => resolve(onchainMessages));\n      }\n    })\n  }\n\n  private loadOffchainMessages() {\n    return new Promise((resolve, reject) => {\n      if (this.messageHistory && this.offchainPages >= 0) {\n        let page = this.messageHistory.getItems(this.offchainPages);\n        if (page.length < 10) {\n          page = page.concat(this.messageHistory.getItems(--this.offchainPages))\n        }\n        page.forEach(item => this.processOffchainItem(item));\n        resolve(page)\n      } else { resolve([]) }\n    });\n  }\n\n  private processOnchainItem(message) {\n    return {\n      'content': this.heat.getHeatMessageContents(message),\n      'date': dateFormat(utils.timestampToDate(message.timestamp), this.dateFormat),\n      'outgoing': this.user.account === message.sender,\n      'onchain': true,\n      'timestamp': message.timestamp,\n      '__id': ++MsgViewerComponent.count\n    }\n  }\n  private processOffchainItem(item: p2p.MessageHistoryItem) {\n    item['senderAccount'] = heat.crypto.getAccountIdFromPublicKey(item.fromPeer);\n    item['outgoing'] = this.user.account == item['senderAccount'];\n    item['date'] = dateFormat(item.timestamp, this.dateFormat);\n    item['onchain'] = false;\n    item['content'] = item['content'] || item['message'];\n    item['__id'] = ++MsgViewerComponent.count;\n    return item;\n  }\n\n  private onMessageAdded(data, isoffchain = false) {\n    let newMessage;\n    if (isoffchain)\n      newMessage = this.processOffchainItem(data);\n    else\n      newMessage = this.processOnchainItem(data);\n\n    this.displayMessages.messages.splice(0, 0, newMessage);\n    this.displayMessages.index++;\n    this.messagesCount++;\n    this.$scope.$evalAsync(() => { // ensure contents are rendered\n      this.$timeout(0).then(() => {\n        this.scrollElement = document.getElementById(newMessage.__id);\n        this.getScrollContainer().duScrollToElement(angular.element(this.scrollElement), 0, 1200, heat.easing.easeOutCubic);\n      })\n    })\n  }\n\n  private scrollUp() {\n    --this.offchainPages;\n    this.onchainMessagesCount -= 11;\n    this.loadMessages();\n  }\n\n  getScrollContainer(): duScroll.IDocumentService {\n    return <duScroll.IDocumentService>angular.element(document.getElementById(this.containerId))\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2019 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Component({\n  selector: 'p2pMessagesViewer',\n  inputs: ['publickey','@containerId'],\n  styles: [`\n    .messages {\n      overflow: auto;\n      font-size: 14px;\n    }\n    .message-entry {\n      color: white;\n      margin-bottom: 14px;\n      margin-right: 10px;\n      // max-width: 85%;\n    }\n    .message-entry .message-content {\n      white-space: pre-line;\n    }\n    .message-entry md-icon {\n      color: green;\n      margin: 0 12px 0 0;\n    }\n    .message-entry .header {\n      padding-bottom: 6px;\n      color: grey;\n    }\n    .message-entry .menu-button {\n      color: grey !important;\n    }\n    .message-entry div.message {\n      width: 100%;\n    }\n    // .outgoing {\n    //   align-self: flex-end;\n    // }\n    .message-entry.ng-enter, .message-entry.ng-leave {\n      -webkit-transition: 0.5s linear all;\n      transition: 0.5s linear all;\n    }\n    .message-entry.ng-enter, .message-entry.ng-leave.ng-leave-active {\n      opacity: 0;\n      height: 0px;\n    }\n    .message-entry.ng-leave, .message-entry.ng-enter.ng-enter-active {\n      opacity: 1;\n      height: 40px;\n    }\n  `],\n  template: `\n<div class=\"messages\" ui-scroll-viewport layout=\"column\" flex scroll-glue>\n\n  <div ui-scroll=\"item in vm.datasource\" buffer-size=\"20\" adapter=\"adapter\"\n  layout=\"row\" class=\"message-entry\" ng-class=\"{outgoing: item.outgoing}\">\n\n    <md-icon md-font-library=\"material-icons\">{{item.outgoing ? 'chat_bubble_outline' : 'comment'}}</md-icon>\n    <div layout=\"column\" class=\"message\">\n      <div class=\"header\">\n        <b ng-if=\"!item.outgoing\">{{item.senderAccount}}&nbsp;&nbsp;&nbsp;&nbsp;</b>{{::item.dateFormatted}}\n      </div>\n      <div class=\"message-content\">{{item.content}}</div>\n    </div>\n\n    <md-menu>\n      <md-button aria-label=\"Message menu\" class=\"md-icon-button menu-button\" ng-click=\"vm.openMenu($mdMenu, $event)\">\n        <!--<md-icon md-menu-origin md-svg-icon=\"call:phone\"></md-icon>-->\n        ...\n      </md-button>\n      <md-menu-content width=\"4\">\n        <md-menu-item>\n          <md-button ng-click=\"vm.removeMessage($event, item)\">\n            Remove\n          </md-button>\n        </md-menu-item>\n      </md-menu-content>\n    </md-menu>\n\n  </div>\n</div>\n  `\n})\n@Inject('$scope','$q','$timeout','$document','heat','user','settings',\n        'render','controlCharRender','storage', 'P2PMessaging')\nclass P2PMessagesViewerComponent {\n\n  private publickey: string; // @input\n  private containerId: string; // @input\n  private store: Store;\n  private dateFormat;\n  // items: Array<p2p.MessageHistoryItem>;\n  datasource: P2PMessagesDataSource;\n\n  constructor(private $scope: angular.IScope,\n              $q: angular.IQService,\n              $timeout: angular.ITimeoutService,\n              private $document: angular.IDocumentService,\n              private heat: HeatService,\n              private user: UserService,\n              private settings: SettingsService,\n              private render: RenderService,\n              private controlCharRender: ControlCharRenderService,\n              private storage: StorageService,\n              private p2pMessaging: P2PMessaging) {\n    if (this.publickey == this.user.publicKey) {\n      throw Error(\"Same public key as logged in user\");\n    }\n\n    this.dateFormat = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n\n    if (this.publickey != '0') {\n      let room = this.p2pMessaging.getOneToOneRoom(this.publickey, true);\n      if (room) {\n        /* set seen time to future, so no need to update seen time on each new incoming message.\n        The seen time will be updated to the real value on destroying this component*/\n        this.p2pMessaging.updateSeenTime(room.name, Date.now() + 1000 * 60 * 60 * 24);\n\n        this.datasource = new P2PMessagesDataSource(room.getMessageHistory(), item => this.processItem(item));\n        room.onNewMessageHistoryItem = (item: p2p.MessageHistoryItem) => {\n          this.datasource.first++;\n          // @ts-ignore\n          let adapter = $scope.adapter;\n          if (adapter.isEOF()) {\n            adapter.append([this.processItem(item)]);\n          }\n        };\n\n        $scope.$on('$destroy', () => {\n          this.p2pMessaging.updateSeenTime(room.name, Date.now());\n          room.onNewMessageHistoryItem = null;\n        });\n      }\n    }\n  }\n\n  openMenu($mdMenu, event) {\n    $mdMenu.open(event);\n  }\n\n  removeMessage(event, item: p2p.MessageHistoryItem) {\n    dialogs.confirm(\n      \"Remove message\",\n      `Do you want to remove the message ?`\n    ).then(() => {\n      this.datasource.remove(item);\n      // @ts-ignore\n      let adapter = this.$scope.adapter;\n      adapter.applyUpdates(function (item2) {\n        if (item2 == item) {\n          return [];\n        }\n      });\n    });\n  }\n\n  private processItem(item: p2p.MessageHistoryItem) {\n    item['senderAccount'] = heat.crypto.getAccountIdFromPublicKey(item.fromPeer);\n    item['outgoing'] = this.user.account == item['senderAccount'];\n    item['dateFormatted'] = dateFormat(item.timestamp, this.dateFormat);\n    return item;\n  }\n\n}\n\nclass P2PMessagesDataSource {\n  data = [];\n  first = 1;  //index pointed to the head of datasource's list of items. Increased on adding item.\n\n  constructor(private messageHistory: p2p.MessageHistory,\n              private processItem: (item: p2p.MessageHistoryItem) => {}) {\n  }\n\n  get(index: number, count: number, success) {\n    let start = index;\n    let end = Math.min(index + count - 1, this.first);\n    if (start <= end) {\n      let lastIndex = this.messageHistory.getItemCount() - 1;\n      let items = this.messageHistory.getItemsScrollable(lastIndex + start - this.first, lastIndex + end - this.first + 1)\n        .map(item => this.processItem(item));\n      success(items);\n    } else {\n      success([]);\n    }\n  }\n\n  remove(item: p2p.MessageHistoryItem) {\n    this.messageHistory.remove(item.timestamp);\n  }\n\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@RouteConfig('/p2pmessagingprobe')\n@Component({\n  controller: P2PMessagingProbeComponent,\n  // bindings: {\n  //   \"publickey\": \"=\",\n  //   \"name\": \"=\"\n  // },\n  selector: 'probe',\n  //inputs: ['publickey'],\n  // styles: [`\n  // `],\n  template: `\n<p>\n  My name: <input type=\"text\" ng-model=\"vm.myName\" />\n  Room: <input type=\"text\" ng-model=\"vm.roomName\" />\n  Call to Peer Id: <input type=\"text\" ng-model=\"vm.peerId\" />\n</p>\n\n<p>\n<button class=\"md-primary md-button md-ink-ripple\" ng-click=\"vm.enterRoom()\">Enter room</button>\n<button class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.canCall\" ng-click=\"vm.call()\">Call</button>\n</p>\n\n<p>Who is online: {{vm.whoIsOnline}}</p>\n\n<form ng-submit=\"vm.send()\">\n   <input type=\"text\" ng-model=\"vm.messageText\" ng-disabled=\"!vm.connected\"/>\n   <button type=\"submit\" class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.connected\">Send</button>\n   <!--<input type=\"submit\" class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.connected\"/>-->\n</form>\n\n<!--\n<p><input type=\"text\" ng-model=\"vm.messageText\" />\n<button class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.connected\" ng-click=\"vm.send()\">Send</button>\n</p>\n-->\n\n<div style=\"overflow: scroll;\">\n  <div ng-repeat=\"message in vm.messages track by $index\">\n    <span>{{message}}</span>\n  </div>\n</div>\n\n<!--<textarea>{{vm.messageConsole}}</textarea>-->\n`\n  // template: `\n  //   <div layout=\"column\" flex layout-padding layout-fill class=\"outer-container\">\n  //   HELLO [{{$ctrl.publickey}}]\n  //   </div>\n  // `\n})\n@Inject('$scope', 'user', 'sendmessage', '$interval', 'P2PConnector', 'storage', 'settings')\nclass P2PMessagingProbeComponent {\n\n  // get publickey() {\n  //   return this.publickey;\n  // }\n  //\n  // set publickey(value) {\n  //   this.publickey = value;\n  // }\n\n  /*connected: boolean = false;\n  canCall: boolean = false;\n  messageText: string;\n  messages: string[] = [];\n  peerId: string;\n  secret: string;\n  myName: string;\n  roomName: string;\n  rooms: Map<string, Room> = new Map<string, Room>();\n  whoIsOnline: string = \"\";\n  messageConsole: string;\n\n  publickey: string; // @input\n  loading: boolean;\n\n  constructor(private $scope: angular.IScope,\n              private user: UserService,\n              private sendmessage: SendmessageService,\n              private $interval: angular.IIntervalService,\n              private p2pconnector: P2PConnector,\n              private storage: StorageService,\n              private settings: SettingsService) {\n    //user.requireLogin();\n\n    // let interval = $interval(()=>{\n    //   this.updateWhoIsOnline();\n    // }, 3*1000, 0, false);\n    //\n    // $scope.$on('$destroy',()=>{\n    //   $interval.cancel(interval);\n    // });\n\n    this.user.unlock(\"user1\");\n\n    this.secret = randomString();\n    this.myName = heat.crypto.secretPhraseToPublicKey(this.secret);\n\n    //setup p2pconnector\n    this.p2pconnector.setup(\n      this.myName,\n      (roomName) => {\n        let room = this.rooms.get(roomName);\n        if (!room) {\n          room = new Room(roomName, this.p2pconnector, this.storage, this.user, [\"todo\"]);\n          this.rooms.set(roomName, room);\n          // room.confirmIncomingCall = peerId => this.confirmIncomingCall(peerId);\n          room.onFailure = e => this.onError(e);\n          room.onMessage = msg => this.onMessage(msg);\n          room.onOpenDataChannel = peerId => this.onOpenDataChannel(peerId);\n          room.onCloseDataChannel = peerId => this.onCloseDataChannel(peerId);\n          room.onRejected = (byPeerId, reason) => {\n            this.messages.push(\"Peer '\" + byPeerId + \"' rejects me. Reason: \" + reason);\n            this.$scope.$apply();\n          };\n        }\n        this.roomName = roomName;\n        this.canCall = true;\n        this.messages.push(\"Accepted incoming call in room '\" + roomName + \"'\");\n        $scope.$apply();\n        return room;\n      },\n      null,\n      reason => this.onError(reason),\n      dataHex => this.sign(dataHex)\n    );\n\n    //set my online status\n    this.p2pconnector.setOnlineStatus(\"online\");\n  }\n\n  enterRoom() {\n    let room = this.rooms.get(this.roomName);\n    if (!room) {\n      room = new Room(this.roomName, this.p2pconnector, this.storage, this.user, [\"todo\"]);\n      this.rooms.set(this.roomName, room);\n      // room.confirmIncomingCall = peerId => this.confirmIncomingCall(peerId);\n      room.onMessage = msg => this.onMessage(msg);\n      room.onFailure = e => this.onError(e);\n      room.onOpenDataChannel = peerId => this.onOpenDataChannel(peerId);\n      room.onCloseDataChannel = peerId => this.onCloseDataChannel(peerId);\n      room.onRejected = (byPeerId, reason) => {\n        this.messages.push(\"Peer '\" + byPeerId + \"' rejected me. Reason: \" + reason);\n        this.$scope.$apply();\n      };\n    }\n\n    this.messages = [];\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    let recentMessages = room.getMessageHistory().getItems(room.getMessageHistory().getPageCount() - 1);\n    if (recentMessages) {\n      recentMessages.forEach(item => {\n        let fromMe = item.fromPeer.startsWith(\"=\");\n        this.messages.push((fromMe ? \" >>> \" : \" <<< \")\n          + \"[\" + room.name + \"] \" +\n          + (item.timestamp ? dateFormat(new Date(item.timestamp), format) : \"?\") + \"  \"\n          + (fromMe ? \"me\" : item.fromPeer)\n          + \": \" + item.message);\n      });\n    }\n\n    room.enter();\n    this.canCall = true;\n    return room;\n  }\n\n  call() {\n    let room = this.enterRoom();\n    this.p2pconnector.call(this.peerId, this.myName, room);\n  }\n\n  send() {\n    let room = this.rooms.get(this.roomName);\n    if (room) {\n      let count = room.sendMessage({timestamp: Date.now(), type: \"chat\", text: this.messageText});\n      this.messages.push((count > 0 ? \">>> [\" : \"- not sent - [\") + room.name + \"] \" + this.messageText);\n    }\n  }\n\n  onMessage(msg: any) {\n    if (msg.type == \"chat\") {\n      this.messages.push(\" <<< [\" + msg.roomName + \"]  \" + msg.fromPeerId + \": \" + msg.text);\n      this.$scope.$apply();\n    }\n  }\n\n  onOpenDataChannel(peerId: string) {\n    this.connected = true;\n    this.messages.push(\"Opened channel with peer '\" + peerId + \"'\");\n\n    this.updateWhoIsOnline();\n\n    this.$scope.$apply();\n  }\n\n  onCloseDataChannel(peerId: string) {\n    let room = this.rooms.get(this.roomName);\n    if (room) {\n      let openedChannels = 0;\n      room.getDataChannels().forEach(channel => {\n        if (channel.readyState == \"open\")\n          openedChannels++;\n      });\n      this.connected = openedChannels > 0;\n      this.messages.push(\"Closed channel with peer '\" + peerId + \"'\");\n\n      //this.updateWhoIsOnline();\n\n      this.$scope.$apply();\n    }\n  }\n\n  onError(reason: string) {\n    this.messages.push(\"Error: \" + reason);\n    this.$scope.$apply();\n  }\n\n  sign(dataHex: string): ProvingData {\n    //let secret = this.user.secretPhrase;\n    //must be the real secret phrase to proof the passed to room public key is owned.\n    //Now use the random string for testing\n    let publicKey = heat.crypto.secretPhraseToPublicKey(this.secret);\n    let signature = heat.crypto.signBytes(dataHex, converters.stringToHexString(this.secret));\n    return {signatureHex: signature, dataHex: dataHex, publicKeyHex: publicKey}\n  }\n\n  private updateWhoIsOnline() {\n    this.p2pconnector.getTmp(this.roomName).then(remotePeerIds => {\n      this.whoIsOnline = \"\";\n      remotePeerIds.forEach((peerId: string) => {\n        this.whoIsOnline = this.whoIsOnline + \" \" + peerId + \";   \"\n      });\n      this.$scope.$apply();\n    });\n  }\n\n  private confirmIncomingCall(peerId: string): Promise<any> {\n    return new Promise<any>((resolve) => {\n      dialogs.confirm(\"Incoming call\", `User ${peerId} calls you.`).then(() => resolve());\n    });\n  }*/\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@RouteConfig('/server')\n@Component({\n  selector: 'server',\n  template: `\n    <div layout=\"column\" flex layout-padding layout-fill>\n      <div layout=\"row\" class=\"button-row\">\n        <md-button class=\"start-stop\" ng-show=\"!vm.server.isRunning\" ng-click=\"vm.startServer()\">Start Server</md-button>\n        <md-button class=\"start-stop md-primary\" ng-show=\"vm.server.isRunning\" ng-click=\"vm.stopServer()\">Stop Server</md-button>\n        <md-button class=\"start-stop\" ng-click=\"vm.showInstallFolder()\">\n          <md-tooltip md-direction=\"bottom\">Access your server config files and back them up before updating HEAT server</md-tooltip>\n          Install Dir\n        </md-button>\n        <md-button class=\"start-stop\" ng-click=\"vm.showUserDataFolder()\">\n          <md-tooltip md-direction=\"bottom\">Access your user profile</md-tooltip>\n          User Dir\n        </md-button>\n\n        <md-button ng-click=\"vm.editFailoverConfig()\">\n          <md-tooltip md-direction=\"bottom\">Edit failover config</md-tooltip>\n          Failover Config\n        </md-button>\n\n        <md-switch ng-model=\"vm.connectedToLocalhost\" aria-label=\"Choose API connection\" ng-change=\"vm.connectToLocalhostChanged()\">\n          <md-tooltip md-direction=\"top\">\n            Connect client API to remotehost or to your local machine\n          </md-tooltip>\n          Client API connected to {{ vm.connectedToLocalhost ? 'localhost' : vm.remotehostDisplay }}\n        </md-switch>\n        <span flex></span>\n        <div layout=\"row\" layout-align=\"center center\" class=\"mining-stats\" ng-show=\"vm.isMining\">\n          <span>Remaining : </span>\n          <span class=\"mining-stats-val\">{{vm.miningRemaining}}</span>\n          <span>Deadline : </span>\n          <span class=\"mining-stats-val\">{{vm.miningDeadline}}</span>\n          <span>Hittime : </span>\n          <span class=\"mining-stats-val\">{{vm.miningHittime}}</span>\n        </div>\n        <md-button ng-show=\"vm.user.unlocked&&!vm.isMining\" ng-disabled=\"!vm.server.isReady\" class=\"start-stop\" ng-click=\"vm.startMining()\">Start Mining</md-button>\n        <md-button ng-show=\"vm.user.unlocked&&vm.isMining\" ng-disabled=\"!vm.server.isReady\" class=\"start-stop md-primary\" ng-click=\"vm.stopMining()\">Stop Mining</md-button>\n        <a ng-show=\"!vm.user.unlocked\" class=\"start-stop\" href=\"#/login\">Sign in to start mining</a>\n\n      </div>\n      <div layout=\"column\" flex class=\"console\" layout-fill>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\"\n            virtual-repeat-flex-helper id=\"server-console-container\">\n          <pre md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\n            <span ng-if=\"!item.timestamp\">{{item.message}}</span>\n            <span ng-if=\"item.timestamp\">\n              <span class=\"date\">{{item.timestamp}}&nbsp;<span class=\"severity {{item.severity}}\">{{item.severity}}</span>&nbsp;<span class=\"message\">{{item.message}}</span>\n            </span>\n          </pre>\n        </md-virtual-repeat-container>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','server','heat','user','settings','$mdToast')\nclass ServerComponent {\n  private ROW_HEIGHT = 12; // must match the `server .console pre { height: 12px }` style rule above\n\n  private console: any;\n  private onOutput: IEventListenerFunction;\n  private calculatedTopIndex = 0;\n  private topIndex = 0;\n  private consoleRowCount = 0;\n  private isMining = false;\n  private miningRemaining: any = '*';\n  private miningDeadline: any = '*';\n  private miningHittime: any = '*';\n  private hostLocal: string;\n  private hostRemote: string;\n  private portLocal: string;\n  private portRemote: string;\n  private connectedToLocalhost: boolean;\n  private remotehostDisplay: string;\n\n  /* 2017-01-27 23:22:30 INFO: Pushed block 13300804393767116009 with height 2925 */\n  //private msgRegExp = /^([\\d-]+\\s[\\d:]+)\\s(\\w+):\\s(.*)/;\n\n  /* 2017-04-01 19:00:17 [pool-5-thread-3] INFO c.heatledger.BlockchainProcessorImpl - Pushed block 4762652772805132303 at height 659 received 2017-03-18 06:27:42 from 37.139.25.98 */\n  private msgRegExp = /^([\\d-]+\\s[\\d:]+)\\s(.+)\\s-\\s(.*)/;\n\n  constructor(private $scope:angular.IScope,\n              public server: ServerService,\n              private heat: HeatService,\n              private user: UserService,\n              private settings: SettingsService,\n              private $mdToast: angular.material.IToastService) {\n\n    if (user.unlocked) {\n      heat.subscriber.blockPushed({generator:user.account}, ()=>{this.updateMiningInfo()});\n      heat.subscriber.blockPopped({generator:user.account}, ()=>{this.updateMiningInfo()});\n    }\n    else {\n      let listener = () => { this.updateMiningInfo() };\n      user.on(UserService.EVENT_UNLOCKED, listener);\n      $scope.$on('$destroy',()=>user.removeListener(UserService.EVENT_UNLOCKED, listener));\n    }\n\n    this.hostLocal  = this.settings.get(SettingsService.HEAT_HOST_LOCAL);\n    this.hostRemote = this.settings.get(SettingsService.HEAT_HOST_REMOTE);\n    this.portLocal  = this.settings.get(SettingsService.HEAT_PORT_LOCAL);\n    this.portRemote = this.settings.get(SettingsService.HEAT_PORT_REMOTE);\n    this.connectedToLocalhost = this.isConnectedToLocalhost();\n\n    //failover will choose this host by priority\n    SettingsService.forceServerPriority(\n      this.isConnectedToLocalhost() ? this.hostLocal : this.hostRemote,\n      this.isConnectedToLocalhost() ? this.portLocal : this.portRemote\n    );\n\n    this.onOutput = () => {\n      $scope.$evalAsync(()=> {\n        this.calculatedTopIndex = this.determineTopIndex();\n        if (!(this.topIndex < (this.calculatedTopIndex-5)) || this.consoleRowCount < this.getLength()) {\n          this.topIndex = this.calculatedTopIndex;\n        }\n      })\n    };\n    server.addListener('output',this.onOutput);\n    $scope.$on('$destroy',()=>{\n      server.removeListener('output',this.onOutput);\n    });\n    this.updateMiningInfo();\n    window.setTimeout(()=>{\n      this.topIndex = this.determineTopIndex();\n      this.onOutput();\n    },3000);\n\n    this.remotehostDisplay = this.hostRemote.replace('https://','');\n  }\n\n  showInstallFolder() {\n    require('electron').shell.showItemInFolder(this.server.getAppDir('.'))\n  }\n\n  showUserDataFolder() {\n    this.server.getUserDataDirFromMainProcess().then(\n      userDataDir => {\n        var path = require('path');\n        let dir = path.join(userDataDir);\n        require('electron').shell.showItemInFolder(path.resolve(dir))\n      }\n    )\n  }\n\n  editFailoverConfig() {\n    // @ts-ignore\n    const fs = require('fs');\n    let filePath = 'failover-config.json';\n    fs.readFile(filePath, (err, data) => {\n      if (err) {\n        console.log(\"Cannot load 'failover-config.json': \" + err);\n        throw err;\n      }\n      dialogs.textEditor(\"Failover Config\", data, (editedData) => {\n        fs.writeFile(filePath, editedData, (err) => {\n          if (err) throw err;\n          this.settings.applyFailoverConfig();\n        });\n      });\n    });\n  }\n\n  /* md-virtual-repeat */\n  getItemAtIndex(index) {\n    return this.render(this.server.buffer[index]);\n  }\n\n  /* md-virtual-repeat */\n  getLength() {\n    return this.server.buffer.length;\n  }\n\n  connectToLocalhostChanged() {\n    this.toggleConnectToLocalhost();\n  }\n\n  isConnectedToLocalhost(): boolean {\n    return this.settings.get(SettingsService.HEAT_HOST) == this.hostLocal &&\n           this.settings.get(SettingsService.HEAT_PORT) == this.portLocal;\n  }\n\n  toggleConnectToLocalhost() {\n    var host = this.isConnectedToLocalhost() ? this.hostRemote : this.hostLocal;\n    var port = this.isConnectedToLocalhost() ? this.portRemote : this.portLocal;\n    this.settings.put(SettingsService.HEAT_HOST, host);\n    this.settings.put(SettingsService.HEAT_PORT, port);\n    SettingsService.forceServerPriority(host, port);  //failover will choose this host by priority\n  }\n\n  startServer() {\n    this.server.startServer()\n    this.$mdToast.show(this.$mdToast.simple().textContent(\"In some cases you need to Start the server A SECOND TIME!\\n\"+\n      \"Wheter that's the case is indicated at the end of the log output (the colored text with black background).\").hideDelay(10000));\n  }\n\n  stopServer() {\n    this.server.stopServer()\n  }\n\n  determineRowCount() {\n    var el = document.getElementById('server-console-container');\n    return Math.round(el.clientHeight / this.ROW_HEIGHT);\n  }\n\n  determineTopIndex() {\n    this.consoleRowCount = this.determineRowCount();\n    return Math.max(0, this.getLength()-this.consoleRowCount+2);\n  }\n\n  /* msg is a string object from server service buffer. when asked for again we return the same instance */\n  render(msg) {\n    if (angular.isUndefined(msg))\n      return msg;\n    if (angular.isUndefined(msg.rendered)) {\n      var match = this.msgRegExp.exec(msg);\n      msg.rendered = match ? { timestamp: match[1], severity: match[2], message: match[3] } : { message: msg };\n    }\n    return msg.rendered;\n  }\n\n  startMining() {\n    this.heat.api.startMining(this.user.secretPhrase).then((info) => {\n      this.updateMiningInfo();\n    });\n  }\n\n  stopMining() {\n    this.heat.api.stopMining(this.user.secretPhrase).then((info) => {\n      this.updateMiningInfo();\n    });\n  }\n\n  updateMiningInfo() {\n    if (this.user.unlocked) {\n      this.heat.api.getMiningInfo(this.user.secretPhrase).then((info)=> {\n        this.$scope.$evalAsync(() => {\n          if (info[0]) {\n            this.isMining = true;\n            this.miningRemaining = info[0].remaining;\n            this.miningDeadline = info[0].deadline;\n            this.miningHittime = info[0].hitTime;\n          }\n          else {\n            this.isMining = false;\n          }\n        })\n      }, () => {\n        this.$scope.$evalAsync(() => {\n          this.isMining = false;\n        });\n      });\n    }\n  }\n}\n","@RouteConfig('/nxt-account/:account')\n@Component({\n  selector: 'nxtAccount',\n  inputs: ['account'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"explorer-detail\">\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Address:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/nxt-account/{{vm.account}}\">{{vm.account}}</a>\n            </div>\n          </div>\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\n            </div>\n            <div class=\"value\">\n              {{vm.balanceUnconfirmed}} NXT\n            </div>\n          </div>\n        </div>\n        <div layout=\"column\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              NXT Server:\n            </div>\n            <div class=\"value\">\n              <md-select class=\"md-select-ws\" ng-model=\"vm.selectSocketEndPoint\" ng-change=\"vm.changeSocketAddress()\">\n                <md-option ng-repeat=\"socket in vm.sockets\" value=\"{{socket.name}}\">{{socket.name}}</md-option>\n              </md-select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div flex layout=\"column\">\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\n          <md-list flex layout-fill layout=\"column\">\n            <md-list-item class=\"header\">\n              <div class=\"truncate-col date-col left\">Time</div>\n              <div class=\"truncate-col id-col left\">Status</div>\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\n            </md-list-item>\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\n              <div class=\"truncate-col id-col left\">\n                Pending&nbsp;<elipses-loading></elipses-loading>\n              </div>\n              <div class=\"truncate-col info-col left\" flex>\n                <span>{{item.txId}}</span>\n              </div>\n            </md-list-item>\n          </md-list>\n          <p></p>\n        </div>\n        <virtual-repeat-nxt-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-nxt-transactions>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope', 'nxtBlockExplorerService', 'nxtPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\nclass NxtAccountComponent {\n  account: string; // @input\n  balanceUnconfirmed: any;\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\n  prevIndex = 0\n  busy = true\n  sockets: any\n\n  constructor(private $scope: angular.IScope,\n              private nxtBlockExplorerService: NxtBlockExplorerService,\n              private nxtPendingTransactions: NxtPendingTransactionsService,\n              private $interval: angular.IIntervalService,\n              private $mdToast: angular.material.IToastService,\n              private settings: SettingsService,\n              private user: UserService) {\n\n    this.refresh();\n\n    let listener = this.updatePendingTransactions.bind(this)\n    nxtPendingTransactions.addListener(listener)\n    this.updatePendingTransactions()\n\n    let promise = $interval(this.timerHandler.bind(this), 30000)\n    this.timerHandler()\n\n    $scope.$on('$destroy', () => {\n      nxtPendingTransactions.removeListener(listener)\n      $interval.cancel(promise)\n    })\n\n    this.sockets = [\n      {\n        name: 'HEAT_NXT_node',\n        socketUrl: 'https://bitnode.heatwallet.com:7876/'\n      },\n      {\n        name: 'Localhost',\n        socketUrl: 'http://localhost:7876/'\n      }\n    ]\n\n    this.$scope['vm'].selectSocketEndPoint = this.sockets.find(w => this.nxtBlockExplorerService.getSocketUrl() == w.socketUrl).name\n  }\n\n  changeSocketAddress() {\n    let ret = this.sockets.find(w => this.$scope['vm'].selectSocketEndPoint == w.name)\n    this.nxtBlockExplorerService.setUrl(ret.socketUrl)\n  }\n\n\n  timerHandler() {\n    this.refresh()\n    if (this.pendingTransactions.length) {\n      this.prevIndex += 1\n      if (this.prevIndex >= this.pendingTransactions.length) {\n        this.prevIndex = 0\n      }\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\n      this.nxtBlockExplorerService.getTransactionStatus(pendingTxn.txId).then(\n        data => {\n          if (data.confirmations) {\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\n            this.nxtPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time)\n          }\n        },\n        err => {\n          console.log('Transaction not found', err)\n        }\n      )\n    }\n  }\n\n  updatePendingTransactions() {\n    this.$scope.$evalAsync(() => {\n      this.pendingTransactions = []\n      let addr = this.user.currency.address\n      let txns = this.nxtPendingTransactions.pending[addr]\n      if (txns) {\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n        txns.forEach(tx => {\n          this.pendingTransactions.push({\n            date: dateFormat(new Date(tx.time), format),\n            time: tx.time,\n            txId: tx.txId,\n            address: addr\n          })\n        })\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\n      }\n    })\n  }\n\n  refresh() {\n    this.busy = true;\n    this.balanceUnconfirmed = \"\";\n    this.nxtBlockExplorerService.getAccount(this.account).then(info => {\n      this.$scope.$evalAsync(() => {\n        this.balanceUnconfirmed = new Big(utils.convertToQNTf(info.balanceNQT)).toFixed(8);\n        this.busy = false;\n      })\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('ordersProviderFactory')\n@Inject('heat','$q')\nclass OrdersProviderFactory  {\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\n\n  public createProvider(currency: string, asset: string, account?: string, isAsk?: boolean): IPaginatedDataProvider {\n    return new OrdersProvider(currency, asset, account, isAsk, this.heat, this.$q);\n  }\n}\n\nclass OrdersProvider implements IPaginatedDataProvider {\n\n  constructor(private currency: string,\n              private asset: string,\n              private account: string,\n              private isAsk: boolean,\n              private heat: HeatService,\n              private $q: angular.IQService) {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    if (this.account) {\n      return this.heat.api.getAccountPairOrdersCount(this.account,this.currency,this.asset);\n    }\n    else if (this.isAsk) {\n      return this.heat.api.getAskOrdersCount(this.currency,this.asset);\n    }\n    return this.heat.api.getBidOrdersCount(this.currency,this.asset);\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatOrder>> {\n    if (this.account) {\n      return this.heat.api.getAccountPairOrders(this.account,this.currency,this.asset,firstIndex,lastIndex);\n    }\n    else if (this.isAsk) {\n      return this.heat.api.getAskOrders(this.currency,this.asset,firstIndex,lastIndex);\n    }\n    return this.heat.api.getBidOrders(this.currency,this.asset,firstIndex,lastIndex);\n  }\n}\n\n\n\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Service('tradesProviderFactory')\n@Inject('heat','$q')\nclass TradesProviderFactory  {\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\n\n  public createProvider(currency: string, asset: string, account?: string): IPaginatedDataProvider {\n    return new TradesProvider(currency, asset, account, this.heat, this.$q);\n  }\n}\n\nclass TradesProvider implements IPaginatedDataProvider {\n\n  constructor(private currency: string,\n              private asset: string,\n              private account: string,\n              private heat: HeatService,\n              private $q: angular.IQService) {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    if (this.account) {\n      return this.heat.api.getAccountTradesCount(this.account, this.currency, this.asset);\n    }\n    return this.heat.api.getTradesCount(this.currency, this.asset);\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTrade>> {\n    if (this.account) {\n      return this.heat.api.getAccountTrades(this.account, this.currency, this.asset, firstIndex, lastIndex);\n    }\n    return this.heat.api.getTrades(this.currency, this.asset, firstIndex, lastIndex);\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderBalances',\n  inputs: ['currencyInfo','assetInfo'],\n  template: `\n    <div layout=\"row\" class=\"trader-component-title\">Account&nbsp;\n      <span flex></span>\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n    </div>\n    <md-list>\n      <md-list-item class=\"header\">\n        <div class=\"truncate-col symbol-col\">Asset</div>\n        <div class=\"truncate-col balance-col right-align\" flex>Balance</div>\n      </md-list-item>\n      <md-virtual-repeat-container  flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\n        <md-list-item md-virtual-repeat=\"item in vm.balances\">\n          <div class=\"truncate-col symbol-col\" ng-class=\"{certified:item.certified}\">{{item.symbol}}</div>\n          <div class=\"truncate-col balance-col right-align\" ng-class=\"{certified:item.certified}\" flex>{{item.balance}}</div>\n        </md-list-item>\n      </md-virtual-repeat-container>\n    </md-list>\n  `\n})\n@Inject('$scope','heat','user','assetInfo','$q')\nclass TraderBalancesComponent {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n\n  balances: Array<IHeatAccountBalance> = [];\n\n  constructor(private $scope: angular.IScope,\n              private heat: HeatService,\n              private user: UserService,\n              private assetInfoService: AssetInfoService,\n              private $q: angular.IQService) {\n    let ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        /* subscribe to websocket balance changed events */\n        var refresh = utils.debounce((angular.bind(this, this.loadBalances)), 1*1000, false);\n        heat.subscriber.balanceChanged({account: user.account}, refresh, $scope);\n\n        this.loadBalances();\n        unregister.forEach(fn=>{fn()});\n      }\n    }\n    let unregister = [$scope.$watch('vm.currencyInfo',ready),$scope.$watch('vm.assetInfo',ready)];\n  }\n\n  loadBalances() {\n    this.heat.api.getAccountBalances(this.user.account, \"0\", 1, 0, 100).then((balances) => {\n      this.$scope.$evalAsync(() => {\n        var promises = []; // collects all balance lookup promises\n        this.balances = balances;\n        balances.forEach((balance: IHeatAccountBalance|any) => {\n          promises.push(\n            this.assetInfoService.getInfo(balance.id).then((info)=>{\n              this.$scope.$evalAsync(() => {\n                balance.symbol = info.symbol;\n                balance.name = info.name;\n                balance.certified = info.certified;\n              });\n            })\n          );\n          balance.symbol = '*';\n          balance.name = '*';\n          balance.balance = utils.formatQNT(balance.virtualBalance, balance.decimals).replace(/.00000000$/,'');;\n          //balance.balance = utils.formatQNT(balance.balance, balance.decimals);\n\n          if (this.currencyInfo.id == balance.id)\n            this.currencyInfo.userBalance = balance.virtualBalance;\n          if (this.assetInfo.id == balance.id)\n            this.assetInfo.userBalance = balance.virtualBalance;\n        });\n        this.$q.all(promises).then(()=>{\n          this.$scope.$evalAsync(() => {\n            balances.sort((a:any,b:any)=> {\n              if (a.certified < b.certified) return 1;\n              if (a.certified > b.certified) return -1;\n              if (a.symbol < b.symbol) return 1;\n              if (a.symbol > b.symbol) return -1;\n              return 0;\n            });\n          });\n        });\n      })\n    });\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare var techan: any, d3: any;\n@Component({\n  selector: 'traderChart',\n  inputs: ['currencyInfo', 'assetInfo'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" layout-align=\"end\" class=\"intervals\">\n        <div ng-class=\"{'selected':vm.filter=='ALL'}\" ng-click=\"vm.setFilter('ALL')\">All</div>\n        <div ng-class=\"{'selected':vm.filter=='ONE_MONTH'}\" ng-click=\"vm.setFilter('ONE_MONTH')\">1 Month</div>\n        <div ng-class=\"{'selected':vm.filter=='ONE_WEEK'}\" ng-click=\"vm.setFilter('ONE_WEEK')\">1 Week</div>\n        <div ng-class=\"{'selected':vm.filter=='ONE_DAY'}\" ng-click=\"vm.setFilter('ONE_DAY')\">1 Day</div>\n        <div ng-class=\"{'selected':vm.filter=='ONE_HOUR'}\" ng-click=\"vm.setFilter('ONE_HOUR')\">1 Hour</div>\n        <div ng-class=\"{'selected':vm.filter=='FIVE_MINUTES'}\" ng-click=\"vm.setFilter('FIVE_MINUTES')\">5 Minutes</div>\n        <div ng-class=\"{'selected':vm.filter=='ONE_MINUTE'}\" ng-click=\"vm.setFilter('ONE_MINUTE')\">1 Minutes</div>\n      </div>\n      <div layout=\"column\" flex layout-fill>\n        <div id=\"ohlcchart\" flex ng-if=\"vm.currencyInfo&&vm.assetInfo\"></div>\n      </div>\n    </div>\n  `,\n  link: function (scope, element, attrs, controller: TraderChartComponent) {\n    function loop() {\n      if (!controller.determineElementSize()) {\n        setTimeout(loop, 50);\n      }\n    }\n    setTimeout(loop, 50);\n  }\n})\n@Inject('$scope', 'heat', '$q', '$interval', '$window')\nclass TraderChartComponent {\n\n  // inputs\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n\n  interval: string = \"HOUR\"; // \"ONE_MINUTE\", \"FIVE_MINUTES\", \"TEN_MINUTES\", \"HOUR\", \"DAY\", \"WEEK\"\n  filter: string = 'ALL'; // 'ONE_MONTH', 'ONE_WEEK', 'ONE_DAY', 'ONE_HOUR', 'FIVE_MINUTES', 'ONE_MINUTE'\n  chart: {\n    closeLine: any,\n    close: any,\n    closeArea: any,\n    volumeLine: any,\n    volumeArea: any,\n    data: any,\n    x: any,\n    xAxis: any\n  } = { closeLine: null, close: null, closeArea: null, volumeLine: null, volumeArea: null, data: null, x: null, xAxis: null };\n\n  // we need these in order to know how big our svg should be\n  fullWidth: number;\n  fullHeight: number;\n\n  lastTrade: any;\n\n  refreshChartDelayed: (order) => void;\n\n  constructor(private $scope: angular.IScope,\n    private heat: HeatService,\n    private $q: angular.IQService,\n    private $interval: angular.IIntervalService,\n    private $window: angular.IWindowService) {\n    // have to wrap in function since currencyInfo and assetInfo are set after construction\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        // we need to only 1 time register the websocket listener\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\n        unregister.forEach(fn => fn());\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\n\n    let onresize = utils.debounce(() => { this.determineElementSize() }, 50);\n    angular.element($window).on('resize', onresize);\n    let interval = $interval(() => { this.checkForFlatline() }, 2000);\n    $scope.$on('$destroy', () => {\n      angular.element($window).off('resize', onresize);\n      $interval.cancel(interval);\n    });\n\n    this.refreshChartDelayed = utils.debounce(order => { this.refreshChart(order) }, 5 * 1000, false);\n  }\n\n  private determineElementSize(): boolean {\n    let ohlcchart = <HTMLElement>document.querySelector('#ohlcchart');\n    if (ohlcchart && ohlcchart.offsetWidth > 0 && ohlcchart.offsetHeight > 0) {\n      this.fullWidth = ohlcchart.clientWidth;\n      this.fullHeight = ohlcchart.clientHeight;\n      this.refresh();\n      return true;\n    }\n    return false;\n  }\n\n  private getOHLCChartData(): angular.IPromise<IHeatChart> {\n    if (this.filter === 'ONE_DAY' ||\n      this.filter === 'ONE_HOUR' ||\n      this.filter === 'FIVE_MINUTES' ||\n      this.filter === 'ONE_MINUTE') {\n      this.interval = 'ONE_MINUTE'\n    } else {\n      this.interval = 'HOUR'\n    }\n    return this.heat.api.getOHLCChartData(this.currencyInfo.id, this.assetInfo.id, this.interval);\n  }\n\n  private subscribeToOrderEvents(currency: string, asset: string) {\n    this.heat.subscriber.order({ currency: currency, asset: asset }, (order: IHeatOrder) => {\n      this.refreshChartDelayed(order);\n    }, this.$scope);\n  }\n\n  private refreshChart(order) {\n    if (order.unconfirmed === false) {\n      let price = parseInt(order.price)\n      let OHLCChartItemData = {\n        close: price,\n        date: new Date(),\n        high: price,\n        low: price,\n        open: price,\n        volume: parseInt(order.quantity)\n      }\n      this.update(OHLCChartItemData)\n    }\n  }\n\n  private checkForFlatline() {\n    if (this.chart.data && this.chart.data.length > 0) {\n      let lastDate = this.chart.data[this.chart.data.length - 1].date.getTime()\n      let now = new Date().getTime()\n      let diff = (now - lastDate) / 1000\n      if (diff > 2) {\n        let lastPrice = this.chart.data[this.chart.data.length - 1].close\n        let OHLCChartItemData = {\n          close: lastPrice,\n          date: new Date(),\n          high: lastPrice,\n          low: lastPrice,\n          open: lastPrice,\n          volume: 0\n        }\n        this.update(OHLCChartItemData)\n      }\n    }\n  }\n\n  public setInterval(interval) {\n    this.interval = interval;\n    this.refresh();\n  }\n\n  public setFilter(filter) {\n    this.filter = filter;\n    this.refresh();\n  }\n\n  public update(OHLCChartItemData: any) {\n    this.lastTrade = OHLCChartItemData\n    this.chart.data.push(OHLCChartItemData)\n    d3.select(\".close-line\")\n      .attr(\"d\", this.chart.closeLine)\n      .attr(\"transform\", null)\n      .transition()\n\n    d3.select(\".close-area\")\n      .attr(\"d\", this.chart.closeArea)\n      .attr(\"transform\", null)\n      .transition()\n\n    d3.select(\".volume-line\")\n      .attr(\"d\", this.chart.volumeLine)\n      .attr(\"transform\", null)\n      .transition()\n\n    d3.select(\".volume-area\")\n      .attr(\"d\", this.chart.volumeArea)\n      .attr(\"transform\", null)\n      .transition()\n\n    let filterDate = this.getFilterDateTime(this.filter)\n    let startDate = new Date(filterDate.valueOf())\n    if (this.filter == 'ALL') {\n      startDate = this.chart.data[0].date\n    }\n    this.chart.x.domain([startDate, new Date()]);\n\n    d3.selectAll(\"g.x.axis\").call(this.chart.xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-0.5em\")\n      .attr(\"dy\", \"-0.05em\")\n      .attr(\"transform\", \"rotate(-90)\");\n\n    if (this.chart.data[0].date < filterDate) {\n      this.chart.data.shift();\n    }\n  }\n\n  public refresh() {\n    this.getOHLCChartData().then((heatChart: IHeatChart) => {\n      let margin = { top: 20, right: 80, bottom: 60, left: 50 },\n        width = this.fullWidth - margin.left - margin.right,\n        height = this.fullHeight - margin.top - margin.bottom;\n\n      let yClose = d3.scaleLinear()\n        .range([height, 0]);\n      let yVolume = d3.scaleLinear()\n        .range([height, 0]);\n\n      let tickFormat\n      if (this.filter === 'ONE_DAY' ||\n        this.filter === 'ONE_HOUR' ||\n        this.filter === 'FIVE_MINUTES' ||\n        this.filter === 'ONE_MINUTE') {\n        tickFormat = '%H:%M:%S'\n      } else {\n        tickFormat = \"%m-%d\"\n      }\n\n      this.chart.x = d3.scaleTime()\n        .range([0, width])\n\n      var volume = techan.plot.volume()\n        .accessor(techan.accessor.ohlc())\n        .xScale(this.chart.x)\n        .yScale(yVolume);\n\n      this.chart.close = techan.plot.close()\n        .xScale(this.chart.x)\n        .yScale(yClose);\n\n      this.chart.xAxis = d3.axisBottom()\n        .scale(this.chart.x)\n        .tickSize(-height)\n        .tickFormat(d3.timeFormat(tickFormat))\n\n      let yCloseAxis = d3.axisLeft()\n        .scale(yClose)\n        .ticks(6)\n\n      let yVolumeAxis = d3.axisRight()\n        .scale(yVolume)\n        .tickFormat(d3.formatPrefix(\",.0\", 1e6))\n        .ticks(6)\n\n      d3.selectAll('svg').remove();\n\n      let svg = d3.select(\"#ohlcchart\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      let accessor = this.chart.close.accessor();\n      let filterDate = this.getFilterDateTime(this.filter)\n      this.chart.data = [];\n      heatChart.data.forEach((d) => {\n        /**\n         *\n         [0] timestamp, // number timestamp in HEAT epoch format\n          [1] avg, // string or number if < 9007199254740991\n          [2] low, // string or number if < 9007199254740991\n          [3] high, // string or number if < 9007199254740991\n          [4] vol, // string or number if < 9007199254740991\n          [5] open, // string or number if < 9007199254740991\n          [6] close // string or number if < 9007199254740991\n          */\n\n        let itemDate = utils.timestampToDate(d[0]);\n\n        if (itemDate >= filterDate) {\n          this.chart.data.push({\n            date: itemDate,\n            open: +d[5],\n            high: +d[3],\n            low: +d[2],\n            close: +d[6],\n            volume: +d[4]/10\n          });\n        }\n      });\n\n      this.chart.data.sort(function (a, b) {\n        return d3.ascending(accessor.d(a), accessor.d(b));\n      });\n\n      svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\");\n\n      svg.append(\"g\")\n        .attr(\"class\", \"yClose axis\")\n\n      svg.append(\"g\")\n        .attr(\"class\", \"yVolume axis\")\n\n      let focus = svg.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n      focus.append(\"line\").attr(\"class\", \"x--line\")\n        .style(\"stroke\", \"#FFFFFF\")\n        .attr(\"stroke-width\", \"1px\")\n        .attr(\"y1\", -height)\n        .attr(\"y2\", 0);\n\n      focus.append(\"line\").attr(\"class\", \"y--line\")\n        .style(\"stroke\", \"#FFFFFF\")\n        .attr(\"stroke-width\", \"1px\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", width);\n\n      focus.append(\"text\")\n        .attr('id', 'xyValues')\n        .attr(\"x\", 0)\n        .attr(\"y\", -15)\n        .attr(\"dy\", \".35em\")\n        .style(\"fill\", \"white\")\n\n      focus.append(\"text\")\n        .attr('id', 'volumeValue')\n        .attr(\"x\", 0)\n        .attr(\"y\", -5)\n        .attr(\"dy\", \".35em\")\n        .style(\"fill\", \"white\")\n\n      svg.append(\"rect\").attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"mouseover\", function () { focus.style(\"display\", null); })\n        .on(\"mouseout\", function () { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n      let x = this.chart.x;\n      let filter = this.filter;\n\n      let bisectDate = d3.bisector(function (d) { return d.date; }).left;\n      let data = this.chart.data;\n      function mousemove() {\n\n        let x0 = x.invert(d3.mouse(this)[0]),\n          i = bisectDate(data, x0, 1),\n          d0 = data[i - 1],\n          d1 = data[i],\n          d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n\n        let xCoordinate = d.date;\n        let yCoordinate = d.close;\n        let yCoordinateRightAxis = d.volume / 1000000;\n\n        focus.select(\".x--line\")\n          .attr(\"transform\", \"translate(\" + x(d.date) + \",\" + (height) + \")\");\n        focus.select(\".y--line\")\n          .attr(\"transform\", \"translate(\" + (0) + \",\" + yClose(yCoordinate) + \")\");\n        let xText;\n        let dd = xCoordinate.getDate();\n        let MM = xCoordinate.getMonth();\n        let yyyy = xCoordinate.getFullYear();\n        let hh = xCoordinate.getHours();\n        let mm = xCoordinate.getMinutes();\n        let ss = xCoordinate.getSeconds();\n\n        if (dd < 10) dd = '0' + dd;\n        if (MM + 1 < 10) MM = '0' + (MM + 1);\n        if (hh < 10) hh = '0' + hh;\n        if (mm < 10) mm = '0' + mm;\n        if (ss < 10) ss = '0' + ss;\n\n        if (filter === 'ONE_DAY' ||\n          filter === 'ONE_HOUR' ||\n          filter === 'FIVE_MINUTES' ||\n          filter === 'ONE_MINUTE') {\n          xText = `${hh}:${mm}:${ss}`\n        } else {\n          xText = `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`\n        }\n        focus.select(\"#xyValues\").text(`${xText}, ${yCoordinate.toFixed(3)}`);\n        if (yCoordinateRightAxis) {\n          focus.select(\"#volumeValue\").text(`Volume: ${yCoordinateRightAxis.toFixed(3)}`);\n        }\n\n      }\n\n      let startDate = new Date(filterDate.valueOf())\n      if (this.filter == 'ALL') {\n        startDate = new Date(this.chart.data[0].date.valueOf())\n      }\n\n      yClose.domain(techan.scale.plot.ohlc(this.chart.data, this.chart.close.accessor()).domain());\n      yVolume.domain(techan.scale.plot.volume(this.chart.data, this.chart.close.accessor().v).domain());\n\n      let itemDate\n      if (this.chart.data.length > 0) {\n        this.lastTrade = this.chart.data[this.chart.data.length - 1]\n        itemDate = new Date(this.chart.data[this.chart.data.length - 1].date.valueOf())\n      } else {\n        itemDate = new Date(startDate.valueOf())\n      }\n      if (this.filter === 'ONE_HOUR' ||\n        this.filter === 'FIVE_MINUTES' ||\n        this.filter === 'ONE_MINUTE') {\n        let now = new Date()\n        while (itemDate <= now) {\n          this.chart.data.push({\n            date: new Date(itemDate.valueOf()),\n            open: this.lastTrade.close,\n            high: this.lastTrade.close,\n            low: this.lastTrade.close,\n            close: this.lastTrade.close,\n            volume: 0\n          })\n          itemDate.setSeconds(itemDate.getSeconds() + 2);\n        }\n        yClose.domain([this.lastTrade.close - 5000, this.lastTrade.close + 5000]);\n      }\n\n      this.chart.x.domain([startDate, new Date()]);\n\n      var defs = svg.append(\"defs\");\n\n      // Create the \"volume\" graph.\n      this.chart.volumeArea = d3.area()\n        .x((d) => { return this.chart.x(d.date); })\n        .y0(height)\n        .y1((d) => { return yVolume(d.volume); })\n        .curve(d3.curveStep)\n\n      var volumeGradient = defs.append(\"linearGradient\")\n        .attr(\"id\", \"svgVolumeGradient\")\n        .attr(\"x1\", \"0%\")\n        .attr(\"x2\", \"0%\")\n        .attr(\"y1\", \"100%\")\n        .attr(\"y2\", \"40%\");\n\n      volumeGradient.append(\"stop\")\n        .attr('class', 'start')\n        .attr(\"offset\", \"0%\")\n        .attr(\"stop-color\", \"#223141\")\n        .attr(\"stop-opacity\", 0.1);\n\n      volumeGradient.append(\"stop\")\n        .attr('class', 'end')\n        .attr(\"offset\", \"100%\")\n        .attr(\"stop-color\", \"#4e5fd3\")\n        .attr(\"stop-opacity\", 0.2);\n\n      svg.append(\"path\")\n        .datum(this.chart.data)\n        .attr(\"class\", \"volume-area\")\n        .attr(\"fill\", \"url(#svgVolumeGradient)\")\n        .attr(\"d\", this.chart.volumeArea);\n\n      this.chart.volumeLine = d3.line()\n        .x((d) => { return this.chart.x(d.date); })\n        .y((d) => { return yVolume(d.volume); })\n        .curve(d3.curveStep)\n\n      svg.append(\"path\")\n        .datum(this.chart.data)\n        .attr(\"class\", \"volume-line\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#4e5fd3\")\n        .attr(\"stroke-width\", \"1px\")\n        .attr(\"d\", this.chart.volumeLine)\n\n      // // Create the \"close\" graph.\n      this.chart.closeArea = d3.area()\n        .x((d) => { return this.chart.x(d.date); })\n        .y0(height)\n        .y1((d) => { return yClose(d.close); })\n        .curve(d3.curveLinear)\n\n      var closeGradient = defs.append(\"linearGradient\")\n        .attr(\"id\", \"svgCloseGradient\")\n        .attr(\"x1\", \"0%\")\n        .attr(\"x2\", \"0%\")\n        .attr(\"y1\", \"100%\")\n        .attr(\"y2\", \"40%\");\n\n      closeGradient.append(\"stop\")\n        .attr('class', 'start')\n        .attr(\"offset\", \"0%\")\n        .attr(\"stop-color\", \"#223141\")\n        .attr(\"stop-opacity\", 0.1);\n\n      closeGradient.append(\"stop\")\n        .attr('class', 'end')\n        .attr(\"offset\", \"100%\")\n        .attr(\"stop-color\", \"#ea543d\")\n        .attr(\"stop-opacity\", 0.2);\n\n      svg.append(\"path\")\n        .datum(this.chart.data)\n        .attr(\"class\", \"close-area\")\n        .attr(\"fill\", \"url(#svgCloseGradient)\")\n        .attr(\"d\", this.chart.closeArea);\n\n      this.chart.closeLine = d3.line()\n        .x((d) => { return this.chart.x(d.date); })\n        .y((d) => { return yClose(d.close); })\n        .curve(d3.curveLinear)\n\n      svg.append(\"path\")\n        .datum(this.chart.data)\n        .attr(\"class\", \"close-line\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#ea543d\")\n        .attr(\"stroke-width\", \"1px\")\n        .attr(\"d\", this.chart.closeLine)\n\n      svg.selectAll(\"g.x.axis\").call(this.chart.xAxis)\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"-0.5em\")\n        .attr(\"dy\", \"-0.05em\")\n        .attr(\"transform\", \"rotate(-90)\");\n\n      svg.selectAll(\"g.x.axis\")\n        .selectAll(\"line\")\n        .style(\"stroke-opacity\", \"0.4\")\n        .style('stroke-width', '0.5px')\n\n      svg.selectAll(\"g.yClose.axis\").call(yCloseAxis)\n\n      svg.selectAll(\"g.yVolume.axis\")\n        .attr(\"transform\", \"translate( \" + width + \", 0 )\")\n        .call(yVolumeAxis)\n    });\n  }\n\n  public getFilterDateTime(filter) {\n    let filterDate = new Date()\n    switch (filter) {\n      case 'ONE_MONTH':\n        filterDate.setMonth(filterDate.getMonth() - 1)\n        break;\n      case 'ONE_WEEK':\n        filterDate.setDate(filterDate.getDate() - 7)\n        break;\n      case 'ONE_DAY':\n        filterDate.setDate(filterDate.getDate() - 1)\n        break;\n      case 'ONE_HOUR':\n        filterDate.setHours(filterDate.getHours() - 1)\n        break;\n      case 'FIVE_MINUTES':\n        filterDate.setMinutes(filterDate.getMinutes() - 5)\n        break;\n      case 'ONE_MINUTE':\n        filterDate.setMinutes(filterDate.getMinutes() - 1)\n        break;\n      default:\n        filterDate.setFullYear(filterDate.getFullYear() - 100)\n        break;\n    }\n    return filterDate\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderInfoAssetDescription',\n  inputs: ['currencyInfo','assetInfo'],\n  template: `\n    <div class=\"asset-container\">\n      <div class=\"asset-description\">\n        <div class=\"col\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Asset name:\n            </div>\n            <div class=\"value\">\n              <a ng-click=\"vm.showDescription($event, vm.currencyInfo)\">{{vm.currencyInfo.name}}</a>\n            </div>\n          </div>\n          <div class=\"col-item issued-by\">\n            <div class=\"title\">\n              Issuer:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/explorer-account/{{vm.currencyIssuer}}/transactions\">{{vm.currencyIssuerPublicName||vm.currencyIssuer}}</a>\n            </div>\n          </div>\n          <div class=\"col-item launched\">\n            <div class=\"title\">\n              Certified:\n            </div>\n            <div class=\"value\">\n              <md-icon ng-class=\"{iscertified:vm.currencyInfo.certified}\" md-font-library=\"material-icons\">{{vm.currencyInfo.certified?'check':'not_interested'}}</md-icon>\n              <span ng-if=\"vm.currencyInfo.certified == true\">Yes</span>\n              <span ng-if=\"vm.currencyInfo.certified == false\">No</span>\n            </div>\n          </div>\n          <div class=\"col-item id\">\n            <div class=\"title\">\n              Launched:\n            </div>\n            <div class=\"value\">\n              {{vm.currencyLaunched}}\n            </div>\n          </div>\n          <div class=\"col-item depositWithdraw\" ng-if=\"vm.currencyInfo.id != '0' && vm.currencyInfo.certified && vm.user.unlocked\">\n            <md-button class=\"md-primary\" ng-click=\"vm.showDeposit($event, vm.currencyInfo)\">Deposit {{vm.currencyInfo.symbol}}</md-button>\n            <md-button class=\"md-warn\" ng-click=\"vm.showWithdraw($event, vm.currencyInfo)\">Withdraw {{vm.currencyInfo.symbol}}</md-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"asset-description\">\n        <div class=\"col\">\n          <div class=\"col-item header\">\n            <div class=\"title\">\n              Asset name:\n            </div>\n            <div class=\"value\">\n              <a ng-click=\"vm.showDescription($event, vm.assetInfo)\">{{vm.assetInfo.name}}</a>\n            </div>\n          </div>\n          <div class=\"col-item issued-by\">\n            <div class=\"title\">\n              Issuer:\n            </div>\n            <div class=\"value\">\n              <a href=\"#/explorer-account/{{vm.assetIssuer}}/transactions\">{{vm.assetIssuerPublicName||vm.assetIssuer}}</a>\n            </div>\n          </div>\n          <div class=\"col-item launched\">\n            <div class=\"title\">\n              Certified:\n            </div>\n            <div class=\"value\">\n              <md-icon ng-class=\"{iscertified:vm.assetInfo.certified}\" md-font-library=\"material-icons\">{{vm.assetInfo.certified?'check':'not_interested'}}</md-icon>\n              <span ng-if=\"vm.assetInfo.certified===true\">Yes</span>\n              <span ng-if=\"vm.assetInfo.certified===false\">No</span>\n            </div>\n          </div>\n          <div class=\"col-item id\">\n            <div class=\"title\">\n              Launched:\n            </div>\n            <div class=\"value\">\n              {{vm.assetLaunched}}\n            </div>\n          </div>\n          <div class=\"col-item depositWithdraw\" ng-if=\"vm.assetInfo.id != '0' && vm.assetInfo.certified && vm.user.unlocked\">\n            <md-button class=\"md-primary\" ng-click=\"vm.showDeposit($event, vm.assetInfo)\">Deposit {{vm.assetInfo.symbol}}</md-button>\n            <md-button class=\"md-warn\" ng-click=\"vm.showWithdraw($event, vm.assetInfo)\">Withdraw {{vm.assetInfo.symbol}}</md-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','settings','assetInfo','$q','heat','user','assetWithdraw')\nclass TraderInfoAssetDescriptionComponent {\n\n  // inputs\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n\n  currencyIssuer: string;\n  currencyIssuerPublicName: string;\n  assetIssuer: string;\n  assetIssuerPublicName: string;\n  currencyLaunched: string;\n  assetLaunched: string;\n\n  constructor(private $scope: angular.IScope,\n              private settings: SettingsService,\n              private assetInfoService: AssetInfoService,\n              private $q: angular.IQService,\n              private heat: HeatService,\n              public user: UserService,\n              private assetWithdraw: AssetWithdrawService) {\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        this.$scope.$evalAsync(()=> {\n          this.currencyIssuer = this.currencyInfo.issuer;\n          this.currencyIssuerPublicName = this.currencyInfo.issuerPublicName;\n          this.currencyLaunched = dateFormat(utils.timestampToDate(this.currencyInfo.timestamp), format);\n          this.assetIssuer = this.assetInfo.issuer;\n          this.assetIssuerPublicName = this.assetInfo.issuerPublicName;\n          this.assetLaunched = dateFormat(utils.timestampToDate(this.assetInfo.timestamp), format);\n        });\n        unregister.forEach(fn => fn());\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n  }\n\n  showDescription($event, info: AssetInfo) {\n    dialogs.assetInfo($event, info);\n  }\n\n  showDeposit($event, info: AssetInfo) {\n    dialogs.depositAsset($event, info);\n  }\n\n  showWithdraw($event, info: AssetInfo) {\n    if (this.currencyInfo.id != '0') {\n      this.assetWithdraw.dialog($event, info).then((dialog)=> {\n        dialog.show();\n      });\n    }\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderInfo',\n  inputs: ['currencyInfo','assetInfo','toggleMarkets','marketsSidenavOpen'],\n  template: `\n    <div>\n      <div class=\"top-row\">\n        <div class=\"market-title\">\n          <span>\n            <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\n              <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\n              <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\n            </md-button>\n          </span>\n          <span class=\"market-title-text\">\n            <span ng-class=\"{certified:vm.currencyInfo.certified}\">{{vm.currencyInfo.symbol}}</span>/<span ng-class=\"{certified:vm.assetInfo.certified}\">{{vm.assetInfo.symbol}}</span>\n          </span>\n        </div>\n      </div>\n      <trader-info-asset-description currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-info-asset-description>\n    </div>\n  `\n})\nclass TraderInfoComponent {\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  toggleMarkets: Function; // @input (controls the parent component markets sidenav)\n  marketsSidenavOpen: boolean; // @input (bound to parent component markets sidenav md-is-open)\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderListItemLoading',\n  template: `\n    <div>\n      <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\n    </div>\n  `\n})\nclass TraderListItemLoadingComponent {}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n@Component({\n  selector: 'traderMarkets',\n  template: `\n    <div class=\"trader-component-title\" layout=\"row\">Markets&nbsp;\n      <span flex></span>\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      <a ng-if=\"!isTestnet\" ng-click=\"vm.toggleShowCertified()\" class=\"configure\">Show {{vm.showCertified?'uncertified':'certified only'}}</a>\n    </div>\n    <input type=\"text\" placeholder=\"Search markets\" ng-model=\"vm.filter\" ng-change=\"vm.onFilterChange()\"></input>\n    <md-list flex layout-fill layout=\"column\">\n      <md-list-item>\n        <div class=\"truncate-col market-col\">Market</div>\n        <div class=\"truncate-col change-col\">Change</div>\n        <div class=\"truncate-col price-col\">Price</div>\n        <div class=\"truncate-col vol-col\" flex>Vol</div>\n      </md-list-item>\n      <md-virtual-repeat-container flex layout-fill layout=\"column\"\n          virtual-repeat-flex-helper ng-if=\"vm.markets.length>0\">\n        <md-list-item md-virtual-repeat=\"item in vm.markets | filter: vm.filterFunc\">\n          <div class=\"truncate-col market-col\">\n            <a href=\"#/trader/{{item.currency}}/{{item.asset}}\">\n              <span ng-class=\"{certified:item.currencyInfo.certified}\">{{item.currencyInfo.symbol}}</span>/<span ng-class=\"{certified:item.assetInfo.certified}\">{{item.assetInfo.symbol}}</span>\n            </a>\n          </div>\n          <div class=\"truncate-col change-col\">{{item.change}}</div>\n          <div class=\"truncate-col price-col\">{{item.price}}</div>\n          <div class=\"truncate-col vol-col right-align\" flex>{{ item.vol }}</div>\n        </md-list-item>\n      </md-virtual-repeat-container>\n    </md-list>\n  `\n})\n\n@Inject('$scope','heat','assetInfo','storage','$q','$mdToast','$interval')\nclass TraderMarketsComponent {\n\n  // change, volume, price, none\n  sort: string = 'change';\n  asc: boolean = true;\n  filter: string = '';\n  filterFunc: Function;\n\n  showCertified = sessionStorage.getItem('trader.markets.showUncertified')!='true';\n  preMarkets: Array<IHeatMarket> = [null, null]; //initialized to be not equals this.markets\n  markets: Array<IHeatMarket> = [];\n  showFakeMarketsWarning = true;\n\n  constructor(private $scope: angular.IScope,\n              private heat: HeatService,\n              private assetInfo: AssetInfoService,\n              private storage: StorageService,\n              private $q: angular.IQService,\n              private $mdToast: angular.material.IToastService,\n              private $interval: angular.IIntervalService) {\n    this.filterFunc = (item) => this.filterFuncImpl(item);\n    var refresh = utils.debounce(angular.bind(this, this.loadMarkets), 5*1000, false);\n    heat.subscriber.trade({}, refresh, $scope);\n    this.loadMarkets();\n\n    let interval = $interval(()=>{\n      this.loadMarkets();\n    }, 20*1000, 0, false);\n    $scope.$on('$destroy',()=>{$interval.cancel(interval)});\n  }\n\n  loadMarkets() {\n    this.heat.api.getMarketsAll(this.sort, this.asc, \"0\", 1, 0, 100).then((markets) => {\n      this.$scope.$evalAsync(() => {\n        if ( this.matchToPreMarkets(markets) )\n          return //do not to do extra job\n        this.markets = markets\n        var promises = []; // collects all balance lookup promises\n        this.markets.forEach((market: IHeatMarket|any) => {\n          promises.push(\n            this.assetInfo.getInfo(market.currency).then((info)=>{\n              this.$scope.$evalAsync(() => {\n                market.currencyInfo = info;\n              });\n            })\n          );\n          promises.push(\n            this.assetInfo.getInfo(market.asset).then((info)=>{\n              this.$scope.$evalAsync(() => {\n                market.assetInfo = info;\n              });\n            })\n          );\n          market.change = `${(parseFloat(market.hr24Change)>0?'+':'')}${market.hr24Change}%`;\n          market.price = utils.formatQNT(market.lastPrice, market.currencyDecimals);\n          market.vol = utils.commaFormat(Math.round(parseInt(utils.convertToQNTf(market.hr24AssetVolume))) + '');\n          market.currencyInfo = {symbol:'*'};\n          market.assetInfo = {symbol:'*'};\n        });\n        this.$q.all(promises).then(()=>{\n          this.$scope.$evalAsync(() => {\n            this.markets.sort((a:any,b:any)=> {\n              return this.compareMarket(a,b);\n            });\n          })\n        });\n\n        /* PATCHUP IN AWAITING OF SERVER FUNCTIONALITY - also cleanup toolbar.ts */\n\n        let traderStorage = this.storage.namespace('trader');\n        let mymarkets = traderStorage.enabled ? traderStorage.get('my-markets') : null;\n        if (angular.isArray(mymarkets)) {\n          mymarkets = mymarkets.filter((m)=>!this.markets.find((_m)=>_m.currency==m.currency.id&&_m.asset==m.asset.id));\n          this.storage.namespace('trader').put('my-markets', mymarkets);\n          /* {currency:{id: currency,symbol: currencySymbol},\n              asset:{id:asset,symbol: assetSymbol}} */\n          var showWarning = false;\n          mymarkets.forEach((m) => {\n            if (m.currency && m.asset) {\n              showWarning = true;\n              this.markets.push(<any>{\n                currency: m.currency.id,\n                asset: m.asset.id,\n                change: '*',\n                price: '*',\n                vol: '*',\n                currencyInfo: {symbol:m.currency.symbol},\n                assetInfo: {symbol:m.asset.symbol}\n              })\n            }\n          });\n\n          if (showWarning && this.showFakeMarketsWarning) {\n            this.showFakeMarketsWarning = false;\n            this.$mdToast.show(\n              this.$mdToast.simple()\n                .textContent(\"You must send at least one buy or sell order for the market to become visible in the HEAT network.\")\n                .hideDelay(6000)\n            );\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * check if loaded markets match to pre loaded markets\n   */\n  matchToPreMarkets(markets: Array<IHeatMarket>) {\n    let result = true\n    if (this.preMarkets.length != markets.length) {\n      result = false\n    } else {\n      for (let i = 0; i < markets.length; ++i) {\n        let market = markets[i]\n        let found = false\n        for (let k = 0; k < this.preMarkets.length; ++k) {\n          let pre = this.preMarkets[k]\n          if (pre != null && market.asset == pre.asset && market.currency == pre.currency) {\n            found = true\n            if (market.lastPrice != pre.lastPrice || market.hr24Change != pre.hr24Change\n              || market.hr24AssetVolume != pre.hr24AssetVolume || market.hr24CurrencyVolume != pre.hr24CurrencyVolume\n              || market.hr24High != pre.hr24High || market.hr24Low != pre.hr24Low) {\n              result = false\n              break\n            }\n          }\n        }\n        if (!found || !result) {\n          result = false\n          break\n        }\n      }\n    }\n    this.preMarkets = markets\n    return result\n  }\n\n  isSpecialMarket(market: IHeatMarket) {\n    return market.currency == '5592059897546023466' && market.asset == '0';\n  }\n\n  /**\n   * ON TOP: Markets where both assets are CERTIFIED, in alphabetical order (only one market BTC/HEAT for now)\n   * BELOW THAT: Markets where one asset is certified, in alphabetical order (BTC/FIMK on top)\n   * BELOW THAT: The rest of markets in alphabetical order\n   */\n  compareMarket(a: IHeatMarket, b: IHeatMarket): number {\n    let currencyA = <AssetInfo>a['currencyInfo'];\n    let assetA = <AssetInfo>a['assetInfo'];\n    let currencyB = <AssetInfo>b['currencyInfo'];\n    let assetB = <AssetInfo>b['assetInfo'];\n\n    // special case btc/heat always at top.\n    if (this.isSpecialMarket(a) && !this.isSpecialMarket(b)) return -1;\n    if (!this.isSpecialMarket(a) && this.isSpecialMarket(b)) return 1;\n\n    let bothCertifiedA = currencyA.certified && assetA.certified;\n    let bothCertifiedB = currencyB.certified && assetB.certified;\n    if (bothCertifiedA && bothCertifiedB) {\n      return this.compareMarketAlphabetical(a, b);\n    }\n    if (bothCertifiedA != bothCertifiedB) {\n      return bothCertifiedA ? -1 : 1;\n    }\n\n    let oneCertifiedA = currencyA.certified || assetA.certified;\n    let oneCertifiedB = currencyB.certified || assetB.certified;\n    if (oneCertifiedA && oneCertifiedB) {\n      return this.compareMarketAlphabetical(a, b);\n    }\n    if (oneCertifiedA != oneCertifiedB) {\n      return oneCertifiedA ? -1 : 1;\n    }\n    return this.compareMarketAlphabetical(a, b);\n  }\n\n  compareMarketAlphabetical(a: IHeatMarket, b: IHeatMarket): number {\n    let currencyA = <AssetInfo>a['currencyInfo'];\n    let assetA = <AssetInfo>a['assetInfo'];\n    let currencyB = <AssetInfo>b['currencyInfo'];\n    let assetB = <AssetInfo>b['assetInfo'];\n\n    if (currencyA.symbol < currencyB.symbol)\n      return -1;\n    if (currencyA.symbol > currencyB.symbol)\n      return 1;\n    if (assetA.symbol < assetB.symbol)\n      return -1;\n    if (assetA.symbol > assetB.symbol)\n      return 1;\n    return 0;\n  }\n\n  public onFilterChange() {\n    this.$scope.$evalAsync(() => {\n      this.markets = [].concat(this.markets);\n    });\n  }\n\n  toggleShowCertified() {\n    this.showCertified = !this.showCertified;\n    sessionStorage.setItem('trader.markets.showUncertified', this.showCertified?'false':'true');\n    this.$scope.$evalAsync(() => {\n      this.markets = [].concat(this.markets);\n    });\n  }\n\n  // filter function used in ng-repeat\n  private filterFuncImpl(market: IHeatMarket|any) {\n    if (this.filter) {\n      let mask = this.filter.toUpperCase();\n      if (!\n            (market.assetInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\n             market.assetInfo.name.toUpperCase().indexOf(mask) >= 0 ||\n            (market.assetInfo.description !== null && market.assetInfo.description.toUpperCase().indexOf(mask) >= 0) ||\n             market.currencyInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\n             market.currencyInfo.name.toUpperCase().indexOf(mask) >= 0 ||\n            (market.currencyInfo.description !== null && market.currencyInfo.description.toUpperCase().indexOf(mask) >= 0))\n         )\n      {\n        return false;\n      }\n    }\n    if (this.showCertified && !heat.isTestnet) {\n      if (market.currency != \"0\") {\n        if (!market.currencyInfo || !market.currencyInfo.certified) {\n          return false;\n        }\n      }\n      if (market.asset != \"0\") {\n        if (!market.assetInfo || !market.assetInfo.certified) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n}\n","///<reference path='../../VirtualRepeatComponent.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderOrdersBuy',\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\n  template: `\n    <script type=\"text/ng-template\" id=\"popover.html\">\n      <div class=\"account-popover\">\n        <a href=\"#/explorer-account/{{item.account}}/transactions\">{{item.account||item.accountName}}</a>\n      </div>\n    </script>\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Buyers&nbsp;\n        <span flex></span>\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.currencyBalance}}&nbsp;{{vm.currencyInfo.symbol}}</span>\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col info-col\"></div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col quantity-col\">Quantity</div>\n          <div class=\"truncate-col total-col\">Total</div>\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\n            <div class=\"truncate-col info-col\">\n              <div\n                class=\"info\"\n                angular-popover\n                direction=\"right\"\n                template-url=\"popover.html\"\n                mode=\"mouseover\"\n                style=\"position: absolute;\",\n              >\n              </div>\n              <img src=\"assets/info.png\">\n            </div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope', '$rootScope', 'ordersProviderFactory', '$q', 'heat', 'user')\nclass TraderOrdersBuyComponent extends VirtualRepeatComponent {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  selectedOrder: IHeatOrder; // @input\n\n  currencyBalance: string = \"*\"; // formatted currency balance\n\n  PAGE_SIZE = 100; /* VirtualRepeatComponent @override */\n\n  private orders: Array<IHeatOrder> = [];\n\n  refreshGrid: () => void;\n  refreshBalance: () => void;\n\n  constructor(protected $scope: angular.IScope,\n    private $rootScope: angular.IScope,\n    private ordersProviderFactory: OrdersProviderFactory,\n    $q: angular.IQService,\n    private heat: HeatService,\n    private user: UserService) {\n    super($scope, $q);\n\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n\n        /* initialize virtual repeat component */\n        this.initializeVirtualRepeat(\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, false),\n\n          /* decorator */\n          (order: IHeatOrder | any, context: any) => {\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.assetInfo.decimals);\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\n            this.orders.push(order)\n          },\n\n          /* preprocessor */\n          (firstIndex: number, lastIndex: number, items: Array<IHeatOrder>) => {\n            items.forEach((order) => {\n              if (order['runningTotalQNT']) {\n                order['sum'] = utils.formatQNT(order['sumQNT'].toString(), this.currencyInfo.decimals);\n                order['runningTotal'] = utils.formatQNT(order['runningTotalQNT'].toString(), this.assetInfo.decimals);\n              }\n            });\n          }\n        );\n\n        /* stop watching the currenyInfo and assetInfo */\n        unregister.forEach(fn => fn());\n\n        /* listen to events */\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\n        this.subscribeToTradeEvents(this.currencyInfo.id, this.assetInfo.id);\n\n        if (this.user.unlocked) {\n          this.updateCurrencyBalance();\n          /* listen to balance events */\n          this.subscribeToBalanceEvents(this.user.account, this.currencyInfo.id);\n        }\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\n\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateCurrencyBalance), 2000, false);\n\n    $scope.$on('balance', (event, opts) => {\n      let price = parseInt(this.orders[0].price);\n      let totalQuantity = 0;\n      let balance = parseFloat(opts.balance);\n      for (let i = 0; i < this.orders.length; i++) {\n        totalQuantity += parseInt(this.orders[i].quantity);\n        if (totalQuantity >= balance) {\n          price = parseInt(this.orders[i].price);\n          break;\n        }\n      }\n      price = price/100000000;\n      let total = balance * (price);\n      this.$rootScope.$broadcast('price', { price, balance, total })\n    });\n  }\n\n  private broadcast() {\n    this.$rootScope.$broadcast('total', { total: this.currencyBalance })\n  }\n\n  private subscribeToOrderEvents(currency: string, asset: string) {\n    this.heat.subscriber.order({ currency: currency, asset: asset }, (order: IHeatOrder) => {\n      if (order.type == 'bid') {\n        this.refreshGrid();\n      }\n    }, this.$scope);\n  }\n\n  private subscribeToTradeEvents(currency: string, asset: string) {\n    this.heat.subscriber.trade({ currency: currency, asset: asset }, () => {\n      this.refreshGrid();\n    }, this.$scope);\n  }\n\n  private subscribeToBalanceEvents(account: string, currency: string) {\n    this.heat.subscriber.balanceChanged({ account: account, currency: currency }, this.refreshBalance, this.$scope);\n  }\n\n  onSelect(selectedOrder) {\n    this.selectedOrder = selectedOrder;\n  }\n\n  updateCurrencyBalance() {\n    this.heat.api.getAccountBalanceVirtual(this.user.account, this.currencyInfo.id, \"0\", 1).then((balance) => {\n      this.$scope.$evalAsync(() => {\n        this.currencyBalance = utils.formatQNT(balance.virtualBalance, this.currencyInfo.decimals);\n      });\n    }, () => {\n      this.$scope.$evalAsync(() => {\n        this.currencyBalance = \"0\";\n      });\n    })\n  }\n}\n","///<reference path='../../VirtualRepeatComponent.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderOrdersMy',\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.user.unlocked?'My':'All'}} pending orders&nbsp;\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col type-col\">Type</div>\n          <div class=\"truncate-col market-col\">Market</div>\n          <div class=\"truncate-col quantity-col\">Quantity</div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col total-col\">Total ({{vm.currencyInfo.symbol}})</div>\n          <div class=\"truncate-col expires-col\" flex>Expires</div>\n          <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\"></div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\"\n              ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\n            <div class=\"truncate-col type-col\">{{item.typeDisplay}}</div>\n            <div class=\"truncate-col market-col\">{{item.market}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\n            <div class=\"truncate-col expires-col\" flex tooltip=\"{{item.expires}}\">{{item.expires}}</div>\n            <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\">\n              <a ng-if=\"!item.cancelled && !item.unconfirmed\" ng-click=\"vm.cancelOrder(item)\">Cancel</a>\n            </div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope','ordersProviderFactory','$q','user','settings','cancelBidOrder','cancelAskOrder','heat')\nclass TraderOrdersMyComponent extends VirtualRepeatComponent  {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  oneClickOrders: boolean; // @input\n\n  refreshGrid: ()=>void;\n\n  constructor(protected $scope: angular.IScope,\n              private ordersProviderFactory: OrdersProviderFactory,\n              $q: angular.IQService,\n              public user: UserService,\n              settings: SettingsService,\n              private cancelBidOrder: CancelBidOrderService,\n              private cancelAskOrder: CancelAskOrderService,\n              private heat: HeatService)\n  {\n    super($scope, $q);\n\n    var format = settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n\n        /* initialize virtual repeat component */\n        this.initializeVirtualRepeat(\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, user.account),\n\n          /* decorator function */\n          (order: any|IHeatOrder) => {\n            order.typeDisplay = order.type == 'ask' ? 'Sell' : 'Buy';\n            order.market = this.currencyInfo.symbol + '/' + this.assetInfo.symbol;\n            order.quantityDisplay = utils.formatQNT(order.quantity, this.assetInfo.decimals);\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.quantity, order.price);\n            order.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\n            var date = utils.timestampToDate(order.expiration);\n            order.expires = dateFormat(date, format);\n          }\n        );\n\n        /* stop watching the currenyInfo and assetInfo */\n        unregister.forEach(fn => fn());\n\n        /* listen to order events */\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 1000, false);\n  }\n\n  private subscribeToOrderEvents(currency: string, asset: string) {\n    var filter = {currency: currency, asset: asset, account: this.user.account};\n    this.heat.subscriber.order(filter, (order: IHeatOrder) => {\n      this.refreshGrid();\n    }, this.$scope);\n  }\n\n  onSelect(item) {}\n\n  cancelOrder(order: IHeatOrder) {\n    var dialog = order.type == 'ask' ?\n      this.cancelAskOrder.dialog(order.order):\n      this.cancelBidOrder.dialog(order.order);\n    if (this.oneClickOrders)\n      dialog.send()\n    else\n      dialog.show()\n  }\n}\n","///<reference path='../../VirtualRepeatComponent.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderOrdersSell',\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\n  template: `\n    <script type=\"text/ng-template\" id=\"templateId.tml\">\n      <div class=\"account-popover\">\n        <a href=\"#/explorer-account/{{item.account}}/transactions\">{{item.account||item.accountName}}</a>\n      </div>\n    </script>\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Sellers&nbsp;\n        <span flex></span>\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.assetBalance}}&nbsp;{{vm.assetInfo.symbol}}</span>\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item  class=\"header\">\n          <div class=\"truncate-col info-col\"></div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col quantity-col\">Quantity</div>\n          <div class=\"truncate-col total-col\">Total</div>\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper class=\"content\">\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\n           <div class=\"truncate-col info-col\">\n             <div\n              class=\"info\"\n              angular-popover\n              direction=\"right\"\n              template-url=\"templateId.tml\"\n              mode=\"mouseover\"\n              style=\"position: absolute;\">\n             </div>\n             <img src=\"assets/info.png\">\n           </div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope', '$rootScope', 'ordersProviderFactory', '$q', 'heat', 'user')\nclass TraderOrdersSellComponent extends VirtualRepeatComponent {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  selectedOrder: IHeatOrder; // @input\n\n  assetBalance: string = \"*\"; // formatted asset balance\n\n  PAGE_SIZE = 100; /* VirtualRepeatComponent */\n\n  private orders: Array<IHeatOrder> = [];\n\n  refreshGrid: () => void;\n  refreshBalance: () => void;\n\n  constructor(protected $scope: angular.IScope,\n    private $rootScope: angular.IScope,\n    private ordersProviderFactory: OrdersProviderFactory,\n    $q: angular.IQService,\n    private heat: HeatService,\n    private user: UserService) {\n    super($scope, $q);\n\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n\n        /* initialize virtual repeat component */\n        this.initializeVirtualRepeat(\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, true),\n\n          /* decorator */\n          (order: IHeatOrder | any, context: any) => {\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.assetInfo.decimals);\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\n            this.orders.push(order);\n          },\n\n          /* preprocessor */\n          (firstIndex: number, lastIndex: number, items: Array<IHeatOrder>) => {\n            items.forEach((order) => {\n              if (order['runningTotalQNT']) {\n                order['sum'] = utils.formatQNT(order['sumQNT'].toString(), this.currencyInfo.decimals);\n                order['runningTotal'] = utils.formatQNT(order['runningTotalQNT'].toString(), this.assetInfo.decimals);\n              }\n            });\n          }\n        );\n\n        /* listen to events */\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\n        this.subscribeToTradeEvents(this.currencyInfo.id, this.assetInfo.id);\n\n        unregister.forEach(fn => fn());\n        if (this.user.unlocked) {\n          this.updateAssetBalance();\n          /* listen to balance events */\n          this.subscribeToBalanceEvents(this.user.account, this.assetInfo.id);\n        }\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\n\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateAssetBalance), 2000, false);\n\n    $scope.$on('total', (event, opts) => {\n      let price = parseInt(this.orders[0].price);\n      let totalQuantity = 0;\n      let total = parseFloat(opts.total);\n      for (let i = 0; i < this.orders.length; i++) {\n        totalQuantity += (parseFloat(this.orders[i].quantity)/100000000);\n        if (totalQuantity >= total) {\n          price = parseInt(this.orders[i].price);\n          break;\n        }\n      }\n      price = price/100000000;\n      let balance = total / price;\n      this.$rootScope.$broadcast('price', { price, balance, total })\n    });\n  }\n\n  private broadcast() {\n    this.$rootScope.$broadcast('balance', { balance: this.assetBalance })\n  }\n\n  private subscribeToOrderEvents(currency: string, asset: string) {\n    this.heat.subscriber.order({ currency: currency, asset: asset }, (order: IHeatOrder) => {\n      if (order.type == 'ask') {\n        this.refreshGrid();\n      }\n    }, this.$scope);\n  }\n\n  private subscribeToTradeEvents(currency: string, asset: string) {\n    this.heat.subscriber.trade({ currency: currency, asset: asset }, () => {\n      this.refreshGrid();\n    }, this.$scope);\n  }\n\n  private subscribeToBalanceEvents(account: string, currency: string) {\n    this.heat.subscriber.balanceChanged({ account: account, currency: currency }, this.refreshBalance, this.$scope);\n  }\n\n  onSelect(selectedOrder) {\n    this.selectedOrder = selectedOrder;\n  }\n\n  updateAssetBalance() {\n    this.heat.api.getAccountBalanceVirtual(this.user.account, this.assetInfo.id, \"0\", 1).then((balance) => {\n      this.$scope.$evalAsync(() => {\n        this.assetBalance = utils.formatQNT(balance.virtualBalance, this.assetInfo.decimals);\n      });\n    }, () => {\n      this.$scope.$evalAsync(() => {\n        this.assetBalance = \"0\";\n      });\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 208 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nheat.Loader.directive(\"maxDecimals\", ['$mdToast', ($mdToast) => {\n  return {\n    require: 'ngModel',\n    link: function (scope, elem, attr, ngModel) {\n\n      var decimals;\n      var notifyUser = utils.debounce(() => {\n        $mdToast.show(\n          $mdToast.simple().textContent(`Too many decimals, max ${decimals} allowed`).hideDelay(3000)\n        )\n      }, 500, true);\n\n      //For DOM -> model validation\n      ngModel.$parsers.unshift(function (value) {\n        decimals = parseInt(attr.maxDecimals);\n        var valid = !utils.hasToManyDecimals(value, decimals);\n        ngModel.$setValidity('decimals', valid);\n        if (!valid) {\n          notifyUser();\n        }\n        return valid ? value : undefined;\n      });\n    }\n  }\n}]);\n\n@Component({\n  selector: 'traderQuickBuySell',\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder', 'oneClickOrders'],\n  template: `\n    <div>\n      <div class=\"trader-component-title\">Buy/Sell&nbsp;<elipses-loading ng-show=\"vm.loading\"></elipses-loading></div>\n      <form name=\"quickBuySellForm\">\n        <div class=\"row\">\n          <div class=\"label\">\n            Unit price\n          </div>\n          <div class=\"input\">\n            <input id=\"trader-quick-buy-sell-price-input\" type=\"text\" ng-model=\"vm.price\" required max-decimals=\"{{vm.currencyInfo.decimals}}\"\n              ng-change=\"vm.recalculate()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n          </div>\n          <div class=\"label\">\n            {{vm.currencyInfo.symbol}} / {{vm.assetInfo.symbol}}\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"label\">\n            Amount\n          </div>\n          <div class=\"input\">\n            <input id=\"trader-quick-buy-sell-quantity-input\" type=\"text\" ng-model=\"vm.quantity\" required max-decimals=\"{{vm.assetInfo.decimals}}\"\n              ng-change=\"vm.recalculate()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n          </div>\n          <div class=\"label\">\n            {{vm.assetInfo.symbol}}\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"label\">\n            Fees\n          </div>\n          <div class=\"fee input\">\n            {{vm.fee}}\n          </div>\n          <div class=\"label\">\n            HEAT\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"label\" ng-class=\"{'expires-invalid': !vm.expiryValid}\">\n            Expires in\n          </div>\n          <div class=\"input\">\n            <input type=\"number\" ng-model=\"vm.expiryUnitsValue\" required name=\"expiry\"\n                      ng-change=\"vm.expiryUnitsValueChanged()\"\n                      min=\"{{vm.expiryUnitsOptions[vm.expiryUnits].min}}\"\n                      max=\"{{vm.expiryUnitsOptions[vm.expiryUnits].max}}\"\n                      ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n          </div>\n          <div class=\"label\">\n            <md-menu>\n              <a ng-click=\"$mdMenu.open($event)\">\n                <md-tooltip>{{vm.expiresTooltip}}</md-tooltip>\n                {{vm.expiryUnitsOptions[vm.expiryUnits].label}}\n              </a>\n              <md-menu-content width=\"4\">\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='minutes';vm.expiryUnitsValueChanged()\">Minutes</md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='hours';vm.expiryUnitsValueChanged()\">Hours</md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='days';vm.expiryUnitsValueChanged()\">Days</md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='weeks';vm.expiryUnitsValueChanged()\">Weeks</md-button>\n                </md-menu-item>\n              </md-menu-content>\n            </md-menu>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"label\">\n            Total\n          </div>\n          <div class=\"input\">\n            <input type=\"text\" id=\"trader-quick-buy-sell-total-input\" ng-model=\"vm.total\" required max-decimals=\"{{vm.currencyInfo.decimals}}\"\n              ng-change=\"vm.recalculateTotal()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n          </div>\n          <div class=\"label\">\n            {{vm.currencyInfo.symbol}}\n          </div>\n        </div>\n        <div ng-hide=\"vm.user.unlocked\" class=\"row bottom-row\">\n          <md-button class=\"md-primary\" aria-label=\"Sign in\" href=\"#/login\">\n            Sign in to trade\n          </md-button>\n        </div>\n        <div ng-show=\"vm.user.unlocked\" class=\"row bottom-row\">\n          <div>\n            <md-button class=\"md-primary\" aria-label=\"Buy\" ng-click=\"vm.quickBid($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\n              BUY\n            </md-button>\n          </div>\n          <div>\n            <md-switch ng-model=\"vm.oneClickOrders\" aria-label=\"1-click orders\" class=\"md-primary\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n              <span ng-show=\"vm.oneClickOrders\"><b>1-click orders enabled</b></span><span ng-hide=\"vm.oneClickOrders\">1-click orders disabled</span>\n            </md-switch>\n          </div>\n          <div>\n            <md-button class=\"md-warn\" aria-label=\"Sell\" ng-click=\"vm.quickAsk($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\n              SELL\n            </md-button>\n          </div>\n        </div>\n      </form>\n    </div>\n  `\n})\n@Inject('$scope', '$q', '$mdToast', 'placeAskOrder', 'placeBidOrder', 'user', 'settings')\nclass TraderQuickBuySellComponent {\n\n  // inputs\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  selectedOrder: IHeatOrder; // @input\n  oneClickOrders: boolean; // @input\n\n  quantity: string = '0';\n  price: string = '0';\n  total: string = null;\n  fee: string = utils.formatQNT(HeatAPI.fee.standard, 8); // fee in HEAT\n  isTestnet: boolean;\n\n  EXPIRY_MIN = 3600;\n  EXPIRY_MAX = 3600 * 24 * 30;\n\n  expiryUnitsOptions = {\n    'minutes': {\n      label: 'Minutes',\n      min: Math.round(this.EXPIRY_MIN / 60),\n      max: Math.round(this.EXPIRY_MAX / 60),\n      delta: 60\n    },\n    'hours': {\n      label: 'Hours',\n      min: Math.round(this.EXPIRY_MIN / (60 * 60)),\n      max: Math.round(this.EXPIRY_MAX / (60 * 60)),\n      delta: 60 * 60\n    },\n    'days': {\n      label: 'Days',\n      min: 1,\n      max: 30,\n      delta: (60 * 60 * 24)\n    },\n    'weeks': {\n      label: 'Weeks',\n      min: 1,\n      max: 4,\n      delta: (60 * 60 * 24 * 7)\n    }\n  }\n  expiryUnits = 'days';\n  expiryUnitsValue = 30;\n  expiry: number;\n  expiryValid: boolean;\n  expiresTooltip: string = '';\n\n  // displays the toast in debounce wrapper\n  notifyUser: (text: string) => void;\n\n  constructor(private $scope: angular.IScope,\n    private $q: angular.IQService,\n    private $mdToast: angular.material.IToastService,\n    private placeAskOrder: PlaceAskOrderService,\n    private placeBidOrder: PlaceBidOrderService,\n    public user: UserService,\n    private settings: SettingsService) {\n\n    $scope.$on('price', (event, opts) => {\n      this.price = opts.price.toFixed(8);\n      this.quantity = opts.balance.toFixed(8);\n      this.total = opts.total.toFixed(8);\n    })\n\n    $scope.$watch('vm.selectedOrder', () => {\n      if (this.selectedOrder) {\n        this.quantity = this.selectedOrder['runningTotal'];\n        this.price = utils.formatQNT(this.selectedOrder.price, this.currencyInfo.decimals);\n        this.total = this.selectedOrder['sum'];\n\n        if (this.selectedOrder.type == 'bid' && angular.isString(this.assetInfo.userBalance)) {\n          let quantityQNT = new Big(utils.convertToQNT(utils.unformat(this.quantity)));\n          let balanceQNT = new Big(this.assetInfo.userBalance);\n          if (balanceQNT.lt(quantityQNT)) {\n            this.quantity = utils.formatQNT(this.assetInfo.userBalance, 8);\n            this.recalculate();\n          }\n        }\n        else if (this.selectedOrder.type == 'ask' && angular.isString(this.currencyInfo.userBalance)) {\n          let totalQNT = new Big(utils.convertToQNT(utils.unformat(this.total)));\n          let balanceQNT = new Big(this.currencyInfo.userBalance);\n          if (balanceQNT.lt(totalQNT)) {\n            this.total = utils.formatQNT(this.currencyInfo.userBalance, 8);\n            this.recalculateTotal();\n          }\n        }\n      }\n    });\n    this.isTestnet = heat.isTestnet;\n\n    this.notifyUser = utils.debounce((text: string) => {\n      $mdToast.show($mdToast.simple().textContent(text).hideDelay(3000));\n    }, 500, true);\n    this.expiryUnitsValueChanged(true);\n  }\n\n  expiryUnitsValueChanged(suppressNotification?: boolean) {\n    this.expiry = parseInt(this.expiryUnitsValue + '') * this.expiryUnitsOptions[this.expiryUnits].delta;\n    this.expiryValid = false;\n    this.expiresTooltip = '';\n\n    if (this.expiry <= this.EXPIRY_MAX && this.expiry >= this.EXPIRY_MIN) {\n      this.expiryValid = true;\n      let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n      let date = new Date(Date.now() + (this.expiry * 1000));\n      let dateFormatted = dateFormat(date, format);\n      this.expiresTooltip = `This order will expiry if (even partially) unfilled by ${dateFormatted}`;\n    }\n    else {\n      let min = this.expiryUnitsOptions[this.expiryUnits].min;\n      let max = this.expiryUnitsOptions[this.expiryUnits].max;\n      let units = this.expiryUnitsOptions[this.expiryUnits].label;\n      this.expiresTooltip = `Min expiry in ${units} is ${min}, max expiry in ${units} is ${max}`;\n      this.notifyUser(this.expiresTooltip);\n    }\n  }\n\n  quickAsk($event) {\n    if (angular.isString(this.assetInfo.userBalance)) {\n      let quantityQNT = new Big(utils.convertToQNT(utils.unformat(this.quantity)));\n      let balanceQNT = new Big(this.assetInfo.userBalance);\n      if (balanceQNT.lt(quantityQNT)) {\n        this.notifyUser(`Insufficient ${this.assetInfo.symbol} balance`);\n        return;\n      }\n    }\n    var dialog = this.placeAskOrder.dialog(this.currencyInfo, this.assetInfo, utils.unformat(this.price),\n      utils.unformat(this.quantity), parseInt(this.expiry + ''), true, $event);\n    if (this.oneClickOrders)\n      dialog.send()\n    else\n      dialog.show()\n  }\n\n  quickBid($event) {\n    if (angular.isString(this.currencyInfo.userBalance)) {\n      let totalQNT = new Big(utils.convertToQNT(utils.unformat(this.total)));\n      let balanceQNT = new Big(this.currencyInfo.userBalance);\n      if (balanceQNT.lt(totalQNT)) {\n        this.notifyUser(`Insufficient ${this.currencyInfo.symbol} balance`);\n        return;\n      }\n    }\n    var dialog = this.placeBidOrder.dialog(this.currencyInfo, this.assetInfo, utils.unformat(this.price),\n      utils.unformat(this.quantity), parseInt(this.expiry + ''), true, $event);\n    if (this.oneClickOrders)\n      dialog.send()\n    else\n      dialog.show()\n  }\n\n  calculateTotalPrice() {\n    try {\n      var price = utils.unformat(this.price) || \"0\";\n      var quantity = utils.unformat(this.quantity) || \"0\";\n      if (price == \"0\" || quantity == \"0\") {\n        return \"\";\n      }\n      else {\n        var quantityQNT = utils.convertToQNT(quantity);\n        var priceQNT = utils.convertToQNT(price);\n        var totalQNT = utils.calculateTotalOrderPriceQNT(quantityQNT, priceQNT);\n        return utils.formatQNT(totalQNT, this.currencyInfo.decimals, true);\n      }\n    } catch (e) {\n      return \"\";\n    }\n  }\n\n  // user edited quantity or price - recalculate total.\n  recalculate() {\n    this.total = this.calculateTotalPrice();\n  }\n\n  // user edited total - recalculate quantity based on provided price\n  recalculateTotal() {\n    try {\n      var price = utils.unformat(this.price) || \"0\";\n      var total = utils.unformat(this.total) || \"0\";\n      if (price == \"0\" || total == \"0\") {\n        this.quantity = \"0\";\n      }\n      else {\n        this.quantity = new Big(total).div(new Big(price)).toFixed(this.assetInfo.decimals).toString();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","///<reference path='../../VirtualRepeatComponent.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderTradeHistory',\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\n  template: `\n  <script type=\"text/ng-template\" id=\"popoverHistory.html\">\n    <div class=\"account-popover\">\n      <div>Buyer: <a href=\"#/explorer-account/{{item.buyer}}/transactions\">{{item.buyerName||item.buyer}}</a></div>\n      <div>Seller: <a href=\"#/explorer-account/{{item.seller}}/transactions\">{{item.sellerName||item.seller}}</a></div>\n    </div>\n  </script>\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">Past trades&nbsp;\n        <span flex></span>\n        <span layout=\"row\" ng-if=\"vm.user.unlocked\" class=\"selector\">\n          <label>\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"all\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\n            <i>Show all trades</i>\n          </label>\n          <label>\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"my\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\n            <i>Show my trades</i>\n          </label>\n        </span>\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col info-col\"></div>\n          <div class=\"truncate-col type-col\">Type</div>\n          <div class=\"truncate-col time-col\" flex>Time</div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col quantity-col\">{{vm.assetInfo.symbol}}</div>\n          <div class=\"truncate-col total-col\" flex>Total ({{vm.currencyInfo.symbol}})</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" ng-class=\"{'virtual': item.virtual}\">\n            <div class=\"truncate-col info-col\">\n              <div\n                class=\"info\"\n                angular-popover\n                direction=\"right\"\n                template-url=\"popoverHistory.html\"\n                mode=\"mouseover\"\n                style=\"position: absolute;\">\n              </div>\n              <img src=\"assets/info.png\">\n            </div>\n            <div class=\"truncate-col type-col\">{{item.type}}</div>\n            <div class=\"truncate-col time-col\" flex>{{item.time}}</div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col total-col\" flex>{{item.total}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope', '$window', 'tradesProviderFactory','$q','user','settings','heat')\nclass TraderTradeHistoryComponent extends VirtualRepeatComponent  {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  oneClickOrders: boolean; // @input\n\n  showTheseTrades: string = \"all\";\n\n  constructor(protected $scope: angular.IScope,\n              private $window: ng.IWindowService,\n              private tradesProviderFactory: TradesProviderFactory,\n              $q: angular.IQService,\n              private user: UserService,\n              private settings: SettingsService,\n              private heat: HeatService)\n  {\n    super($scope, $q);\n\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        this.createProvider();\n        unregister.forEach(fn => fn());\n\n        /* reload on new trade */\n        var refresh = utils.debounce((angular.bind(this, this.determineLength)), 1*1000, false);\n        heat.subscriber.trade({}, (trade: IHeatTrade)=> {\n          if (trade.currency == this.currencyInfo.id && trade.asset == this.assetInfo.id) {\n            var account = this.showTheseTrades == 'all' ? null : this.user.account;\n            if (account) {\n              if (trade.seller != account && trade.buyer != account) {\n                return;\n              }\n            }\n            refresh();\n          }\n        }, $scope);\n\n        /* reload on block popped */\n        heat.subscriber.blockPopped({}, refresh, $scope);\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n  }\n\n  createProvider() {\n    let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    if (this.$window.innerWidth < 870) {\n      format = this.settings.get(SettingsService.TIMEFORMAT_DEFAULT);\n    }\n    var account = this.showTheseTrades == 'all' ? null : this.user.account;\n    this.initializeVirtualRepeat(\n      this.tradesProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, account),\n\n      /* decorator function */\n      (trade: IHeatTrade|any) => {\n        var date = utils.timestampToDate(trade.timestamp);\n        trade.time = dateFormat(date, format);\n        if (account) {\n          trade.type = trade.seller == account ? 'Sell' : 'Buy'\n        }\n        else {\n          trade.type = trade.isBuy ? 'Buy' : 'Sell';\n        }\n        trade.priceDisplay = utils.formatQNT(trade.price, this.currencyInfo.decimals);\n        trade.quantityDisplay = utils.formatQNT(trade.quantity, this.assetInfo.decimals);\n        var totalQNT = utils.calculateTotalOrderPriceQNT(trade.quantity, trade.price);\n        trade.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\n        trade.virtual = trade.block == \"0\";\n      }\n    );\n  }\n\n  onSelect(item) {}\n\n  updateView() {\n    if (this.currencyInfo && this.assetInfo) {\n      this.createProvider();\n    }\n  }\n  onResize() {\n    this.updateView()\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderTrollbox',\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div class=\"trader-component-title\">Trollbox&nbsp;\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n<!--\n        <a href=\"https://t.me/joinchat/Bs91sA3agGFXqLaZwWMogg\" target=\"_blank\">Join Telegram!\n          <md-tooltip md-direction=\"bottom\">\n            This trollbox is connected to our Telegram #trollbox channel, post either here or on #trollbox and chat in realtime.\n          </md-tooltip>\n        </a>\n-->\n<!--\n        <a href=\"https://heat-slack.herokuapp.com\" target=\"_blank\">Join Slack!\n          <md-tooltip md-direction=\"bottom\">\n            This trollbox is connected to our Slack #trollbox channel, post either here or on #trollbox and chat in realtime.\n          </md-tooltip>\n        </a>\n-->\n      </div>\n      <div layout=\"row\">\n        <div flex>\n          <input type=\"text\" placeholder=\"Type your name here\" ng-model=\"vm.name\"\n                  ng-disabled=\"!vm.user.unlocked\"></input>\n        </div>\n        <div>\n          <button class=\"md-primary md-button md-ink-ripple\" ng-click=\"vm.joinChat()\" ng-disabled=\"!vm.name || vm.trollbox.name\">Join</button>\n        </div>\n      </div>\n      <div layout=\"column\" flex>\n        <ul class=\"display\" scroll-glue>\n          <li ng-repeat=\"item in vm.messages\">\n            <span><a ng-if=\"item.account\" href=\"#/explorer-account/{{item.account}}/transactions\">{{item.name}}</a>\n            <b ng-if=\"!item.account\">{{item.username}}</b>: {{item.text}}</span>\n          </li>\n        </ul>\n      </div>\n      <div layout=\"row\">\n        <textarea rows=\"2\" ng-keypress=\"vm.onTextAreaKeyPress($event)\"\n          ng-disabled=\"!vm.user.unlocked || !vm.trollbox.name\"\n          placeholder=\"ENTER to send, SHIFT+ENTER for new line\" ng-model=\"vm.messageText\"></textarea>\n      </div>\n    </div>\n  `\n})\n@Inject('$q', '$scope','trollbox','$timeout','user')\nclass TraderTrollboxComponent {\n  private name: string;\n  private messageText: string;\n  public messages: Array<TrollboxServiceMessage> = [];\n  private nameRegexp = /^(.+)\\s\\[(\\d+)\\]$/;\n\n  constructor(public $q: angular.IQService,\n              private $scope: angular.IScope,\n              private trollbox: TrollboxService,\n              private $timeout: angular.ITimeoutService,\n              private user: UserService) {\n\n    // do not use  $q.all(trollbox.getMessages())  because some promise may be rejected, so get messages sequentially\n    trollbox.getMessages().forEach(promise => {\n      promise.then((messages) => {\n      $scope.$evalAsync(() => {\n          //console.log('messages', messages);\n          let ar = messages.map(message => {\n          return this.augmentMessage(message);\n        });\n          this.messages = this.messages.concat(ar);\n          //console.log('this messages', this.messages);\n        });\n      });\n    });\n\n    trollbox.subscribe((event)=> {\n      $scope.$evalAsync(() => {\n        if (angular.isObject(event) && angular.isString(event.username) && angular.isString(event.text)) {\n          if (event.username.length > 0 && event.text.length > 0) {\n            this.messages.push(this.augmentMessage(event));\n          }\n        }\n      });\n    }, $scope);\n\n    if (angular.isString(user.accountName)) {\n      this.name = user.accountName.replace(/@heatwallet.com$/,\"\");\n    }\n  }\n\n  augmentMessage(message:TrollboxServiceMessage) {\n    if (message.username) {\n      let match = message.username.match(this.nameRegexp);\n      if (match) {\n        message['name'] = match[1];\n        message['account'] = match[2];\n      }\n    }\n    try {\n      message['text'] = decodeURIComponent(message['text']);\n    } catch (e) {}\n    return message;\n  }\n\n  joinChat() {\n    this.trollbox.join(this.name);\n  }\n\n  onTextAreaKeyPress($event: KeyboardEvent) {\n    if ($event.keyCode == 13 && !$event.shiftKey && utils.emptyToNull(this.messageText)) {\n      this.trollbox.sendMessage(this.messageText);\n      this.$scope.$evalAsync(()=>{\n        this.messageText = null;\n      })\n    }\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n@Component({\n  selector: 'traderVolume',\n  inputs: ['currencyInfo','assetInfo'],\n  template: `\n    <div layout=\"row\" flex layout-fill layout-align=\"end\">\n      <div class=\"label\">24h change</div>\n      <div class=\"value\">{{vm.hr24Change}}</div>\n      <div class=\"label\">24h high</div>\n      <div class=\"value\">{{vm.hr24High}}</div>\n      <div class=\"label\">24h low</div>\n      <div class=\"value\">{{vm.hr24Low}}</div>\n      <div class=\"label\">24h vol</div>\n      <div class=\"value\">{{vm.hr24CurrencyVolume}}</div>\n      <div class=\"label\">24h vol</div>\n      <div>{{vm.hr24AssetVolume}}</div>\n    </div>\n  `\n})\n@Inject('$scope','heat','$interval')\nclass TraderVolumeComponent {\n\n  // inputs\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n\n  hr24Change: string;\n  hr24High: string;\n  hr24Low: string;\n  hr24CurrencyVolume: string;\n  hr24AssetVolume: string;\n\n  constructor(private $scope: angular.IScope, private heat: HeatService, private $interval: angular.IIntervalService) {\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        unregister.forEach(fn => fn());\n        this.loadMarket();\n\n        let interval = $interval(()=>{\n          this.loadMarket();\n        }, 10*1000, 0, false);\n        $scope.$on('$destroy',()=>{$interval.cancel(interval)});\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n  }\n\n  loadMarket() {\n    this.heat.api.getMarket(this.currencyInfo.id, this.assetInfo.id, \"0\", 1).then((market) => {\n      this.$scope.$evalAsync(() => {\n        this.hr24Change = `${(parseFloat(market.hr24Change)>0?'+':'')}${market.hr24Change}%`\n        this.hr24High = utils.formatQNT(market.hr24High, market.currencyDecimals);\n        this.hr24Low = utils.formatQNT(market.hr24Low, market.currencyDecimals);\n        this.hr24CurrencyVolume = utils.formatQNT(market.hr24CurrencyVolume, market.currencyDecimals) +' '+this.currencyInfo.symbol;\n        this.hr24AssetVolume = utils.formatQNT(market.hr24AssetVolume, market.assetDecimals) +' '+this.assetInfo.symbol;\n      });\n    });\n  }\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare var Big: any;\n@RouteConfig('/trader/:currency/:asset')\n@Component({\n  selector: 'trader',\n  inputs: ['currency','asset'],\n  template: `\n    <div layout=\"row\">\n      <!--\n      <div>\n        <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\n          <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\n          <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\n        </md-button>\n      </div>\n      -->\n      <span flex></span>\n      <trader-volume class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" layout=\"column\"></trader-volume>\n    </div>\n    <div layout=\"row\" flex layout-fill>\n      <md-sidenav class=\"md-sidenav-left\" md-component-id=\"trader-markets-sidenav\"\n          md-is-locked-open=\"vm.marketsSidenavLockedOpen\" md-is-open=\"vm.marketsSidenavOpen\"\n          md-disable-backdrop flex layout-fill>\n        <div class=\"sidenav-container\">\n          <trader-balances currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" ng-if=\"vm.user.unlocked\"></trader-balances>\n          <trader-markets></trader-markets>\n        </div>\n      </md-sidenav>\n      <div layout=\"column\" flex layout-fill class=\"main-display\">\n        <div>\n          <div ng-if=\"vm.showMarketNotCertified\">\n            <div class=\"top-warning\">CAUTION: This market comprises unverified asset from 3rd party outside the scope of Heat Ledger Ltd redemption gateway.</div>\n          </div>\n          <div class=\"trader-row top\">\n              <trader-info class=\"trader-component\" toggle-markets=\"vm.toggleMarkets\" markets-sidenav-open=\"vm.marketsSidenavOpen\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-info>\n              <trader-chart class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-chart>\n          </div>\n          <div class=\"trader-row middle\">\n            <trader-orders-buy class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-orders-buy>\n            <trader-quick-buy-sell class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-quick-buy-sell>\n            <trader-orders-sell class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"l></trader-orders-sell>\n          </div>\n          <div class=\"trader-row bottom\">\n            <trader-trade-history class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-trade-history>\n            <trader-orders-my ng-if=\"vm.user.unlocked\" class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-orders-my>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','user','$timeout','assetInfo','$mdSidenav')\nclass TraderComponent {\n\n  currency: string; // @input\n  asset: string; // @input\n\n  currencyInfo: AssetInfo;\n  assetInfo: AssetInfo;\n\n  oneClickOrders: boolean;\n\n  marketCurrency: string = \"0\";\n  marketSort: string = \"change\";\n  marketAsc: string = \"false\";\n\n  toggleMarkets: Function;\n  marketsSidenavOpen: boolean = true;\n  marketsSidenavLockedOpen: boolean = true;\n\n  selectedOrder: IHeatOrder; // the order currently selected in either buy-orders or sell-orders lists.\n  isTestnet: boolean;\n  showMarketNotCertified = undefined;\n\n  constructor(private $scope: angular.IScope,\n              public user: UserService,\n              private $timeout: angular.ITimeoutService,\n              private assetInfoService: AssetInfoService,\n              private $mdSidenav: angular.material.ISidenavService) {\n\n    /* @input this is passed as method to trader-info component which has the button to call this action */\n    this.toggleMarkets = () => {\n      var sidenav = this.$mdSidenav(\"trader-markets-sidenav\");\n      if (sidenav.isOpen()) {\n        this.marketsSidenavLockedOpen = false;\n        sidenav.close();\n      }\n      else {\n        this.marketsSidenavLockedOpen = true;\n        sidenav.open();\n      }\n    };\n\n    // lookup currency and asset info and pass as parameters to child components\n    assetInfoService.getInfo(this.currency).then((info) => {\n      $scope.$evalAsync(() => {\n        this.currencyInfo = info;\n      });\n    });\n    assetInfoService.getInfo(this.asset).then((info) => {\n      $scope.$evalAsync(() => {\n        this.assetInfo = info;\n      });\n    });\n\n    this.user.account = user.account || \"\";\n    this.isTestnet = heat.isTestnet;\n\n    let ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        this.showMarketNotCertified = !this.currencyInfo.certified||!this.assetInfo.certified;\n        unregister.forEach((fn)=>{fn()});\n      }\n    }\n    let unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n    setTimeout(()=>{\n      if (!angular.isDefined(this.showMarketNotCertified)) {\n        $scope.$evalAsync(()=>{\n          this.showMarketNotCertified = true;\n        })\n      }\n    }, 2000);\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2018 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nclass TokenBalance {\n  public isTokenBalance = true\n  public balance: string\n  public visible = false\n  constructor(public name: string, public symbol: string, public address: string) { }\n}\n\nclass CurrencyBalance {\n  public isCurrencyBalance = true\n  public balance: string\n  public inUse = false\n  public tokens: Array<TokenBalance> = []\n  public visible = false\n  walletEntry: WalletEntry\n  constructor(public name: string, public symbol: string, public address: string, public secretPhrase: string) { }\n\n  public unlock(noPathChange?: boolean) {\n    let user = <UserService>heat.$inject.get('user')\n    let $location = <angular.ILocationService>heat.$inject.get('$location')\n    let lightwalletService = <LightwalletService>heat.$inject.get('lightwalletService')\n    let bip44Compatible = lightwalletService.validSeed(this.secretPhrase)\n\n    /* Create the ICurrency based on the currency type */\n    let currency: ICurrency = null\n    if (this.name == 'Ethereum') {\n      currency = new ETHCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\n    }\n    else if (this.name == 'Bitcoin') {\n      currency = new BTCCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\n    }\n    else if (this.name == 'FIMK') {\n      currency = new FIMKCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\n    }\n    else if (this.name == 'NXT') {\n      currency = new NXTCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\n    }\n    else if (this.name == 'Iota') {\n      currency = new IOTACurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\n    }\n    else if (this.name == 'ARDOR') {\n      currency = new ARDRCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\n    }\n    else {\n      currency = new HEATCurrency(\n        this.walletEntry ? this.walletEntry.secretPhrase : this.secretPhrase,\n        this.secretPhrase,\n        this.address\n      )\n    }\n    user.unlock(this.secretPhrase, null, bip44Compatible, currency).then(\n      () => {\n        if (!noPathChange) {\n          $location.path(currency.homePath)\n          heat.fullApplicationScopeReload()\n        }\n      }\n    )\n  }\n}\n\nclass CurrencyAddressLoading {\n  public isCurrencyAddressLoading = true\n  public visible = false\n  public wallet: WalletType\n  constructor(public name: string) { }\n}\n\nclass CurrencyAddressCreate {\n  public isCurrencyAddressCreate = true\n  public visible = false\n  public hidden = true\n  public parent: WalletEntry\n  public flatten: () => void\n  constructor(public name: string, public wallet: WalletType) { }\n\n  private getStore() {\n    let storage = <StorageService>heat.$inject.get('storage')\n    let $rootScope = heat.$inject.get('$rootScope');\n    return storage.namespace('wallet', $rootScope, true)\n  }\n\n  private getCurrencies(account: string) {\n    let currencies = this.getStore().get(account)\n    if (!currencies)\n      currencies = []\n    return currencies;\n  }\n  private distinctValues = (value, index, self) => {\n    return self.indexOf(value) === index;\n  }\n  private addCurrency(account: string, currency: string) {\n    let store = this.getStore()\n    let currencies = this.getCurrencies(account)\n    currencies.push(currency)\n    store.put(account, currencies.filter(this.distinctValues));\n  }\n  /* Handler for creating a new address, this method is declared here (on the node so to say)\n    still after an architectural change where we dont display the CREATE node anymore.\n    We'll be leaving it in place where all you need to do is set this.hidden=false to\n    have it displayed again. */\n  createAddress(component: WalletComponent) {\n\n    // collect all CurrencyBalance of 'our' same currency type\n    let currencyBalances = this.parent.currencies.filter(c => c['isCurrencyBalance'] && c.name == this.name)\n\n    // if there is no address in use yet we use the first one\n    if (currencyBalances.length == 0) {\n      let nextAddress = this.wallet.addresses[0]\n      let newCurrencyBalance = new CurrencyBalance('Ethereum', 'ETH', nextAddress.address, nextAddress.privateKey)\n      component.rememberAdressCreated(this.parent.account, nextAddress.address)\n      newCurrencyBalance.visible = this.parent.expanded\n      this.flatten()\n      this.addCurrency(this.parent.account, 'ETH')\n      return true\n    }\n\n    // determine the first 'nxt' address based of the last currencyBalance displayed\n    let lastAddress = currencyBalances[currencyBalances.length - 1]['address']\n\n    // when the last address is not yet used it should be used FIRST before we allow the creation of a new address\n    if (!currencyBalances[currencyBalances.length - 1]['inUse']) {\n      return false\n    }\n\n    // look up the following address\n    for (let i = 0; i < this.wallet.addresses.length; i++) {\n\n      // we've found the address\n      if (this.wallet.addresses[i].address == lastAddress) {\n\n        // next address is the one - but if no more addresses we exit since not possible\n        if (i == this.wallet.addresses.length - 1)\n          return\n\n        let nextAddress = this.wallet.addresses[i + 1]\n        let newCurrencyBalance = new CurrencyBalance('Ethereum', 'ETH', nextAddress.address, nextAddress.privateKey)\n        component.rememberAdressCreated(this.parent.account, nextAddress.address)\n        newCurrencyBalance.visible = this.parent.expanded\n        let index = this.parent.currencies.indexOf(currencyBalances[currencyBalances.length - 1]) + 1\n        this.parent.currencies.splice(index, 0, newCurrencyBalance)\n        this.flatten()\n        this.addCurrency(this.parent.account, 'ETH')\n        return true\n      }\n    }\n\n    return false\n  }\n\n  createBtcAddress(component: WalletComponent) {\n\n    // collect all CurrencyBalance of 'our' same currency type\n    let currencyBalances = this.parent.currencies.filter(c => c['isCurrencyBalance'] && c.name == this.name)\n\n    // if there is no address in use yet we use the first one\n    if (currencyBalances.length == 0) {\n      let nextAddress = this.wallet.addresses[0]\n      let newCurrencyBalance = new CurrencyBalance('Bitcoin', 'BTC', nextAddress.address, nextAddress.privateKey)\n      component.rememberAdressCreated(this.parent.account, nextAddress.address)\n      newCurrencyBalance.visible = this.parent.expanded\n      this.flatten()\n      this.addCurrency(this.parent.account, 'BTC')\n      return true\n    }\n\n    // determine the first 'nxt' address based of the last currencyBalance displayed\n    let lastAddress = currencyBalances[currencyBalances.length - 1]['address']\n\n    // when the last address is not yet used it should be used FIRST before we allow the creation of a new address\n    if (!currencyBalances[currencyBalances.length - 1]['inUse']) {\n      return false\n    }\n\n    // look up the following address\n    for (let i = 0; i < this.wallet.addresses.length; i++) {\n\n      // we've found the address\n      if (this.wallet.addresses[i].address == lastAddress) {\n\n        // next address is the one - but if no more addresses we exit since not possible\n        if (i == this.wallet.addresses.length - 1)\n          return\n\n        let nextAddress = this.wallet.addresses[i + 1]\n        let newCurrencyBalance = new CurrencyBalance('Bitcoin', 'BTC', nextAddress.address, nextAddress.privateKey)\n        component.rememberAdressCreated(this.parent.account, nextAddress.address)\n        newCurrencyBalance.visible = this.parent.expanded\n        let index = this.parent.currencies.indexOf(currencyBalances[currencyBalances.length - 1]) + 1\n        this.parent.currencies.splice(index, 0, newCurrencyBalance)\n        this.flatten()\n        this.addCurrency(this.parent.account, 'BTC')\n        return true\n      }\n    }\n\n    return false\n  }\n\n  createFIMKAddress(component: WalletComponent) {\n\n    // collect all CurrencyBalance of 'our' same currency type\n    let currencyBalances = this.parent.currencies.filter(c => c['isCurrencyBalance'] && c.name == this.name)\n\n    // if there is no address in use yet we use the first one\n    if (currencyBalances.length == 0) {\n      let nextAddress = this.wallet.addresses[0]\n      let newCurrencyBalance = new CurrencyBalance('FIMK', 'FIM', nextAddress.address, nextAddress.privateKey)\n      component.rememberAdressCreated(this.parent.account, nextAddress.address)\n      newCurrencyBalance.visible = this.parent.expanded\n      this.flatten()\n      this.addCurrency(this.parent.account, 'FIM')\n      return true\n    }\n\n    return false\n  }\n\n  createNXTAddress(component: WalletComponent) {\n    let currencyBalances = this.parent.currencies.filter(c => c['isCurrencyBalance'] && c.name == this.name)\n    if (currencyBalances.length == 0) {\n      let nextAddress = this.wallet.addresses[0]\n      let newCurrencyBalance = new CurrencyBalance('NXT', 'NXT', nextAddress.address, nextAddress.privateKey)\n      component.rememberAdressCreated(this.parent.account, nextAddress.address)\n      newCurrencyBalance.visible = this.parent.expanded\n      this.flatten()\n      this.addCurrency(this.parent.account, 'NXT')\n      return true\n    }\n    return false\n  }\n\n  createARDRAddress(component: WalletComponent) {\n    let currencyBalances = this.parent.currencies.filter(c => c['isCurrencyBalance'] && c.name == this.name)\n    if (currencyBalances.length == 0) {\n      let nextAddress = this.wallet.addresses[0]\n      let newCurrencyBalance = new CurrencyBalance('ARDOR', 'ARDR', nextAddress.address, nextAddress.privateKey)\n      component.rememberAdressCreated(this.parent.account, nextAddress.address)\n      newCurrencyBalance.visible = this.parent.expanded\n      this.flatten()\n      this.addCurrency(this.parent.account, 'ARDR')\n      return true\n    }\n    return false\n  }\n}\n\nclass WalletEntry {\n  public isWalletEntry = true\n  public selected = true\n  public identifier: string\n  public secretPhrase: string\n  public bip44Compatible: boolean\n  public currencies: Array<CurrencyBalance | CurrencyAddressCreate | CurrencyAddressLoading> = []\n  public pin: string\n  public unlocked = false\n  public visible = true\n  public expanded = false\n  public btcWalletAddressIndex = 0\n  constructor(public account: string, public name: string, public component: WalletComponent) {\n    this.identifier = name ? `${name} | ${account}` : account\n  }\n\n  public toggle(forceVisible?: boolean) {\n    this.expanded = forceVisible || !this.expanded\n    this.currencies.forEach(curr => {\n      let currency = <any>curr\n      currency.visible = this.expanded\n      if (currency.tokens) {\n        currency.tokens.forEach(token => {\n          token.visible = this.expanded\n        })\n      }\n    })\n    if (this.expanded) {\n      this.component.loadEthereumAddresses(this);\n      this.component.loadBitcoinAddresses(this);\n      this.component.loadFIMKAddresses(this);\n      this.component.loadNXTAddresses(this);\n      this.component.loadARDORAddresses(this);\n      this.component.loadIotaAddresses(this);\n    }\n  }\n\n  showSecretPhrase() {\n    let panel: PanelService = heat.$inject.get('panel')\n    panel.show(`\n      <div layout=\"column\" flex class=\"toolbar-copy-passphrase\">\n        <md-input-container flex>\n          <textarea rows=\"2\" flex ng-bind=\"vm.secretPhrase\" readonly ng-trim=\"false\"></textarea>\n        </md-input-container>\n      </div>\n    `, {\n        secretPhrase: this.secretPhrase\n      })\n  }\n\n}\n\n@RouteConfig('/wallet')\n@Component({\n  selector: 'wallet',\n  template: `\n   <!--  layout-align=\"start center\" -->\n    <div layout=\"column\"  flex layout-padding>\n      <div layout=\"row\">\n\n        <!-- Open File input is hidden -->\n        <md-button class=\"md-primary md-raised\">\n          <md-tooltip md-direction=\"bottom\">Open wallet file, adds all contents</md-tooltip>\n          <label for=\"walet-input-file\">\n            Import File\n          </label>\n        </md-button>\n        <input type=\"file\" onchange=\"angular.element(this).scope().vm.pageAddFileInputChange(this.files)\" class=\"ng-hide\" id=\"walet-input-file\">\n\n        <!-- Adds a wallet seed (heat secret phrase or bip44 eth/btc seed) -->\n        <md-button class=\"md-primary md-raised\" ng-click=\"vm.importSeed()\" aria-label=\"Import Seed\">\n          <md-tooltip md-direction=\"bottom\">Import Seed</md-tooltip>\n          Import Seed/Private Key\n        </md-button>\n\n        <!-- Export Wallet to File -->\n        <md-button class=\"md-warn md-raised\" ng-click=\"vm.exportWallet()\" aria-label=\"Export Wallet\" ng-if=\"!vm.allLocked\">\n          <md-tooltip md-direction=\"bottom\">Export Wallet File</md-tooltip>\n          Export Wallet File\n        </md-button>\n\n        <md-select class=\"wallet-dropdown md-warn md-raised\" placeholder=\"Create Address\" ng-change=\"vm.createAccount($event)\" ng-model=\"vm.selectedChain\">\n          <md-option style=\"height: 30px;\"ng-repeat=\"entry in vm.chains\" value=\"{{entry.name}}\" ng-disabled=\"{{entry.disabled}}\">{{entry.name}}</md-option>\n        </md-select>\n      </div>\n\n      <div layout=\"column\" layout-fill  flex>\n        <div layout-fill layout=\"column\" class=\"wallet-entries\" flex>\n\n          <!-- Build a wallet structure that contains ::\n                - wallet entries\n                - per entry currency balances\n                - per currency token balances  -->\n\n          <md-list layout-fill layout=\"column\" flex>\n            <md-list-item ng-repeat=\"entry in vm.entries\" ng-if=\"entry.visible && !entry.hidden\">\n\n              <!-- Wallet entry -->\n              <div ng-if=\"entry.isWalletEntry\" layout=\"row\" class=\"wallet-entry\" flex>\n                <!--\n                <md-checkbox ng-model=\"entry.selected\">\n                  <md-tooltip md-direction=\"bottom\">\n                    Check this to include in wallet export\n                  </md-tooltip>\n                </md-checkbox>\n                -->\n                <md-button class=\"md-icon-button left\" ng-click=\"entry.toggle()\">\n                  <md-icon md-font-library=\"material-icons\">{{entry.expanded?'expand_less':'expand_more'}}</md-icon>\n                </md-button>\n\n                <div flex ng-if=\"entry.secretPhrase\" class=\"identifier\"><a ng-click=\"entry.toggle()\">{{entry.identifier}}</a></div>\n                <div flex ng-if=\"!entry.secretPhrase\" class=\"identifier\">{{entry.identifier}}</div>\n                <md-button ng-if=\"!entry.unlocked\" ng-click=\"vm.unlock($event, entry)\">Sign in</md-button>\n\n                <md-menu md-position-mode=\"target-right target\" md-offset=\"34px 34px\" ng-if=\"entry.unlocked\">\n                  <md-button aria-label=\"user menu\" class=\"md-icon-button right\" ng-click=\"$mdOpenMenu($event)\" md-menu-origin >\n                    <md-icon md-font-library=\"material-icons\">more_horiz</md-icon>\n                  </md-button>\n                  <md-menu-content width=\"4\">\n                    <md-menu-item>\n                      <md-button aria-label=\"explorer\" ng-click=\"entry.showSecretPhrase()\">\n                        <md-icon md-font-library=\"material-icons\">file_copy</md-icon>\n                        Show private key\n                      </md-button>\n                    </md-menu-item>\n                    <md-menu-item>\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.remove($event, entry)\">\n                        <md-icon md-font-library=\"material-icons\">delete_forever</md-icon>\n                        Remove\n                      </md-button>\n                    </md-menu-item>\n                  </md-menu-content>\n                </md-menu>\n              </div>\n\n              <!-- Currency Balance -->\n              <div ng-if=\"entry.isCurrencyBalance\" layout=\"row\" class=\"currency-balance\" flex>\n                <div class=\"name\">{{entry.name}}</div>&nbsp;\n                <div class=\"identifier\" flex><a ng-click=\"entry.unlock()\">{{entry.address}}</a></div>&nbsp;\n                <div class=\"balance\">{{entry.balance}}&nbsp;{{entry.symbol}}</div>\n              </div>\n\n              <!-- Currency Address Loading -->\n              <div ng-if=\"entry.isCurrencyAddressLoading\" layout=\"row\" class=\"currency-balance\" flex>\n                <div class=\"name\">{{entry.name}}</div>&nbsp;\n                <div class=\"identifier\" flex>Loading ..</div>\n              </div>\n\n              <!-- Currency Address Create -->\n              <div ng-if=\"entry.isCurrencyAddressCreate\" layout=\"row\" class=\"currency-balance\" flex>\n                <div class=\"name\">{{entry.name}}</div>&nbsp;\n                <div class=\"identifier\" flex></div>\n                <md-button ng-click=\"entry.createAddress()\">Create New</md-button>\n              </div>\n\n              <!-- Token Balance -->\n              <div ng-if=\"entry.isTokenBalance\" layout=\"row\" class=\"token-balance\" flex>\n                <div class=\"name\">{{entry.name}}</div>&nbsp;\n                <div class=\"identifier\" flex>{{entry.address}}</div>&nbsp;\n                <div class=\"balance\">{{entry.balance}}&nbsp;{{entry.symbol}}</div>\n              </div>\n\n            </md-list-item>\n          </md-list>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope', '$q', 'localKeyStore', 'walletFile', '$window', 'lightwalletService', 'heat', 'assetInfo', 'ethplorer', '$mdToast', '$mdDialog', 'clipboard', 'user', 'bitcoreService', 'fimkCryptoService', 'nxtCryptoService', 'ardorCryptoService', 'nxtBlockExplorerService', 'ardorBlockExplorerService', 'mofoSocketService', 'iotaCoreService', 'storage', '$rootScope')\nclass WalletComponent {\n\n  selectAll = true;\n  allLocked = true\n\n  entries: Array<WalletEntry | CurrencyBalance | TokenBalance> = []\n  walletEntries: Array<WalletEntry> = []\n  createdAddresses: { [key: string]: Array<string> } = {}\n  chains = [{ name: 'ETH', disabled: false }, { name: 'BTC', disabled: false }, { name: 'FIMK', disabled: false }, { name: 'NXT', disabled: true }, { name: 'ARDR', disabled: true }, { name: 'IOTA', disabled: false }];\n  selectedChain = '';\n  store: any;\n\n  constructor(private $scope: angular.IScope,\n    private $q: angular.IQService,\n    private localKeyStore: LocalKeyStoreService,\n    private walletFile: WalletFileService,\n    private $window: angular.IWindowService,\n    private lightwalletService: LightwalletService,\n    private heat: HeatService,\n    private assetInfo: AssetInfoService,\n    private ethplorer: EthplorerService,\n    private $mdToast: angular.material.IToastService,\n    private $mdDialog: angular.material.IDialogService,\n    private clipboard: ClipboardService,\n    private user: UserService,\n    private bitcoreService: BitcoreService,\n    private fimkCryptoService: FIMKCryptoService,\n    private nxtCryptoService: NXTCryptoService,\n    private ardorCryptoService: ARDORCryptoService,\n    private nxtBlockExplorerService: NxtBlockExplorerService,\n    private ardorBlockExplorerService: ArdorBlockExplorerService,\n    private mofoSocketService: MofoSocketService,\n    private iotaCoreService: IotaCoreService,\n    private storage: StorageService,\n    private $rootScope: angular.IScope) {\n\n    this.store = this.storage.namespace('wallet', $rootScope, true)\n\n    nxtBlockExplorerService.getBlockchainStatus().then(() => {\n      let nxtChain = { name: 'NXT', disabled: false }\n      let index = this.chains.findIndex((entry) => entry.name === nxtChain.name);\n      this.chains[index] = nxtChain\n    })\n\n    ardorBlockExplorerService.getBlockchainStatus().then(() => {\n      let ardorChain = { name: 'ARDR', disabled: false }\n      let index = this.chains.findIndex((entry) => entry.name === ardorChain.name);\n      this.chains[index] = ardorChain\n    })\n\n\n    this.initLocalKeyStore()\n    this.initCreatedAddresses()\n  }\n\n  createAccount($event) {\n    if (this.$scope['vm'].selectedChain === 'ETH') {\n      this.createEthAccount($event)\n    } else if (this.$scope['vm'].selectedChain === 'BTC') {\n      this.createBtcAccount($event)\n    }\n    else if (this.$scope['vm'].selectedChain === 'FIMK') {\n      this.createFIMKAccount($event)\n    }\n    else if (this.$scope['vm'].selectedChain === 'NXT') {\n      this.createNXTAccount($event)\n    }\n    else if (this.$scope['vm'].selectedChain === 'ARDR') {\n      this.createARDRAccount($event)\n    }\n    else if (this.$scope['vm'].selectedChain === 'IOTA') {\n      this.createIotaAccount($event)\n    }\n    this.$scope['vm'].selectedChain = null\n  }\n\n  initLocalKeyStore() {\n    this.entries = []\n    this.walletEntries = []\n    this.localKeyStore.list().map((account: string) => {\n      let name = this.localKeyStore.keyName(account)\n      let walletEntry = new WalletEntry(account, name, this)\n      this.walletEntries.push(walletEntry)\n    });\n    this.walletEntries.forEach(walletEntry => {\n      let password = this.localKeyStore.getPasswordForAccount(walletEntry.account)\n      if (password) {\n        try {\n          var key = this.localKeyStore.load(walletEntry.account, password);\n          if (key) {\n            walletEntry.secretPhrase = key.secretPhrase\n            walletEntry.bip44Compatible = this.lightwalletService.validSeed(key.secretPhrase)\n            walletEntry.unlocked = true\n            walletEntry.pin = password\n            this.initWalletEntry(walletEntry)\n          }\n        } catch (e) { console.log(e) }\n      }\n    })\n    this.flatten()\n    this.fetchCryptoAddresses('BTC')\n  }\n\n  initCreatedAddresses() {\n    for (let i = 0; i < window.localStorage.length; i++) {\n      let key = window.localStorage.key(i)\n      let data = key.match(/eth-address-created:(.+):(.+)/)\n      if (data) {\n        let acc = data[1], addr = data[2]\n        this.createdAddresses[acc] = this.createdAddresses[acc] || []\n        this.createdAddresses[acc].push(addr)\n      }\n    }\n  }\n\n  rememberAdressCreated(account: string, ethAddress: string) {\n    this.createdAddresses[account] = this.createdAddresses[account] || []\n    this.createdAddresses[account].push(ethAddress)\n    window.localStorage.setItem(`eth-address-created:${account}:${ethAddress}`, \"1\")\n  }\n\n  /* Iterates down all children of walletEntries and flattens them into the entries list */\n  flatten() {\n    this.$scope.$evalAsync(() => {\n      this.entries = []\n      this.walletEntries.forEach(walletEntry => {\n        this.entries.push(walletEntry)\n        walletEntry.currencies = walletEntry.currencies.filter((currency, index, self) => {\n          return index === self.findIndex((t) => (\n            //@ts-ignore\n            t.name === currency.name && t.address === currency.address\n          ))\n        });\n        walletEntry.currencies.forEach(curr => {\n          let currencyBalance = <CurrencyBalance>curr\n          this.entries.push(currencyBalance)\n          if (currencyBalance.tokens) {\n            currencyBalance.tokens.forEach(tokenBalance => {\n              this.entries.push(tokenBalance)\n            })\n          }\n        })\n      })\n    })\n  }\n\n  shareCurrencyAddressesWithP2pContacts(currency: string, address: string) {\n    let p2pContactsUtils = <P2pContactUtils>heat.$inject.get('p2pContactUtils')\n    let p2pMessaging = <P2PMessaging>heat.$inject.get('P2PMessaging')\n    p2pMessaging.p2pContactStore.forEach((key, contact) => {\n      console.log(`sharing key ${address} of currency ${currency} with p2p contact: ${contact.account}`)\n      p2pContactsUtils.shareCryptoAddress(contact, currency, address)\n    })\n  }\n\n  fetchCryptoAddresses(currency: string) {\n    let p2pContactsUtils = <P2pContactUtils>heat.$inject.get('p2pContactUtils')\n    let p2pMessaging = <P2PMessaging>heat.$inject.get('P2PMessaging')\n    p2pMessaging.p2pContactStore.forEach((key, contact) => {\n      console.log(`fetching ${currency} of p2p contact: ${contact.account}`)\n      p2pContactsUtils.fetchCryptoAddress(contact, currency)\n    })\n  }\n\n  pageAddAddSecretPhrase($event) {\n    this.promptSecretPlusPassword($event).then(\n      data => {\n        let account = heat.crypto.getAccountId(data.secretPhrase)\n        let publicKey = heat.crypto.secretPhraseToPublicKey(data.secretPhrase)\n        let key = {\n          account: account,\n          secretPhrase: data.secretPhrase,\n          pincode: data.password,\n          name: '',\n          publicKey\n        };\n        this.localKeyStore.add(key);\n        this.$scope.$evalAsync(() => {\n          this.initLocalKeyStore()\n        })\n      }\n    )\n  }\n\n  pageAddFileInputChange(files) {\n    if (files && files[0]) {\n      let reader = new FileReader();\n      reader.onload = () => {\n        this.$scope.$evalAsync(() => {\n          let fileContents = reader.result;\n          let wallet = this.walletFile.createFromText(<string>fileContents);\n          if (wallet) {\n            let addedKeys = this.localKeyStore.import(wallet);\n            this.$scope.$evalAsync(() => {\n              this.initLocalKeyStore();\n            })\n            let message = `Imported ${addedKeys.length} keys into this device`;\n            this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\n          }\n        })\n      };\n      reader.readAsText(files[0]);\n    }\n  }\n\n  remove($event, entry: WalletEntry) {\n    dialogs.prompt($event, 'Remove Wallet Entry',\n      `This completely removes the wallet entry from your device.\n       Please enter your Password (or Pin Code) to confirm you wish to remove this entry`, '').then(\n        pin => {\n          if (pin == entry.pin) {\n            this.localKeyStore.remove(entry.account)\n            this.initLocalKeyStore()\n            if (entry.account === this.user.account) {\n              this.heat.api.getKeystoreEntryCountByAccount(entry.account).then(count => {\n                if (count > 0) {\n                  this.shareCurrencyAddressesWithP2pContacts('BTC', '')\n                }\n              })\n            }\n          }\n        }\n      );\n  }\n\n  unlock($event, selectedWalletEntry: WalletEntry) {\n    dialogs.prompt($event, 'Enter Password (or Pin)', 'Please enter your Password (or Pin Code) to unlock', '').then(\n      pin => {\n        let count = 0\n        this.walletEntries.forEach(walletEntry => {\n          if (!walletEntry.secretPhrase) {\n            var key = this.localKeyStore.load(walletEntry.account, pin);\n            if (key) {\n              count += 1\n              this.localKeyStore.rememberPassword(walletEntry.account, pin)\n              walletEntry.pin = pin\n              walletEntry.secretPhrase = key.secretPhrase\n              walletEntry.bip44Compatible = this.lightwalletService.validSeed(key.secretPhrase)\n              walletEntry.unlocked = true\n              this.initWalletEntry(walletEntry)\n            }\n          }\n        })\n        let message = `Unlocked ${count ? count : 'NO'} entries`\n        this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\n        selectedWalletEntry.toggle(true)\n\n        /* Only if no user is signed in currently, will we auto select one signin */\n        if (!this.user.unlocked) {\n          /* Try and unlock the selected entry */\n          if (selectedWalletEntry.unlocked) {\n            for (let i = 0; i < selectedWalletEntry.currencies.length; i++) {\n              let balance = <CurrencyBalance>selectedWalletEntry.currencies[i]\n              if (balance.isCurrencyBalance) {\n                balance.unlock(true)\n                return\n              }\n            }\n          }\n\n          /* Try and find another CurrencyBalance */\n          for (let i = 0; i < this.entries.length; i++) {\n            let entry = <WalletEntry>this.entries[i];\n            if (entry.unlocked) {\n              for (let k = 0; k < entry.currencies.length; k++) {\n                let balance = <CurrencyBalance>entry.currencies[k];\n                if (balance.isCurrencyBalance) {\n                  balance.unlock(true);\n                  return\n                }\n              }\n            }\n          }\n\n        }\n\n      }\n    )\n  }\n\n  initWalletEntry(walletEntry: WalletEntry) {\n    this.allLocked = false\n    let heatAccount = heat.crypto.getAccountIdFromPublicKey(heat.crypto.secretPhraseToPublicKey(walletEntry.secretPhrase))\n    let heatCurrencyBalance = new CurrencyBalance('HEAT', 'HEAT', heatAccount, walletEntry.secretPhrase)\n    heatCurrencyBalance.visible = walletEntry.expanded\n    walletEntry.currencies.push(heatCurrencyBalance)\n    this.flatten()\n\n    this.heat.api.getAccountByNumericId(heatAccount).then((account) => {\n      this.$scope.$evalAsync(() => {\n        let balanceUnconfirmed = utils.formatQNT(account.unconfirmedBalance, 8);\n        heatCurrencyBalance.balance = balanceUnconfirmed\n      })\n      this.getAccountAssets(heatAccount).then((assetInfos) => {\n        heatCurrencyBalance.tokens = []\n        assetInfos.forEach(assetInfo => {\n          let tokenBalance = new TokenBalance(assetInfo.name, assetInfo.symbol, assetInfo.id)\n          tokenBalance.balance = utils.formatQNT(assetInfo.userBalance, 8)\n          tokenBalance.visible = walletEntry.expanded\n          heatCurrencyBalance.tokens.push(tokenBalance)\n        })\n        this.flatten()\n      })\n    }, () => {\n      this.$scope.$evalAsync(() => {\n        heatCurrencyBalance.balance = \"Address is unused\"\n        heatCurrencyBalance.symbol = ''\n      })\n    });\n\n    /* Bitcoin and Ethereum integration start here */\n    let selectedCurrencies = this.store.get(walletEntry.account)\n    if (!selectedCurrencies || selectedCurrencies.includes('BTC'))\n      this.bitcoreService.unlock(walletEntry.secretPhrase).then(wallet => {\n        if (wallet !== undefined) {\n          let btcCurrencyAddressLoading = new CurrencyAddressLoading('Bitcoin')\n          btcCurrencyAddressLoading.visible = walletEntry.expanded;\n          btcCurrencyAddressLoading.wallet = wallet;\n          walletEntry.currencies.push(btcCurrencyAddressLoading);\n\n          let btcCurrencyAddressCreate = new CurrencyAddressCreate('Bitcoin', wallet)\n          btcCurrencyAddressCreate.visible = walletEntry.expanded\n          btcCurrencyAddressCreate.parent = walletEntry\n          btcCurrencyAddressCreate.flatten = this.flatten.bind(this)\n          walletEntry.currencies.push(btcCurrencyAddressCreate)\n\n          this.flatten()\n          if (this.user.account === walletEntry.account)\n            this.shareCurrencyAddressesWithP2pContacts('BTC', wallet.addresses[0].address)\n\n          /* Only if this node is expanded will we load the addresses */\n          if (walletEntry.expanded) {\n            this.loadBitcoinAddresses(walletEntry)\n          }\n        }\n      })\n    if (!selectedCurrencies || selectedCurrencies.includes('ETH'))\n      this.lightwalletService.unlock(walletEntry.secretPhrase, \"\").then(wallet => {\n\n        let ethCurrencyAddressLoading = new CurrencyAddressLoading('Ethereum')\n        ethCurrencyAddressLoading.visible = walletEntry.expanded\n        ethCurrencyAddressLoading.wallet = wallet\n        walletEntry.currencies.push(ethCurrencyAddressLoading)\n\n        let ethCurrencyAddressCreate = new CurrencyAddressCreate('Ethereum', wallet)\n        ethCurrencyAddressCreate.visible = walletEntry.expanded\n        ethCurrencyAddressCreate.parent = walletEntry\n        ethCurrencyAddressCreate.flatten = this.flatten.bind(this)\n\n        walletEntry.currencies.push(ethCurrencyAddressCreate)\n\n        this.flatten()\n\n        /* Only if this node is expanded will we load the addresses */\n        if (walletEntry.expanded) {\n          this.loadEthereumAddresses(walletEntry)\n        }\n      })\n    if (selectedCurrencies && selectedCurrencies.includes('IOTA')) // removing nullity check since iota wallet then it tries to load iota for every mnemonic and throws error along with \"plain text seed\" on console\n      this.iotaCoreService.unlock(walletEntry.secretPhrase).then(wallet => {\n        let iotaCurrencyAddressLoading = new CurrencyAddressLoading('Iota')\n        iotaCurrencyAddressLoading.visible = walletEntry.expanded\n        iotaCurrencyAddressLoading.wallet = wallet\n        walletEntry.currencies.push(iotaCurrencyAddressLoading)\n\n        let iotaCurrencyAddressCreate = new CurrencyAddressCreate('Iota', wallet)\n        iotaCurrencyAddressCreate.visible = walletEntry.expanded\n        iotaCurrencyAddressCreate.parent = walletEntry\n        iotaCurrencyAddressCreate.flatten = this.flatten.bind(this)\n\n        walletEntry.currencies.push(iotaCurrencyAddressCreate)\n\n        this.flatten()\n\n        /* Only if this node is expanded will we load the addresses */\n        if (walletEntry.expanded) {\n          this.loadIotaAddresses(walletEntry)\n        }\n      })\n    if (!selectedCurrencies || selectedCurrencies.includes('FIM'))\n      this.fimkCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\n        this.mofoSocketService.mofoSocket().then(() => {\n          let fimkCurrencyAddressCreate = new CurrencyAddressCreate('FIMK', wallet)\n          fimkCurrencyAddressCreate.visible = walletEntry.expanded\n          fimkCurrencyAddressCreate.parent = walletEntry\n          fimkCurrencyAddressCreate.flatten = this.flatten.bind(this)\n          walletEntry.currencies.push(fimkCurrencyAddressCreate)\n\n          let fimkCurrencyAddressLoading = new CurrencyAddressLoading('FIMK')\n          fimkCurrencyAddressLoading.visible = walletEntry.expanded\n          fimkCurrencyAddressLoading.wallet = wallet\n          walletEntry.currencies.push(fimkCurrencyAddressLoading)\n\n          /* Only if this node is expanded will we load the addresses */\n          if (walletEntry.expanded) {\n            this.loadFIMKAddresses(walletEntry)\n          }\n        })\n      })\n    if (!selectedCurrencies || selectedCurrencies.includes('NXT'))\n      this.nxtCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\n        this.nxtBlockExplorerService.getBlockchainStatus().then(() => {\n          let nxtCurrencyAddressLoading = new CurrencyAddressLoading('NXT')\n          nxtCurrencyAddressLoading.visible = walletEntry.expanded\n          nxtCurrencyAddressLoading.wallet = wallet\n          walletEntry.currencies.push(nxtCurrencyAddressLoading)\n\n          let nxtCurrencyAddressCreate = new CurrencyAddressCreate('NXT', wallet)\n          nxtCurrencyAddressCreate.visible = walletEntry.expanded\n          nxtCurrencyAddressCreate.parent = walletEntry\n          nxtCurrencyAddressCreate.flatten = this.flatten.bind(this)\n          walletEntry.currencies.push(nxtCurrencyAddressCreate)\n\n          if (walletEntry.expanded) {\n            this.loadNXTAddresses(walletEntry)\n          }\n        })\n      })\n    if (!selectedCurrencies || selectedCurrencies.includes('ARDR'))\n      this.ardorCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\n        this.ardorBlockExplorerService.getBlockchainStatus().then(() => {\n          let ardorCurrencyAddressLoading = new CurrencyAddressLoading('ARDOR')\n          ardorCurrencyAddressLoading.visible = walletEntry.expanded\n          ardorCurrencyAddressLoading.wallet = wallet\n          walletEntry.currencies.push(ardorCurrencyAddressLoading)\n\n          let ardorCurrencyAddressCreate = new CurrencyAddressCreate('ARDOR', wallet)\n          ardorCurrencyAddressCreate.visible = walletEntry.expanded\n          ardorCurrencyAddressCreate.parent = walletEntry\n          ardorCurrencyAddressCreate.flatten = this.flatten.bind(this)\n          walletEntry.currencies.push(ardorCurrencyAddressCreate)\n\n          if (walletEntry.expanded) {\n            this.loadARDORAddresses(walletEntry)\n          }\n        })\n      })\n  }\n\n  public loadNXTAddresses(walletEntry: WalletEntry) {\n\n    /* Find the Loading node, if thats not available we can exit */\n    let nxtCurrencyAddressLoading = <CurrencyAddressLoading>walletEntry.currencies.find(c => (<CurrencyAddressLoading>c).isCurrencyAddressLoading && c.name == 'NXT')\n    if (!nxtCurrencyAddressLoading)\n      return\n\n    this.nxtCryptoService.refreshAdressBalances(nxtCurrencyAddressLoading.wallet).then(() => {\n\n      /* Make sure we exit if no loading node exists */\n      if (!walletEntry.currencies.find(c => c['isCurrencyAddressLoading']))\n        return\n\n      let index = walletEntry.currencies.indexOf(nxtCurrencyAddressLoading)\n      nxtCurrencyAddressLoading.wallet.addresses.forEach(address => {\n        let wasCreated = (this.createdAddresses[walletEntry.account] || []).indexOf(address.address) != -1\n        if (address.inUse || wasCreated) {\n          let nxtCurrencyBalance = new CurrencyBalance('NXT', 'NXT', address.address, address.privateKey)\n          nxtCurrencyBalance.balance = address.balance ? address.balance + \"\" : \"0\"\n          nxtCurrencyBalance.visible = walletEntry.expanded\n          nxtCurrencyBalance.inUse = wasCreated ? false : true\n          nxtCurrencyBalance.walletEntry = walletEntry\n          walletEntry.currencies.splice(index, 0, nxtCurrencyBalance)\n          index++;\n\n          if (address.tokensBalances) {\n            address.tokensBalances.forEach(balance => {\n              let tokenBalance = new TokenBalance(balance.name, balance.symbol, balance.address)\n              tokenBalance.balance = utils.commaFormat(balance.balance)\n              tokenBalance.visible = walletEntry.expanded\n              nxtCurrencyBalance.tokens.push(tokenBalance)\n            })\n          }\n        }\n      })\n\n      // we can remove the loading entry\n      walletEntry.currencies = walletEntry.currencies.filter(c => c != nxtCurrencyAddressLoading)\n      this.flatten()\n    })\n  }\n\n  public loadARDORAddresses(walletEntry: WalletEntry) {\n\n    /* Find the Loading node, if thats not available we can exit */\n    let ardorCurrencyAddressLoading = <CurrencyAddressLoading>walletEntry.currencies.find(c => (<CurrencyAddressLoading>c).isCurrencyAddressLoading && c.name == 'ARDOR')\n    if (!ardorCurrencyAddressLoading)\n      return\n\n    this.ardorCryptoService.refreshAdressBalances(ardorCurrencyAddressLoading.wallet).then(() => {\n      /* Make sure we exit if no loading node exists */\n      if (!walletEntry.currencies.find(c => c['isCurrencyAddressLoading']))\n        return\n\n      let index = walletEntry.currencies.indexOf(ardorCurrencyAddressLoading)\n      ardorCurrencyAddressLoading.wallet.addresses.forEach(address => {\n        let wasCreated = (this.createdAddresses[walletEntry.account] || []).indexOf(address.address) != -1\n        if (address.inUse || wasCreated) {\n          let nxtCurrencyBalance = new CurrencyBalance('ARDOR', 'ARDR', address.address, address.privateKey)\n          nxtCurrencyBalance.balance = address.balance ? address.balance + \"\" : \"0\"\n          nxtCurrencyBalance.visible = walletEntry.expanded\n          nxtCurrencyBalance.inUse = wasCreated ? false : true\n          nxtCurrencyBalance.walletEntry = walletEntry\n          walletEntry.currencies.splice(index, 0, nxtCurrencyBalance)\n          index++;\n\n          if (address.tokensBalances) {\n            address.tokensBalances.forEach(balance => {\n              let tokenBalance = new TokenBalance(balance.name, balance.symbol, balance.address)\n              tokenBalance.balance = utils.commaFormat(balance.balance)\n              tokenBalance.visible = walletEntry.expanded\n              nxtCurrencyBalance.tokens.push(tokenBalance)\n            })\n          }\n        }\n      })\n\n      // we can remove the loading entry\n      walletEntry.currencies = walletEntry.currencies.filter(c => c != ardorCurrencyAddressLoading)\n      this.flatten()\n    })\n  }\n\n  /* Only when we expand a wallet entry do we lookup its balances */\n  public loadFIMKAddresses(walletEntry: WalletEntry) {\n\n    /* Find the Loading node, if thats not available we can exit */\n    let fimkCurrencyAddressLoading = <CurrencyAddressLoading>walletEntry.currencies.find(c => (<CurrencyAddressLoading>c).isCurrencyAddressLoading && c.name == 'FIMK')\n    if (!fimkCurrencyAddressLoading)\n      return\n\n    this.fimkCryptoService.refreshAdressBalances(fimkCurrencyAddressLoading.wallet).then(() => {\n\n      /* Make sure we exit if no loading node exists */\n      if (!walletEntry.currencies.find(c => c['isCurrencyAddressLoading']))\n        return\n\n      let index = walletEntry.currencies.indexOf(fimkCurrencyAddressLoading)\n      fimkCurrencyAddressLoading.wallet.addresses.forEach(address => {\n        let wasCreated = (this.createdAddresses[walletEntry.account] || []).indexOf(address.address) != -1\n        if (address.inUse || wasCreated) {\n          let fimkCurrencyBalance = new CurrencyBalance('FIMK', 'FIM', address.address, address.privateKey)\n          fimkCurrencyBalance.balance = address.balance ? address.balance + \"\" : \"0\"\n          fimkCurrencyBalance.visible = walletEntry.expanded\n          fimkCurrencyBalance.inUse = wasCreated ? false : true\n          fimkCurrencyBalance.walletEntry = walletEntry\n          walletEntry.currencies.splice(index, 0, fimkCurrencyBalance)\n          index++;\n\n          if (address.tokensBalances) {\n            address.tokensBalances.forEach(balance => {\n              let tokenBalance = new TokenBalance(balance.name, balance.symbol, balance.address)\n              tokenBalance.balance = utils.commaFormat(balance.balance)\n              tokenBalance.visible = walletEntry.expanded\n              fimkCurrencyBalance.tokens.push(tokenBalance)\n            })\n          }\n        }\n      })\n\n      // we can remove the loading entry\n      walletEntry.currencies = walletEntry.currencies.filter(c => c != fimkCurrencyAddressLoading)\n      this.flatten()\n    })\n  }\n\n  /* Only when we expand a wallet entry do we lookup its balances */\n  public loadEthereumAddresses(walletEntry: WalletEntry) {\n\n    /* Find the Loading node, if thats not available we can exit */\n    let ethCurrencyAddressLoading = <CurrencyAddressLoading>walletEntry.currencies.find(c => (<CurrencyAddressLoading>c).isCurrencyAddressLoading && c.name == 'Ethereum')\n    if (!ethCurrencyAddressLoading)\n      return\n\n    this.lightwalletService.refreshAdressBalances(ethCurrencyAddressLoading.wallet).then(() => {\n\n      /* Make sure we exit if no loading node exists */\n      if (!walletEntry.currencies.find(c => c['isCurrencyAddressLoading']))\n        return\n\n      let index = walletEntry.currencies.indexOf(ethCurrencyAddressLoading)\n      ethCurrencyAddressLoading.wallet.addresses.forEach(address => {\n        let wasCreated = (this.createdAddresses[walletEntry.account] || []).indexOf(address.address) != -1\n        if (address.inUse || wasCreated) {\n          let ethCurrencyBalance = new CurrencyBalance('Ethereum', 'ETH', address.address, address.privateKey)\n          ethCurrencyBalance.balance = Number(address.balance + \"\").toFixed(18)\n          ethCurrencyBalance.visible = walletEntry.expanded\n          ethCurrencyBalance.inUse = wasCreated ? false : true\n          ethCurrencyBalance.walletEntry = walletEntry\n          walletEntry.currencies.splice(index, 0, ethCurrencyBalance)\n          index++;\n\n          if (address.tokensBalances) {\n            address.tokensBalances.forEach(balance => {\n              let tokenBalance = new TokenBalance(balance.name, balance.symbol, balance.address)\n              tokenBalance.balance = utils.commaFormat(balance.balance)\n              tokenBalance.visible = walletEntry.expanded\n              ethCurrencyBalance.tokens.push(tokenBalance)\n            })\n          }\n        }\n      })\n\n      // we can remove the loading entry\n      walletEntry.currencies = walletEntry.currencies.filter(c => c != ethCurrencyAddressLoading)\n      this.flatten()\n    })\n  }\n\n  public loadIotaAddresses(walletEntry: WalletEntry) {\n\n    /* Find the Loading node, if thats not available we can exit */\n    let iotaCurrencyAddressLoading = <CurrencyAddressLoading>walletEntry.currencies.find(c => (<CurrencyAddressLoading>c).isCurrencyAddressLoading && c.name == 'Iota')\n    if (!iotaCurrencyAddressLoading)\n      return\n\n    this.iotaCoreService.refreshAdressBalances(iotaCurrencyAddressLoading.wallet).then(() => {\n\n      /* Make sure we exit if no loading node exists */\n      if (!walletEntry.currencies.find(c => c['isCurrencyAddressLoading']))\n        return\n\n      let index = walletEntry.currencies.indexOf(iotaCurrencyAddressLoading)\n      iotaCurrencyAddressLoading.wallet.addresses.forEach(address => {\n        let wasCreated = (this.createdAddresses[walletEntry.account] || []).indexOf(address.address) != -1\n        if (address.inUse || wasCreated) {\n          let iotaCurrencyBalance = new CurrencyBalance('Iota', 'i', address.address, address.privateKey)\n          iotaCurrencyBalance.balance = Number(address.balance + \"\").toFixed(0)\n          iotaCurrencyBalance.visible = walletEntry.expanded\n          iotaCurrencyBalance.inUse = wasCreated ? false : true\n          iotaCurrencyBalance.walletEntry = walletEntry\n          walletEntry.currencies.splice(index, 0, iotaCurrencyBalance)\n          index++;\n        }\n      })\n\n      // we can remove the loading entry\n      walletEntry.currencies = walletEntry.currencies.filter(c => c != iotaCurrencyAddressLoading)\n      this.flatten()\n    })\n  }\n\n\n  /* Only when we expand a wallet entry do we lookup its balances */\n  public loadBitcoinAddresses(walletEntry: WalletEntry) {\n\n    /* Find the Loading node, if thats not available we can exit */\n    let btcCurrencyAddressLoading = <CurrencyAddressLoading>walletEntry.currencies.find(c => (<CurrencyAddressLoading>c).isCurrencyAddressLoading && c.name == 'Bitcoin')\n    if (!btcCurrencyAddressLoading)\n      return\n\n    this.bitcoreService.refreshAdressBalances(btcCurrencyAddressLoading.wallet).then(() => {\n\n      /* Make sure we exit if no loading node exists */\n      if (!walletEntry.currencies.find(c => c['isCurrencyAddressLoading']))\n        return\n\n      let index = walletEntry.currencies.indexOf(btcCurrencyAddressLoading)\n      btcCurrencyAddressLoading.wallet.addresses.forEach(address => {\n        let wasCreated = (this.createdAddresses[walletEntry.account] || []).indexOf(address.address) != -1\n        if (address.inUse || wasCreated) {\n          let btcCurrencyBalance = new CurrencyBalance('Bitcoin', 'BTC', address.address, address.privateKey)\n          btcCurrencyBalance.balance = address.balance + \"\"\n          btcCurrencyBalance.visible = walletEntry.expanded\n          btcCurrencyBalance.inUse = wasCreated ? false : true\n          btcCurrencyBalance.walletEntry = walletEntry\n          walletEntry.currencies.splice(index, 0, btcCurrencyBalance)\n          index++;\n        }\n      })\n\n      // we can remove the loading entry\n      walletEntry.currencies = walletEntry.currencies.filter(c => c != btcCurrencyAddressLoading)\n      this.flatten()\n    })\n  }\n\n  private getAccountAssets(account: string): angular.IPromise<Array<AssetInfo>> {\n    let deferred = this.$q.defer<Array<AssetInfo>>();\n    this.heat.api.getAccountBalances(account, \"0\", 1, 0, 100).then(balances => {\n      let assetInfos: Array<AssetInfo> = [];\n      let promises = [];\n      balances.forEach(balance => {\n        if (balance.id != '0') {\n          promises.push(\n            this.assetInfo.getInfo(balance.id).then(info => {\n              assetInfos.push(angular.extend(info, {\n                userBalance: balance.virtualBalance\n              }))\n            })\n          );\n        }\n      });\n      if (promises.length > 0) {\n        this.$q.all(promises).then(() => {\n          assetInfos.sort((a, b) => {\n            var textA = a.symbol.toUpperCase();\n            var textB = b.symbol.toUpperCase();\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n          });\n          deferred.resolve(assetInfos);\n        }, deferred.reject);\n      }\n      else {\n        deferred.resolve([]);\n      }\n    }, deferred.reject);\n    return <angular.IPromise<Array<AssetInfo>>>deferred.promise;\n  }\n\n  // @click\n  importSeed($event) {\n    this.promptSecretPlusPassword($event).then(\n      data => {\n        let account = heat.crypto.getAccountId(data.secretPhrase)\n        let publicKey = heat.crypto.secretPhraseToPublicKey(data.secretPhrase)\n        let key = {\n          account: account,\n          secretPhrase: data.secretPhrase,\n          pincode: data.password,\n          name: '',\n          publicKey\n        };\n        this.localKeyStore.add(key);\n        let message = `Seed was successfully imported under HEAT account ${account}`;\n        this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\n        this.user.unlock(data.secretPhrase, key, this.lightwalletService.validSeed(data.secretPhrase)).then(() => heat.fullApplicationScopeReload())\n      }\n    )\n  }\n\n  // @click\n  exportWallet() {\n    let exported = this.localKeyStore.export();\n    let encoded = this.walletFile.encode(exported);\n    var blob = new Blob([encoded], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, 'heat.wallet');\n  }\n\n  promptSecretPlusPassword($event): angular.IPromise<{ password: string, secretPhrase: string }> {\n    let self = this\n    function DialogController($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].okButtonClick = function () {\n        $mdDialog.hide({\n          password: $scope['vm'].data.password1,\n          secretPhrase: $scope['vm'].data.secretPhrase,\n        })\n        importWallet($scope['vm'].data.secretPhrase, $scope['vm'].data.selectedImport)\n      }\n      $scope['vm'].secretChanged = function () {\n        $scope['vm'].data.bip44Compatible = self.lightwalletService.validSeed($scope['vm'].data.secretPhrase)\n      }\n      $scope['vm'].data = {\n        password1: '',\n        password2: '',\n        secretPhrase: '',\n        bip44Compatible: false,\n        selectedImport: ''\n      }\n      $scope['vm'].currencyList = [{ name: 'HEAT', symbol: 'HEAT' }, { name: 'Ethereum', symbol: 'ETH' }, { name: 'Bitcoin', symbol: 'BTC' }, { name: 'FIMK', symbol: 'FIM' }, { name: 'NXT', symbol: 'NXT' }, { name: 'ARDOR', symbol: 'ARDR' }, { name: 'IOTA', symbol: 'IOTA' }];\n    }\n\n    function importWallet(secret: string, selectedImport: string) {\n      let distinctValues = (value, index, self) => {\n        return self.indexOf(value) === index;\n      }\n      let storage = <StorageService>heat.$inject.get('storage');\n      let $rootScope = heat.$inject.get('$rootScope');\n      let store = storage.namespace('wallet', $rootScope, true);\n      let accountId = heat.crypto.getAccountId(secret)\n      let currencies = store.get(accountId)\n      if (!currencies)\n        currencies = []\n      currencies.push(selectedImport)\n      store.put(accountId, currencies.filter(distinctValues));\n    }\n\n    let deferred = this.$q.defer<{ password: string, secretPhrase: string }>()\n    this.$mdDialog.show({\n      controller: DialogController,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Import Seed/Private Key</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n                <p>Select currency to import</p>\n                <md-input-container flex>\n                  <md-select ng-model=\"vm.data.selectedImport\" placeholder=\"Select currency\" auto-focus>\n                    <md-option style=\"height: 30px;\" ng-repeat=\"entry in vm.currencyList\" value=\"{{entry.symbol}}\">{{entry.symbol}}</md-option>\n                  </md-select>\n                </md-input-container>\n                <p>Enter your Secret Seed and provide a Password (or Pin)</p>\n                <md-input-container flex>\n                  <label>Private key / secret phrase</label>\n                  <textarea rows=\"2\" flex ng-model=\"vm.data.secretPhrase\" name=\"secretPhrase\" required ng-trim=\"false\" ng-change=\"vm.secretChanged() \"></textarea>\n                </md-input-container>\n                <md-input-container flex>\n                  <label>Desired Heatwallet PIN / password</label>\n                  <input type=\"password\" ng-model=\"vm.data.password1\" required name=\"password1\">\n                </md-input-container>\n                <md-input-container flex>\n                  <label>Desired Heatwallet PIN / password (confirm)</label>\n                  <input type=\"password\" ng-model=\"vm.data.password2\" required name=\"password2\">\n                </md-input-container>\n                <span>BIP44 compatible = <b>{{vm.data.bip44Compatible?'TRUE':'FALSE'}}</b></span>\n              </div>\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button type=\"submit\" ng-disabled=\"dialogForm.$invalid || vm.data.password1 != vm.data.password2 || vm.data.selectedImport === ''\" class=\"md-primary\"\n                  ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n  createEthAccount($event) {\n    let walletEntries = this.walletEntries\n    let self = this\n    if (walletEntries.length == 0)\n      return\n\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].copySeed = function () {\n        self.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\n      }\n\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n\n      $scope['vm'].okButtonClick = function ($event) {\n        let walletEntry = $scope['vm'].data.selectedWalletEntry\n        if (walletEntry) {\n          let walletEntry = $scope['vm'].data.selectedWalletEntry\n          let success = false\n          if (walletEntry) {\n            let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Ethereum')\n            if (!node) {\n              let storage = <StorageService>heat.$inject.get('storage')\n              let $rootScope = heat.$inject.get('$rootScope');\n              let store = storage.namespace('wallet', $rootScope, true)\n              let currencies = store.get(walletEntry.account)\n              if (!currencies)\n                currencies = []\n              currencies.push('ETH')\n              store.put(walletEntry.account, currencies.filter((value, index, self) => self.indexOf(value) === index));\n              self.initWalletEntry(walletEntry)\n            }\n            // load in next event loop to load currency addresses first\n            setTimeout(() => {\n              node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Ethereum')\n              success = node.createAddress(self)\n              walletEntry.toggle(true)\n              $mdDialog.hide(null).then(() => {\n                if (!success) {\n                  dialogs.alert($event, 'Unable to Create Address', 'Make sure you use the previous address first before you can create a new address')\n                }\n              })\n            }, 0)\n          }\n        }\n      }\n\n      $scope['vm'].data = {\n        selectedWalletEntry: walletEntries[0],\n        selected: walletEntries[0].account,\n        walletEntries: walletEntries,\n        password: ''\n      }\n\n      $scope['vm'].selectedWalletEntryChanged = function () {\n        $scope['vm'].data.password = ''\n        $scope['vm'].data.selectedWalletEntry = walletEntries.find(w => $scope['vm'].data.selected == w.account)\n      }\n\n      $scope['vm'].passwordChanged = function () {\n        let password = $scope['vm'].data.password\n        let account = $scope['vm'].data.selected\n        let walletEntry = walletEntries.find(w => w.account == account)\n        try {\n          var key = self.localKeyStore.load(account, password);\n          if (key) {\n            self.localKeyStore.rememberPassword(walletEntry.account, password)\n            walletEntry.pin = password\n            walletEntry.secretPhrase = key.secretPhrase\n            walletEntry.bip44Compatible = self.lightwalletService.validSeed(key.secretPhrase)\n            walletEntry.unlocked = true\n            self.initWalletEntry(walletEntry)\n            walletEntry.toggle(true)\n          }\n        } catch (e) { }\n      }\n    }\n\n    let deferred = this.$q.defer<{ password: string, secretPhrase: string }>()\n    this.$mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Create Ethereum Address</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n                <p>To create a new Ethereum address, please choose the master HEAT account you want to attach the new Ethereum address to:</p>\n\n                <!-- Select Master Account -->\n\n                <md-input-container flex>\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\n                  </md-select>\n                </md-input-container>\n\n                <!-- Put In Password -->\n\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\n                  <p>\n                    Please first unlock this account by entering your password below\n                  </p>\n                  <md-input-container flex >\n                    <label>Password</label>\n                    <input ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\n                  </md-input-container>\n                </div>\n\n                <!-- Invalid Non BIP44 Seed-->\n\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\n                  Eth wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\n                </p>\n\n                <!-- Valid BIP44 Seed -->\n                <div flex layout=\"column\"\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\n\n                  <p>This is your Ethereum address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\n                      Please store it in a safe place or you may lose access to your Ethereum.\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\n\n                  <md-input-container flex>\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\n                  </md-input-container>\n\n                </div>\n              </div>\n\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n  createBtcAccount($event) {\n    let walletEntries = this.walletEntries\n    let self = this\n    if (walletEntries.length == 0)\n      return\n\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].copySeed = function () {\n        self.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\n      }\n\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n\n      $scope['vm'].okButtonClick = function ($event) {\n        let walletEntry = $scope['vm'].data.selectedWalletEntry\n        let success = false\n        if (walletEntry) {\n          let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Bitcoin')\n          if (!node) {\n            let storage = <StorageService>heat.$inject.get('storage')\n            let $rootScope = heat.$inject.get('$rootScope');\n            let store = storage.namespace('wallet', $rootScope, true)\n            let currencies = store.get(walletEntry.account)\n            if (!currencies)\n              currencies = []\n            currencies.push('BTC')\n            store.put(walletEntry.account, currencies.filter((value, index, self) => self.indexOf(value) === index));\n            self.initWalletEntry(walletEntry)\n          }\n          // load in next event loop to load currency addresses first\n          setTimeout(() => {\n            node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Bitcoin')\n            success = node.createBtcAddress(self)\n            walletEntry.toggle(true)\n            $mdDialog.hide(null).then(() => {\n              if (!success) {\n                dialogs.alert($event, 'Unable to Create Address', 'Make sure you use the previous address first before you can create a new address')\n              }\n            })\n          }, 0)\n        }\n      }\n\n      $scope['vm'].data = {\n        selectedWalletEntry: walletEntries[0],\n        selected: walletEntries[0].account,\n        walletEntries: walletEntries,\n        password: ''\n      }\n\n      $scope['vm'].selectedWalletEntryChanged = function () {\n        $scope['vm'].data.password = ''\n        $scope['vm'].data.selectedWalletEntry = walletEntries.find(w => $scope['vm'].data.selected == w.account)\n      }\n    }\n\n    let deferred = this.$q.defer<{ password: string, secretPhrase: string }>()\n    this.$mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Create Bitcoin Address</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n                <p>To create a new Bitcoin address, please choose the master HEAT account you want to attach the new Bitcoin address to:</p>\n\n                <!-- Select Master Account -->\n\n                <md-input-container flex>\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\n                  </md-select>\n                </md-input-container>\n\n                <!-- Invalid Non BIP44 Seed-->\n\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\n                  Btc wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\n                </p>\n\n                <!-- Valid BIP44 Seed -->\n                <div flex layout=\"column\"\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\n\n                  <p>This is your Bitcoin address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\n                      Please store it in a safe place or you may lose access to your Bitcoin.\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\n\n                  <md-input-container flex>\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\n                  </md-input-container>\n\n                </div>\n              </div>\n\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n  createIotaAccount($event) {\n    let walletEntries = this.walletEntries\n    let self = this\n    if (walletEntries.length == 0)\n      return\n\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].okButtonClick = function () {\n        $mdDialog.cancel()\n      }\n      $scope['vm'].generateSeed = function () {\n        var length = 81;\n        var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ9\";\n        var randomValues = new Uint32Array(length);\n        var result = new Array(length);\n        window.crypto.getRandomValues(randomValues);\n        var cursor = 0;\n        for (var i = 0; i < randomValues.length; i++) {\n          cursor += randomValues[i];\n          result[i] = chars[cursor % chars.length];\n        }\n        $scope['vm'].iotaSeed =  result.join('');\n      };\n      $scope['vm'].generateSeed();\n      $scope['vm'].copySeed = function () {\n        self.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\n      }\n    }\n\n    let deferred = this.$q.defer<{ password: string, secretPhrase: string }>()\n    this.$mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      /*style: `\n        .iota-address {\n          line-height: 1.5em;\n          height: 3em;\n        }`,*/\n      template: `\n      <md-dialog>\n        <form name=\"dialogForm\">\n          <md-toolbar>\n            <div class=\"md-toolbar-tools\"><h2>Create IOTA Address</h2></div>\n          </md-toolbar>\n          <md-dialog-content style=\"min-width:500px;max-width:700px\" layout=\"column\" layout-padding>\n            <div flex layout=\"column\">\n              <p>This is your IOTA address seed.\n                Please store it in a safe place or you may lose access to your IOTA.\n                <a ng-click=\"vm.copySeed()\">Copy Seed</a>\n              </p>\n              <p>\n                Proceed to <b>IMPORT SEED/ PRIVATE KEY</b> to import this seed to your wallet.\n              </p>\n              <md-input-container flex>\n                <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.iotaSeed\" readonly ng-trim=\"false\"\n                    style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\n              </md-input-container>\n              <span style=\"display:none\">{{vm.iotaSeed}}</span>\n            </div>\n          </md-dialog-content>\n          <md-dialog-actions>\n            <md-button class=\"md-primary md-raised\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"=Ok\">Ok</md-button>\n            <md-button class=\"md-primary md-raised\" ng-click=\"vm.generateSeed($event)\" aria-label=\"Generate New\">Generate New</md-button>\n            <md-button class=\"md-warn md-raised\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\n          </md-dialog-actions>\n        </form>\n      </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n  createFIMKAccount($event) {\n    let walletEntries = this.walletEntries\n    let self = this\n    if (walletEntries.length == 0)\n      return\n\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].copySeed = function () {\n        self.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\n      }\n\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n\n      $scope['vm'].okButtonClick = function ($event) {\n        let walletEntry = $scope['vm'].data.selectedWalletEntry\n        let success = false\n        if (walletEntry) {\n          let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'FIMK')\n          if (!node) {\n            let storage = <StorageService>heat.$inject.get('storage')\n            let $rootScope = heat.$inject.get('$rootScope');\n            let store = storage.namespace('wallet', $rootScope, true)\n            let currencies = store.get(walletEntry.account)\n            if (!currencies)\n              currencies = []\n            currencies.push('FIM')\n            store.put(walletEntry.account, currencies.filter((value, index, self) => self.indexOf(value) === index));\n            self.initWalletEntry(walletEntry)\n          }\n          // load in next event loop to load currency addresses first\n          setTimeout(() => {\n            node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'FIMK')\n            success = node.createFIMKAddress(self)\n            walletEntry.toggle(true)\n            $mdDialog.hide(null).then(() => {\n              if (!success) {\n                dialogs.alert($event, 'Unable to Create Address', 'FIMK address already created for this account')\n              }\n            })\n          }, 0)\n        }\n      }\n\n      $scope['vm'].data = {\n        selectedWalletEntry: walletEntries[0],\n        selected: walletEntries[0].account,\n        walletEntries: walletEntries,\n        password: ''\n      }\n\n      $scope['vm'].selectedWalletEntryChanged = function () {\n        $scope['vm'].data.password = ''\n        $scope['vm'].data.selectedWalletEntry = walletEntries.find(w => $scope['vm'].data.selected == w.account)\n      }\n    }\n\n    let deferred = this.$q.defer<{ password: string, secretPhrase: string }>()\n    this.$mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Create FIMK Address</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n                <p>To create a new FIMK address, please choose the master HEAT account you want to attach the new FIMK address to:</p>\n\n                <!-- Select Master Account -->\n\n                <md-input-container flex>\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\n                  </md-select>\n                </md-input-container>\n\n                <!-- Invalid Non BIP44 Seed-->\n\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\n                  FIMK wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\n                </p>\n\n                <!-- Valid BIP44 Seed -->\n                <div flex layout=\"column\"\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\n\n                  <p>This is your FIMK address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\n                      Please store it in a safe place or you may lose access to your FIMK.\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\n\n                  <md-input-container flex>\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\n                  </md-input-container>\n\n                </div>\n              </div>\n\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n  createNXTAccount($event) {\n    let walletEntries = this.walletEntries\n    let self = this\n    if (walletEntries.length == 0)\n      return\n\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].copySeed = function () {\n        self.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\n      }\n\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n\n      $scope['vm'].okButtonClick = function ($event) {\n        let walletEntry = $scope['vm'].data.selectedWalletEntry\n        let success = false\n        if (walletEntry) {\n          let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'NXT')\n          if (!node) {\n            let storage = <StorageService>heat.$inject.get('storage')\n            let $rootScope = heat.$inject.get('$rootScope');\n            let store = storage.namespace('wallet', $rootScope, true)\n            let currencies = store.get(walletEntry.account)\n            if (!currencies)\n              currencies = []\n            currencies.push('NXT')\n            store.put(walletEntry.account, currencies.filter((value, index, self) => self.indexOf(value) === index));\n            self.initWalletEntry(walletEntry)\n          }\n          // load in next event loop to load currency addresses first\n          setTimeout(() => {\n            node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'NXT')\n            success = node.createNXTAddress(self)\n            walletEntry.toggle(true)\n            $mdDialog.hide(null).then(() => {\n              if (!success) {\n                dialogs.alert($event, 'Unable to Create Address', 'NXT address already created for this account')\n              }\n            })\n          }, 0)\n        }\n      }\n\n      $scope['vm'].data = {\n        selectedWalletEntry: walletEntries[0],\n        selected: walletEntries[0].account,\n        walletEntries: walletEntries,\n        password: ''\n      }\n\n      $scope['vm'].selectedWalletEntryChanged = function () {\n        $scope['vm'].data.password = ''\n        $scope['vm'].data.selectedWalletEntry = walletEntries.find(w => $scope['vm'].data.selected == w.account)\n      }\n    }\n\n    let deferred = this.$q.defer<{ password: string, secretPhrase: string }>()\n    this.$mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Create NXT Address</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n                <p>To create a new NXT address, please choose the master HEAT account you want to attach the new NXT address to:</p>\n\n                <!-- Select Master Account -->\n\n                <md-input-container flex>\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\n                  </md-select>\n                </md-input-container>\n\n                <!-- Invalid Non BIP44 Seed-->\n\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\n                  NXT wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\n                </p>\n\n                <!-- Valid BIP44 Seed -->\n                <div flex layout=\"column\"\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\n\n                  <p>This is your NXT address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\n                      Please store it in a safe place or you may lose access to your NXT.\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\n\n                  <md-input-container flex>\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\n                  </md-input-container>\n\n                </div>\n              </div>\n\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n\n  createARDRAccount($event) {\n    let walletEntries = this.walletEntries\n    let self = this\n    if (walletEntries.length == 0)\n      return\n\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\n      $scope['vm'].copySeed = function () {\n        self.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\n      }\n\n      $scope['vm'].cancelButtonClick = function () {\n        $mdDialog.cancel()\n      }\n\n      $scope['vm'].okButtonClick = function ($event) {\n        let walletEntry = $scope['vm'].data.selectedWalletEntry\n        let success = false\n        if (walletEntry) {\n          let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'ARDR')\n          if (!node) {\n            let storage = <StorageService>heat.$inject.get('storage')\n            let $rootScope = heat.$inject.get('$rootScope');\n            let store = storage.namespace('wallet', $rootScope, true)\n            let currencies = store.get(walletEntry.account)\n            if (!currencies)\n              currencies = []\n            currencies.push('ARDR')\n            store.put(walletEntry.account, currencies.filter((value, index, self) => self.indexOf(value) === index));\n            self.initWalletEntry(walletEntry)\n          }\n          // load in next event loop to load currency addresses first\n          setTimeout(() => {\n            node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'ARDR')\n            success = node.createARDRAddress(self)\n            walletEntry.toggle(true)\n            $mdDialog.hide(null).then(() => {\n              if (!success) {\n                dialogs.alert($event, 'Unable to Create Address', 'ARDR address already created for this account')\n              }\n            })\n          }, 0)\n        }\n      }\n\n      $scope['vm'].data = {\n        selectedWalletEntry: walletEntries[0],\n        selected: walletEntries[0].account,\n        walletEntries: walletEntries,\n        password: ''\n      }\n\n      $scope['vm'].selectedWalletEntryChanged = function () {\n        $scope['vm'].data.password = ''\n        $scope['vm'].data.selectedWalletEntry = walletEntries.find(w => $scope['vm'].data.selected == w.account)\n      }\n    }\n\n    let deferred = this.$q.defer<{ password: string, secretPhrase: string }>()\n    this.$mdDialog.show({\n      controller: DialogController2,\n      parent: angular.element(document.body),\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      controllerAs: 'vm',\n      template: `\n        <md-dialog>\n          <form name=\"dialogForm\">\n            <md-toolbar>\n              <div class=\"md-toolbar-tools\"><h2>Create ARDR Address</h2></div>\n            </md-toolbar>\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\n              <div flex layout=\"column\">\n                <p>To create a new ARDR address, please choose the master HEAT account you want to attach the new ARDR address to:</p>\n\n                <!-- Select Master Account -->\n\n                <md-input-container flex>\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\n                  </md-select>\n                </md-input-container>\n\n                <!-- Invalid Non BIP44 Seed-->\n\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\n                  ARDR wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\n                </p>\n\n                <!-- Valid BIP44 Seed -->\n                <div flex layout=\"column\"\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\n\n                  <p>This is your ARDR address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\n                      Please store it in a safe place or you may lose access to your ARDR.\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\n\n                  <md-input-container flex>\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\n                  </md-input-container>\n\n                </div>\n              </div>\n\n            </md-dialog-content>\n            <md-dialog-actions layout=\"row\">\n              <span flex></span>\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\n            </md-dialog-actions>\n          </form>\n        </md-dialog>\n      `\n    }).then(deferred.resolve, deferred.reject);\n    return deferred.promise\n  }\n}\n\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nclass DialogFieldBuilder {\n  constructor(private $scope: angular.IScope) {}\n\n  money(name: string, _default?: any): DialogFieldMoney { return new DialogFieldMoney(this.$scope, name, _default) }\n  account(name: string, _default?: any): DialogFieldAccount { return new DialogFieldAccount(this.$scope, name, _default) }\n  asset(name: string, _default?: any): DialogFieldAsset { return new DialogFieldAsset(this.$scope, name, _default) }\n  text(name: string, _default?: any): DialogFieldText { return new DialogFieldText(this.$scope, name, _default) }\n  hidden(name: string, _default?: any): DialogFieldHidden { return new DialogFieldHidden(this.$scope, name, _default) }\n  staticText(name: string, _default: any): DialogFieldStatic { return new DialogFieldStatic(this.$scope, name, _default) }\n}\n\ninterface IGenericFieldParserFunction {\n  (v: any): any;\n}\n\ninterface IGenericFieldFormatterFunction {\n  (v: any): any;\n}\n\ninterface IGenericFieldChangedFunction {\n  (newValue: any, previousValue?: any): any;\n}\n\ninterface IGenericFieldValidatorFunction {\n  (modelValue: any, viewValue?: any): boolean | angular.IPromise<boolean>;\n}\n\ninterface ITransactionFieldValidator {\n  validator: IGenericFieldValidatorFunction;\n  message: string;\n}\n\nabstract class AbstractDialogField {\n\n  private _previousValue: any;\n  private _onchange: Array<IGenericFieldChangedFunction> = [];\n\n  public parsers: Array<IGenericFieldParserFunction> = [];\n  public formatters: Array<IGenericFieldFormatterFunction> = [];\n  public validators: Array<ITransactionFieldValidator> = [];\n  public asyncValidators: Array<ITransactionFieldValidator> = [];\n  public errorMessages: Array<any> = [];\n\n  public _label: string;\n  public _selector: string;\n  public _required: boolean = false;\n  public _readonly: boolean = false;\n  public _disabled: boolean = false;\n  public _visible: boolean = true;\n\n  constructor(private $scope: angular.IScope,\n              public name: string,\n              public value: any) {\n    this._previousValue = value;\n  }\n\n  /* Model change listener */\n  changed(force?: boolean) {\n    if (force || this.value != this._previousValue) {\n      this._onchange.forEach((fn: IGenericFieldChangedFunction) => {\n        fn(this.value, this._previousValue);\n      });\n      this._previousValue = this.value;\n    }\n  }\n\n  protected selector(selector: string) {\n    this._selector = selector;\n  }\n\n  /**\n   * Either provide a single parser function or an array of parser functions\n   * @param parser Array<Function>|Function\n   * @returns AbstractDialogField\n   * */\n  public parse(parser: any) {\n    this.parsers = this.parsers.concat(parser);\n    return this;\n  }\n\n  /**\n   * Either provide a single formatter function or an array of formatter functions\n   * @param parser Array<Function>|Function\n   * @returns AbstractDialogField\n   * */\n  public formatter(formatter: any) {\n    this.formatters = this.formatters.concat(formatter);\n    return this;\n  }\n\n  /**\n   * Provide a synchronous validator function and error message\n   * @param message String error message to display with control\n   * @param validator Function(val) returns Boolean\n   * @returns AbstractDialogField\n   * */\n  public validate(message: string, validator: IGenericFieldValidatorFunction) {\n    this.validators.push({\n      validator: validator,\n      message: message\n    });\n    return this;\n  }\n\n  /**\n   * Provide a asynchronous validator function and error message\n   * @param message String error message to display with control\n   * @param validator Function(val) returns Boolean\n   * @returns AbstractDialogField\n   * */\n  public asyncValidate(message: string, validator: IGenericFieldValidatorFunction) {\n    this.asyncValidators.push({\n      validator: validator,\n      message: message\n    });\n    return this;\n  }\n\n  /**\n   * Provide a callback that will be called when the model value changes\n   * @param fn IGenericFieldChangedFunction\n   * @returns AbstractDialogField\n   */\n  public onchange(fn: IGenericFieldChangedFunction) {\n    this._onchange.push(fn);\n    return this;\n  }\n\n  public required(required?: boolean) {\n    this._required = angular.isDefined(required) ? required : true;\n    return this;\n  }\n\n  public readonly(readonly?: boolean) {\n    this._readonly = angular.isDefined(readonly) ? readonly : true;\n    return this;\n  }\n\n  public label(label: string) {\n    this._label = label;\n    return this;\n  }\n\n  public disabled(disabled: boolean) {\n    this._disabled = disabled;\n    return this;\n  }\n\n  public visible(visible: boolean) {\n    this._visible = visible;\n    return this;\n  }\n}\n\n@Component({\n  selector: 'field',\n  inputs: ['label','value','changed','f'],\n  /* Every field must add a linear progress handler beneath the input element\n     in order to support displaying async validator progress.\n\n     <md-progress-linear md-mode=\"indeterminate\" ng-if=\"userForm.userField.$pending\">\n     </md-progress-linear>\n\n     Also on the containing input container a conditional class has to be added\n     that signals the sync validators are loading.\n\n     <md-input-container ... ng-class=\"{'async-validator-pending':userForm.userField.$pending}\"> */\n  styles: [`\n    field .async-validator-pending md-progress-linear,\n    field .async-validator-pending md-progress-linear * {\n      height: 3px !important;\n    }\n    field .async-validator-pending .md-input:focus {\n      border-width: 0px !important;\n    }\n  `],\n  link: (scope, element, attrs, controller) => {\n    var h = [];\n    h.push('<',attrs.selector, ' label=\"vm.label\" value=\"vm.value\" changed=\"vm.changed\" f=\"vm.f\">');\n    h.push('</',attrs.selector,'>');\n    element.html(h.join(''));\n    element.injector().get('$compile')(element.contents())(scope);\n  }\n})\nclass Field {}\n\nheat.Loader.directive('fieldValidator', function() {\n  return {\n    require: '^ngModel',\n    link: function(scope, elm, attrs: any, ngModel: any) {\n\n      elm.bind('blur', function() {\n        if(!ngModel.$valid) {\n            return;\n        }\n        var viewValue = ngModel.$modelValue;\n        var formatters = ngModel.$formatters;\n        for (var i = formatters.length - 1; i >= 0; --i) {\n            viewValue = formatters[i](viewValue);\n        }\n        ngModel.$viewValue = viewValue;\n        ngModel.$render();\n      });\n\n      var field: AbstractDialogField = scope.$eval(attrs.fieldValidator);\n      if (!field) {\n        return;\n      }\n\n      field.formatters.forEach((fn) => { ngModel.$formatters.unshift(fn) });\n\n      field.parsers.forEach((fn) => { ngModel.$parsers.push(fn) });\n\n      field.validators.forEach((validator: ITransactionFieldValidator, index: number) => {\n        ngModel.$validators[`validator_${index}`] = function (modelValue, viewValue) {\n          return validator.validator(modelValue, viewValue);\n        };\n        field.errorMessages.push({\n          type: `validator_${index}`,\n          text: validator.message\n        });\n      });\n\n      field.asyncValidators.forEach((validator: ITransactionFieldValidator, index: number) => {\n        ngModel.$asyncValidators[`async_validator_${index}`] = function (modelValue, viewValue) {\n          return validator.validator(modelValue, viewValue);\n        };\n        field.errorMessages.push({\n          type: `async_validator_${index}`,\n          text: validator.message\n        });\n      });\n    }\n  };\n});","///<reference path='AbstractDialogField.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass DialogFieldAccount extends AbstractDialogField {\n\n  private heat = <HeatService> heat.$inject.get('heat');\n  private settings = <SettingsService> heat.$inject.get('settings');\n  private user = <UserService> heat.$inject.get('user');\n  private $q = <angular.IQService> heat.$inject.get('$q');\n  private numbersOnly = /^[0-9]+$/;\n\n  constructor($scope, name: string, _default?: any) {\n    super($scope, name, _default || '');\n    this.selector('field-account');\n  }\n\n  search(query: string) {\n    let deferred = this.$q.defer();\n    this.heat.api.searchPublicNames(query, 0, 100).then(accounts => {\n      accounts.forEach(account => {\n        if (this.numbersOnly.test(account.publicName)) {\n          account.publicName = '';\n        }\n      });\n      if (accounts.length > 0) {\n        deferred.resolve(accounts);\n      }\n      else if (this.numbersOnly.test(query)) {\n        this.heat.api.getAccountByNumericId(query).then(account=>{\n          deferred.resolve([account]);\n        }, deferred.reject);\n      }\n    }, deferred.reject);\n    return deferred.promise;\n  }\n}\n\n@Component({\n  selector: 'fieldAccount',\n  inputs: ['label','value','changed','f'],\n  styles: [`\n  field-account md-input-container {\n    padding-bottom: 0px !important;\n  }\n  `],\n  template: `\n    <ng-form name=\"userForm\" ng-show=\"vm.f._visible\">\n      <md-autocomplete\n        ng-required=\"vm.f._required\"\n        ng-readonly=\"vm.f._readonly\"\n        md-input-name=\"userField\"\n        md-floating-label=\"{{vm.label}}\"\n        md-min-length=\"1\"\n        md-items=\"item in vm.f.search(vm.searchText)\"\n        md-item-text=\"item.publicName||item.id\"\n        md-search-text=\"vm.searchText\"\n        md-selected-item-change=\"vm.selectedItemChange()\"\n        md-search-text-change=\"vm.searchTextChange()\"\n        md-selected-item=\"vm.selectedItem\"\n        ng-disabled=\"vm.f._disabled\">\n        <md-item-template>\n          <div layout=\"row\" flex class=\"monospace-font\">\n            <span>{{item.publicName||''}}</span>\n            <span flex></span>\n            <span>{{item.id}}</span>\n          </span>\n        </md-item-template>\n        <md-not-found>\n          No matches found.\n        </md-not-found>\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\n          <div ng-messages-include=\"error-messages\"></div>\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\n        </div>\n      </md-autocomplete>\n    </ng-form>\n  `\n})\nclass DialogFieldAccountComponent {\n  f: any;\n  selectedItem: any;\n  searchText: string;\n\n  constructor() {\n    this.searchText = this.f.value;\n  }\n\n  selectedItemChange() {\n    this.f.value = this.selectedItem ? this.selectedItem.id : '';\n  }\n\n  searchTextChange() {\n    this.f.value = this.searchText;\n  }\n}\n","///<reference path='AbstractDialogField.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ninterface DialogFieldAssetAssetInfo {\n  symbol: string;\n  name: string;\n  id: string;\n  decimals: number;\n  certified: boolean;\n}\n\nclass DialogFieldAsset extends AbstractDialogField {\n\n  private heat = <HeatService> heat.$inject.get('heat');\n  private $q = <angular.IQService> heat.$inject.get('$q');\n  private settings = <SettingsService> heat.$inject.get('settings');\n  private user = <UserService> heat.$inject.get('user');\n  private assetInfo = <AssetInfoService> heat.$inject.get('assetInfo');\n  private availableAssets: Array<DialogFieldAssetAssetInfo> = [];\n  private _searchAllAssets: boolean = false;\n  private availableAssetsPromise: angular.IPromise<DialogFieldAssetAssetInfo>;\n\n  constructor($scope, name: string, _default?: any) {\n    super($scope, name, _default || '');\n    this.selector('field-asset');\n  }\n\n  initAvailableAssets() {\n    if (this.availableAssetsPromise) {\n      return this.availableAssetsPromise;\n    }\n    let deferred = this.$q.defer<any>();\n    if (this._searchAllAssets) {\n      this.heat.api.getAllAssetProtocol1(0,100).then((assets) => {\n        assets.unshift({\n          name: \"HEAT Cryptocurrency\",\n          symbol: \"HEAT\",\n          asset: \"0\",\n          decimals: 8\n        });\n        var promises=[];\n        assets.forEach((asset)=>{\n          promises.push(\n            this.assetInfo.getInfo(asset.asset).then((info2)=> {\n              let info = {\n                name: asset.name,\n                symbol: asset.symbol,\n                id: asset.asset,\n                decimals: asset.decimals,\n                certified: false\n              };\n              info.symbol = info2.symbol;\n              info.name = info2.name;\n              info.certified = info2.certified;\n              this.availableAssets.push(info);\n            })\n          );\n        });\n        this.$q.all(promises).then(deferred.resolve, deferred.reject);\n      }, deferred.reject)\n    }\n    else {\n      this.heat.api.getAccountBalances(this.user.account, \"0\", 1, 0, 100).then((balances) => {\n        var promises=[];\n        balances.forEach((balance) => {\n          promises.push(\n            this.assetInfo.getInfo(balance.id).then((info2)=> {\n              let info = {\n                name: '*',\n                symbol: '*',\n                id: balance.id,\n                decimals: balance.decimals,\n                certified: false\n              };\n              info.symbol = info2.symbol;\n              info.name = info2.name;\n              info.certified = info2.certified;\n              this.availableAssets.push(info);\n            })\n          );\n        });\n        this.$q.all(promises).then(deferred.resolve, deferred.reject);\n      }, deferred.reject)\n    }\n    return this.availableAssetsPromise = deferred.promise;\n  }\n\n  search(_query: string) {\n    var deferred = this.$q.defer();\n    var query = _query.toLowerCase();\n    if (!angular.isString(query)) {\n      deferred.resolve(this.availableAssets);\n    }\n    else {\n      this.initAvailableAssets().then(() => {\n        var matches = [];\n        this.availableAssets.forEach((asset) => {\n          if ((asset.name && asset.name.toLowerCase().indexOf(query) != -1) ||\n              (asset.symbol && asset.symbol.toLowerCase().indexOf(query) != -1) ||\n              (asset.id && asset.id.toLowerCase().indexOf(query) != -1)) {\n            matches.push(asset);\n          }\n        });\n        deferred.resolve(matches);\n      }, deferred.reject);\n    }\n    return deferred.promise;\n  }\n\n  getAssetInfo(asset: string) : DialogFieldAssetAssetInfo {\n    for (var i=0; i<this.availableAssets.length; i++) {\n      if (this.availableAssets[i].id == asset) {\n        return this.availableAssets[i];\n      }\n    }\n    return null;\n  }\n\n  searchAllAssets(searchAllAssets: boolean) {\n    this._searchAllAssets = searchAllAssets;\n    return this;\n  }\n}\n\n@Component({\n  selector: 'fieldAsset',\n  inputs: ['label','value','changed','f'],\n  styles: [`\n  field-asset md-input-container {\n    padding-bottom: 0px !important;\n  }\n  `],\n  template: `\n    <ng-form name=\"userForm\" ng-show=\"vm.f._visible\">\n      <md-autocomplete\n        ng-required=\"vm.f._required\"\n        ng-readonly=\"vm.f._readonly\"\n        md-input-name=\"userField\"\n        md-floating-label=\"{{vm.label}}\"\n        md-min-length=\"1\"\n        md-items=\"item in vm.f.search(vm.searchText)\"\n        md-item-text=\"item.symbol + '    (' + item.id + ')'\"\n        md-search-text=\"vm.searchText\"\n        md-selected-item-change=\"vm.selectedItemChange()\"\n        md-search-text-change=\"vm.searchTextChange()\"\n        md-selected-item=\"vm.selectedItem\"\n        ng-disabled=\"vm.f._disabled\">\n        <md-item-template>\n          <div layout=\"row\" flex>\n            <span>{{item.symbol}}</span>\n            <span flex></span>\n            <span>{{item.id}}</span>\n          </span>\n        </md-item-template>\n        <md-not-found>\n          No matches found.\n        </md-not-found>\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\n          <div ng-messages-include=\"error-messages\"></div>\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\n        </div>\n      </md-autocomplete>\n    </ng-form>\n  `\n})\nclass DialogFieldAssetComponent {\n  f: any;\n  selectedItem: any;\n  searchText: string;\n\n  constructor() {\n    this.searchText = this.f.value;\n  }\n\n  selectedItemChange() {\n    this.f.value = this.selectedItem ? this.selectedItem.id : '';\n  }\n\n  searchTextChange() {\n    this.f.value = this.searchText;\n  }\n}","///<reference path='AbstractDialogField.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass DialogFieldHidden extends AbstractDialogField {\n  constructor($scope, name: string, _default?: any) {\n    super($scope, name, _default || '');\n    this.selector('field-hidden');\n  }\n}\n\n@Component({\n  selector: 'fieldHidden',\n  inputs: ['label','value','changed','f'],\n  template: `\n    <ng-form name=\"userForm\" layout=\"row\">\n      <input type=\"hidden\" field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\n          name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\" ng-trim=\"false\">\n    </ng-form>\n  `\n})\nclass DialogFieldHiddenComponent {}","///<reference path='AbstractDialogField.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass DialogFieldMoney extends AbstractDialogField {\n\n  private _precision: number = 8;\n  private _symbol: string = 'HEAT';\n\n  constructor($scope, name: string, _default?: any) {\n    super($scope, name, _default);\n    this.selector('field-money');\n    this.parse((value) => {\n      if (value == '') return '';\n      if (!utils.isNumber(value)) return undefined;\n      try {\n        return utils.convertToQNT(utils.unformat(value));\n      } catch (e) {\n        console.log('this')\n        console.log(this)\n        console.log('error:',e)\n      }\n\n    });\n    this.formatter((value) => {\n      if (value === undefined || value == '') return undefined;\n      return utils.formatQNT(value, this._precision);\n    });\n    this.formatter((value) => {\n      if (value === undefined || value == '') return undefined;\n      return utils.commaFormat(value);\n    });\n  }\n\n  precision(precision: number): DialogFieldMoney {\n    this._precision = precision;\n    return this;\n  }\n\n  symbol(symbol: string): DialogFieldMoney {\n    this._symbol = symbol;\n    return this;\n  }\n}\n\n@Component({\n  selector: 'fieldMoney',\n  inputs: ['label','value','changed','f'],\n  template: `\n    <ng-form name=\"userForm\" ng-show=\"vm.f._visible\">\n      <md-input-container class=\"md-block\" ng-class=\"{'async-validator-pending':userForm.userField.$pending}\">\n        <label>{{vm.label}}<span ng-if=\"vm.f._symbol\"> ({{vm.f._symbol}})</span></label>\n        <input field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\n            name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\" ng-disabled=\"vm.f._disabled\">\n        <md-progress-linear md-mode=\"indeterminate\" ng-if=\"userForm.userField.$pending\"></md-progress-linear>\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\n          <div ng-messages-include=\"error-messages\"></div>\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\n        </div>\n      </md-input-container>\n    </ng-form>\n  `\n})\nclass DialogFieldMoneyComponent {}\n","///<reference path='AbstractDialogField.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass DialogFieldStatic extends AbstractDialogField {\n  constructor($scope, name: string, _default?: any) {\n    super($scope, name, _default || '');\n    this.selector('field-static');\n  }\n}\n\n@Component({\n  selector: 'fieldStatic',\n  inputs: ['label','value','changed','f'],\n  template: `\n    <ng-form name=\"userForm\" layout=\"row\" ng-show=\"vm.f._visible\">\n      <md-input-container class=\"md-block\" flex ng-class=\"{'async-validator-pending':userForm.userField.$pending}\">\n        <label ng-if=\"vm.label\">{{vm.label}}</label>\n        <p>{{vm.value}}</p>\n      </md-input-container>\n    </ng-form>\n  `\n})\nclass DialogFieldStaticComponent {}","///<reference path='AbstractDialogField.ts'/>\n/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nclass DialogFieldText extends AbstractDialogField {\n\n  _rows: number = 0;\n\n  constructor($scope, name: string, _default?: any) {\n    super($scope, name, _default || '');\n    this.selector('field-text');\n  }\n\n  rows(rows: number) {\n    this._rows = rows;\n    return this;\n  }\n}\n\n@Component({\n  selector: 'fieldText',\n  inputs: ['label','value','changed','f'],\n  template: `\n    <ng-form name=\"userForm\" layout=\"row\" ng-show=\"vm.f._visible\">\n      <md-input-container class=\"md-block\" flex ng-class=\"{'async-validator-pending':userForm.userField.$pending}\">\n        <label>{{vm.label}}</label>\n        <input ng-if=\"!vm.f._rows\" field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\n            name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\" ng-trim=\"false\" ng-disabled=\"vm.f._disabled\">\n        <textarea ng-if=\"vm.f._rows\" field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\n            name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\"\n            ng-trim=\"false\" rows=\"{{vm.f._rows}}\" ng-disabled=\"vm.f._disabled\"></textarea>\n        <md-progress-linear md-mode=\"indeterminate\" ng-if=\"userForm.userField.$pending\"></md-progress-linear>\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\n          <div ng-messages-include=\"error-messages\"></div>\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\n        </div>\n      </md-input-container>\n    </ng-form>\n  `\n})\nclass DialogFieldTextComponent {}","/*\n * The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\ninterface ITransactionBuilderBroadcastResponse {\n  success?: boolean;\n  serverError?: string;\n  internalError?: string;\n  internalTimeout?: boolean;\n}\n\ninterface ITransactionBuilderSignError {\n  code: number;\n  description: string;\n}\n\nenum TransactionMessageType {\n  TO_SELF, TO_RECIPIENT, PUBLIC\n}\n\nclass TransactionBuilder {\n\n  private $q = <angular.IQService> heat.$inject.get('$q');\n  private user = <UserService> heat.$inject.get('user');\n  private settings = <SettingsService> heat.$inject.get('settings');\n  private heat = <HeatService> heat.$inject.get('heat');\n\n  private _feeHQT: string;\n  private _deadline: number = 1440;\n  private _message: string;\n  private _messageType: TransactionMessageType;\n  private _messageIsBinary: boolean = false;\n  private _secretPhrase: string;\n  private _recipientPublicKey: string;\n  private _recipient: string;\n  private _attachment: any;\n  private _transactionArgs: IHeatCreateTransactionInput;\n  private _transactionData: IHeatCreateTransactionOutput;\n  private _transactionBytes: string;\n\n  /* Client side calculated transaction full hash, set when `sign` completes */\n  public transactionFullHash: string;\n\n  /* Client side calculated transaction id, set when `sign` completes */\n  public transactionId: string;\n\n  constructor(private transaction: AbstractTransaction) {}\n\n  public deadline(deadline: number): TransactionBuilder {\n    this._deadline = deadline;\n    return this;\n  }\n\n  public feeNQT(feeHQT: string): TransactionBuilder {\n    this._feeHQT = feeHQT;\n    return this;\n  }\n\n  public secretPhrase(secretPhrase: string): TransactionBuilder {\n    this._secretPhrase = secretPhrase;\n    return this;\n  }\n\n  public recipientPublicKey(recipientPublicKey: string): TransactionBuilder {\n    this._recipientPublicKey = recipientPublicKey;\n    return this;\n  }\n\n  public recipient(recipient: string): TransactionBuilder {\n    this._recipient = recipient;\n    return this;\n  }\n\n  public message(message: string, messageType: TransactionMessageType, isBinary?: boolean): TransactionBuilder {\n    this._message = message;\n    this._messageType = messageType;\n    this._messageIsBinary = isBinary;\n    return this;\n  }\n\n  /* Accepts a function or an object */\n  public attachment(name: string, attachment: any): TransactionBuilder {\n    this._attachment = {};\n    this._attachment[name] = attachment;\n    return this;\n  }\n\n  /**\n   * Once all properties for this transaction are provided call the `create` method\n   * to package the arguments and send them to the `createTransaction` server API.\n   * When the call succeeds expect the returned promise to resolve.\n   *\n   * @returns Promise\n   */\n  public create(): angular.IPromise<any> {\n    var deferred = this.$q.defer();\n    try {\n\n      /* could throw an error during encrypting of message */\n      this._transactionArgs = this.getCreateTransactionArgs();\n\n      var p = this.heat.api.createTransaction(this._transactionArgs);\n      p.then((data: IHeatCreateTransactionOutput) => {\n        this._transactionData = data;\n        deferred.resolve();\n      }).\n      catch((error: ServerEngineError) => {\n        console.log(error);\n        deferred.reject(error);\n      });\n\n    } catch (e) {\n      console.log(e);\n      deferred.reject(e);\n    }\n    return deferred.promise;\n  }\n\n  /* Signs and verifies the unsigned transaction bytes */\n  public sign(): angular.IPromise<any> {\n    var deferred = this.$q.defer();\n    var signature = heat.crypto.signBytes(\n      this._transactionData.unsignedTransactionBytes,\n        converters.stringToHexString(this._secretPhrase));\n\n    var publicKey = heat.crypto.secretPhraseToPublicKey(this._secretPhrase);\n    if (!heat.crypto.verifyBytes(signature, this._transactionData.unsignedTransactionBytes, publicKey)) {\n      deferred.reject(<ITransactionBuilderSignError> {\n        description: 'Server returned invalid transaction',\n        code: 1\n      });\n    }\n    else {\n      var payload = this.transaction.verifyAndSignTransactionBytes(\n                      this._transactionData.unsignedTransactionBytes,\n                      signature, this._transactionArgs);\n      if (!payload) {\n        deferred.reject(<ITransactionBuilderSignError> {\n          description: 'Could not confirm client signature',\n          code: 2\n        });\n      }\n      else {\n        this._transactionBytes = payload;\n        this.transactionFullHash = heat.crypto.calculateFullHash(\n          this._transactionData.unsignedTransactionBytes, signature);\n        this.transactionId = heat.crypto.calculateTransactionId(this.transactionFullHash);\n\n        deferred.resolve();\n      }\n    }\n    return deferred.promise;\n  }\n\n  /* Broadcasts the transaction to the network, this method can be called multiple times */\n  public broadcast(): angular.IPromise<ITransactionBuilderBroadcastResponse> {\n    var deferred = this.$q.defer();\n\n    var p = this.heat.api.broadcast({ transactionBytes: this._transactionBytes});\n    p.then((data: IHeatBroadcastOutput) => {\n      if (data.fullHash != this.transactionFullHash) {\n        deferred.resolve({\n          success: false,\n          internalError: 'Fullhash from server does not match expected fullHash'\n        });\n      }\n      else if (data.transaction != this.transactionId) {\n        deferred.resolve({\n          success: false,\n          internalError: 'Transaction id from server does not match expected id'\n        });\n      }\n      else {\n        deferred.resolve({\n          success: true\n        });\n      }\n    }).catch((error: ServerEngineError) => {\n      if (error instanceof InternalServerTimeoutError) {\n        deferred.resolve({\n          success: false,\n          internalTimeout: true\n        });\n      }\n      else {\n        deferred.resolve({\n          success: false,\n          serverError: error.description\n        });\n      }\n    });\n\n    return deferred.promise;\n  }\n\n  /**\n   * Constructs the arguments for the `createTransaction` server API call.\n   * @returns Object with arguments as properties\n   */\n  private getCreateTransactionArgs(): IHeatCreateTransactionInput {\n    var attachment = angular.isFunction(this._attachment) ? this._attachment.call(null) : (this._attachment||{});\n    if (!angular.isDefined(this._feeHQT)) {\n      throw new Error(\"You must provide a fee\");\n    }\n    var args: IHeatCreateTransactionInput = {\n      fee: this._feeHQT,\n      deadline: this._deadline,\n      publicKey: heat.crypto.secretPhraseToPublicKey(this._secretPhrase),\n      broadcast: false\n    };\n    angular.extend(args, attachment);\n    if (utils.emptyToNull(this._recipientPublicKey)) {\n      args.recipientPublicKey = this._recipientPublicKey;\n    }\n    if (utils.emptyToNull(this._recipient)) {\n      args.recipient = this._recipient;\n    }\n    if (utils.emptyToNull(this._message)) {\n      switch (this._messageType) {\n        case TransactionMessageType.TO_SELF: {\n          angular.extend(args, this.encryptToSelf(this._message));\n          break;\n        }\n        case TransactionMessageType.TO_RECIPIENT: {\n          if (!angular.isDefined(args.recipientPublicKey)) {\n            throw new Error(\"You must provide a recipient that has a publickey\");\n          }\n          var publicKey = converters.hexStringToByteArray(args.recipientPublicKey);\n          angular.extend(args, this.encryptToRecipient(this._message, args.recipient, publicKey));\n          break;\n        }\n        case TransactionMessageType.PUBLIC: {\n          args.message = this._message;\n          args.messageIsText = !this._messageIsBinary;\n          break;\n        }\n      }\n    }\n    return args;\n  }\n\n  private encryptToSelf(message: any, isBinary?: boolean): any {\n    var publicKey = converters.hexStringToByteArray(heat.crypto.secretPhraseToPublicKey(this._secretPhrase));\n    var encrypted = isBinary ?\n                    heat.crypto.encryptBinaryNote(message, {\"publicKey\": publicKey}, this._secretPhrase, true) :\n                    heat.crypto.encryptNote(message, {\"publicKey\": publicKey}, this._secretPhrase);\n    return {\n      \"encryptToSelfMessageData\": encrypted.message,\n      \"encryptToSelfMessageNonce\": encrypted.nonce,\n      \"messageToEncryptToSelfIsText\": !isBinary\n    };\n  }\n\n  private encryptToRecipient(message: any, recipient: string, recipientPublicKey: Array<number>, isBinary?: boolean): any {\n    var options: heat.crypto.IEncryptOptions = {\n      \"account\": recipient,\n      \"publicKey\": recipientPublicKey\n    };\n    var encrypted = isBinary ?\n                    heat.crypto.encryptBinaryNote(message, options, this._secretPhrase, true) :\n                    heat.crypto.encryptNote(message, options, this._secretPhrase);\n    return {\n      \"encryptedMessageData\": encrypted.message,\n      \"encryptedMessageNonce\": encrypted.nonce,\n      \"messageToEncryptIsText\": !isBinary\n    };\n  }\n}","@Service('ardorTradesProviderFactory')\n@Inject('ardorBlockExplorerService','$q')\nclass ArdorTradesProviderFactory  {\n  constructor(private ardorBlockExplorerService: ArdorBlockExplorerService, private $q: angular.IQService) {}\n\n  public createProvider(currency: string, asset: string, account?: string): IPaginatedDataProvider {\n    return new ArdorTradesProvider(currency, asset, account, this.ardorBlockExplorerService, this.$q);\n  }\n}\n\nclass ArdorTradesProvider implements IPaginatedDataProvider {\n\n  constructor(private currency: string,\n              private asset: string,\n              private account: string,\n              private ardorBlockExplorerService: ArdorBlockExplorerService,\n              private $q: angular.IQService) {}\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    if (this.account)\n      return this.ardorBlockExplorerService.getTradesCount(this.currency, this.account);\n    return this.ardorBlockExplorerService.getTradesCount(this.currency);\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTrade>> {\n    if (this.account)\n      return this.ardorBlockExplorerService.getTrades(this.currency, firstIndex, lastIndex, this.account);\n    return this.ardorBlockExplorerService.getTrades(this.currency, firstIndex, lastIndex);\n  }\n}","@Component({\n  selector: 'ardorTraderQuickBuySell',\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder', 'oneClickOrders'],\n  template: `\n    <div>\n      <div class=\"trader-component-title\">Buy/Sell&nbsp;<elipses-loading ng-show=\"vm.loading\"></elipses-loading></div>\n      <form name=\"quickBuySellForm\">\n        <div class=\"row\">\n          <div class=\"label\">\n            Unit price\n          </div>\n          <div class=\"input\">\n            <input id=\"trader-quick-buy-sell-price-input\" type=\"text\" ng-model=\"vm.price\" required\n              ng-change=\"vm.recalculateTotal()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n          </div>\n          <div class=\"label\">\n            {{vm.currencyInfo.symbol}} / {{vm.assetInfo.symbol}}\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"label\">\n            Amount\n          </div>\n          <div class=\"input\">\n            <input id=\"trader-quick-buy-sell-quantity-input\" type=\"text\" ng-model=\"vm.quantity\"\n              ng-change=\"vm.recalculateTotal()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n          </div>\n          <div class=\"label\">\n            {{vm.assetInfo.symbol}}\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"label\" ng-class=\"{'expires-invalid': !vm.expiryValid}\">\n            Expires in\n          </div>\n          <div class=\"input\">\n            <input type=\"number\" ng-model=\"vm.expiryUnitsValue\" required name=\"expiry\"\n                      ng-change=\"vm.expiryUnitsValueChanged()\"\n                      min=\"{{vm.expiryUnitsOptions[vm.expiryUnits].min}}\"\n                      max=\"{{vm.expiryUnitsOptions[vm.expiryUnits].max}}\"\n                      ng-disabled=\"true\">\n          </div>\n          <div class=\"label\">\n            <md-menu>\n              <a ng-click=\"$mdMenu.open($event)\">\n                <md-tooltip>{{vm.expiresTooltip}}</md-tooltip>\n                {{vm.expiryUnitsOptions[vm.expiryUnits].label}}\n              </a>\n              <md-menu-content width=\"4\">\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='minutes';vm.expiryUnitsValueChanged()\">Minutes</md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='hours';vm.expiryUnitsValueChanged()\">Hours</md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='days';vm.expiryUnitsValueChanged()\">Days</md-button>\n                </md-menu-item>\n                <md-menu-item>\n                  <md-button ng-click=\"vm.expiryUnits='weeks';vm.expiryUnitsValueChanged()\">Weeks</md-button>\n                </md-menu-item>\n              </md-menu-content>\n            </md-menu>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"label\">\n            Total\n          </div>\n          <div class=\"input\">\n            <input type=\"text\" id=\"trader-quick-buy-sell-total-input\" ng-model=\"vm.total\" required max-decimals=\"{{vm.currencyInfo.decimals}}\"\n              ng-change=\"vm.recalculateAmount()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\n          </div>\n          <div class=\"label\">\n            {{vm.currencyInfo.symbol}}\n          </div>\n        </div>\n        <div ng-hide=\"vm.user.unlocked\" class=\"row bottom-row\">\n          <md-button class=\"md-primary\" aria-label=\"Sign in\" href=\"#/login\">\n            Sign in to trade\n          </md-button>\n        </div>\n        <div ng-show=\"vm.user.unlocked\" class=\"row bottom-row\">\n          <div>\n            <md-button class=\"md-primary\" aria-label=\"Buy\" ng-click=\"vm.quickBid($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\n              BUY\n            </md-button>\n          </div>\n          <div>\n          <md-switch ng-model=\"vm.oneClickOrders\" aria-label=\"1-click orders\" class=\"md-primary\" ng-disabled=\"true\">\n            <span ng-show=\"vm.oneClickOrders\"><b>1-click orders enabled</b></span><span ng-hide=\"vm.oneClickOrders\">1-click orders disabled</span>\n          </md-switch>\n        </div>\n          <div>\n            <md-button class=\"md-warn\" aria-label=\"Sell\" ng-click=\"vm.quickAsk($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\n              SELL\n            </md-button>\n          </div>\n        </div>\n      </form>\n    </div>\n  `\n})\n@Inject('$scope', '$q', '$mdToast', 'user', 'settings', 'ardorBlockExplorerService')\nclass ArdorTraderQuickBuySellComponent {\n\n  // inputs\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  selectedOrder: IHeatOrder; // @input\n  oneClickOrders: boolean; // @input\n\n  quantity: string = '0';\n  price: string = '0';\n  total: string = null;\n  fee: string = utils.formatQNT(HeatAPI.fee.standard, 8); // fee in HEAT\n\n  EXPIRY_MIN = 3600;\n  EXPIRY_MAX = 3600 * 24 * 30;\n\n  expiryUnitsOptions = {\n    'minutes': {\n      label: 'Minutes',\n      min: Math.round(this.EXPIRY_MIN / 60),\n      max: Math.round(this.EXPIRY_MAX / 60),\n      delta: 60\n    },\n    'hours': {\n      label: 'Hours',\n      min: Math.round(this.EXPIRY_MIN / (60 * 60)),\n      max: Math.round(this.EXPIRY_MAX / (60 * 60)),\n      delta: 60 * 60\n    },\n    'days': {\n      label: 'Days',\n      min: 1,\n      max: 30,\n      delta: (60 * 60 * 24)\n    },\n    'weeks': {\n      label: 'Weeks',\n      min: 1,\n      max: 4,\n      delta: (60 * 60 * 24 * 7)\n    }\n  }\n  expiryUnits = 'days';\n  expiryUnitsValue = 30;\n  expiry: number;\n  expiryValid: boolean;\n  expiresTooltip: string = '';\n\n  // displays the toast in debounce wrapper\n  notifyUser: (text: string) => void;\n\n  constructor(private $scope: angular.IScope,\n    private $q: angular.IQService,\n    private $mdToast: angular.material.IToastService,\n    public user: UserService,\n    private settings: SettingsService,\n    private ardorBlockExplorerService: ArdorBlockExplorerService) {\n\n    $scope.$on('price', (event, opts) => {\n      this.price = opts.price.toFixed(8);\n      this.quantity = opts.balance.toFixed(8);\n      this.total = opts.total.toFixed(8);\n    })\n\n    $scope.$watch('vm.selectedOrder', () => {\n      if (this.selectedOrder) {\n        let price = parseFloat(utils.formatQNT(this.selectedOrder.price))\n        price = 1/price\n        this.price = price.toFixed(this.currencyInfo.decimals)\n\n        if (this.selectedOrder.type == 'bid' && angular.isString(this.assetInfo.userBalance)) {\n          this.quantity = utils.formatQNT(this.assetInfo.userBalance, this.assetInfo.decimals)\n          let total = parseFloat(utils.unformat(this.price)) * parseFloat(utils.unformat(this.quantity))\n          this.total = String(total)\n        }\n        else if (this.selectedOrder.type == 'ask' && angular.isString(this.currencyInfo.userBalance)) {\n          this.total = utils.formatQNT(this.currencyInfo.userBalance, this.currencyInfo.decimals)\n          let quantity = parseFloat(utils.unformat(this.total)) / parseFloat(utils.unformat(this.price))\n          this.quantity = String(quantity)\n        }\n      }\n    });\n\n    this.notifyUser = utils.debounce((text: string) => {\n      $mdToast.show($mdToast.simple().textContent(text).hideDelay(3000));\n    }, 500, true);\n    this.expiryUnitsValueChanged(true);\n  }\n\n  expiryUnitsValueChanged(suppressNotification?: boolean) {\n    this.expiry = parseInt(this.expiryUnitsValue + '') * this.expiryUnitsOptions[this.expiryUnits].delta;\n    this.expiryValid = false;\n    this.expiresTooltip = '';\n\n    if (this.expiry <= this.EXPIRY_MAX && this.expiry >= this.EXPIRY_MIN) {\n      this.expiryValid = true;\n      let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n      let date = new Date(Date.now() + (this.expiry * 1000));\n      let dateFormatted = dateFormat(date, format);\n      this.expiresTooltip = `This order will expiry if (even partially) unfilled by ${dateFormatted}`;\n    }\n    else {\n      let min = this.expiryUnitsOptions[this.expiryUnits].min;\n      let max = this.expiryUnitsOptions[this.expiryUnits].max;\n      let units = this.expiryUnitsOptions[this.expiryUnits].label;\n      this.expiresTooltip = `Min expiry in ${units} is ${min}, max expiry in ${units} is ${max}`;\n      this.notifyUser(this.expiresTooltip);\n    }\n  }\n\n  quickAsk($event) {\n    console.log('qa')\n    if (angular.isString(this.assetInfo.userBalance)) {\n      let quantityQNT = parseInt(utils.unformat(this.quantity));\n      let balanceQNT = parseInt(utils.unformat(this.currencyInfo.userBalance))\n      if (balanceQNT < quantityQNT) {\n        this.notifyUser(`Insufficient ${this.assetInfo.symbol} balance`);\n        return;\n      }\n      let price = parseInt(this.price)\n      this.ardorBlockExplorerService.sendTransactionWithSecret(`placeAskOrder&chain=2&asset=${this.currencyInfo.id}&quantityQNT=${quantityQNT}&priceNQTPerShare=${price}&secretPhrase=${this.user.secretPhrase}&feeNQT=3030000`)\n    }\n  }\n\n  quickBid($event) {\n    console.log('qb')\n    if (angular.isString(this.currencyInfo.userBalance)) {\n      let total = parseInt(utils.unformat(this.total));\n      let balanceQNT = parseInt(utils.unformat(this.currencyInfo.userBalance))\n      if (balanceQNT < total) {\n        this.notifyUser(`Insufficient ${this.currencyInfo.symbol} balance`);\n        return;\n      }\n      let price = parseInt(this.price)\n      this.ardorBlockExplorerService.sendTransactionWithSecret(`placeBidOrder&chain=2&asset=${this.currencyInfo.id}&quantityQNT=${total}&priceNQTPerShare=${price}&secretPhrase=${this.user.secretPhrase}&feeNQT=3030000`)\n    }\n  }\n\n  calculateTotalPrice() {\n    try {\n      var price = utils.unformat(this.price) || \"0\";\n      var quantity = utils.unformat(this.quantity) || \"0\";\n      if (price == \"0\" || quantity == \"0\") {\n        return \"\";\n      }\n      else {\n        var quantityQNT = utils.convertToQNT(quantity);\n        var priceQNT = utils.convertToQNT(price);\n        var totalQNT = utils.calculateTotalOrderPriceQNT(quantityQNT, priceQNT);\n        return utils.formatQNT(totalQNT, this.currencyInfo.decimals, true);\n      }\n    } catch (e) {\n      return \"\";\n    }\n  }\n\n  recalculateTotal() {\n    try {\n      var price = utils.unformat(this.price) || \"0\";\n      var quantity = utils.unformat(this.quantity) || \"0\";\n      if (price == \"0\" || quantity == \"0\") {\n        this.total = \"0\";\n      }\n      else {\n        this.total = String(parseFloat(utils.unformat(this.price)) * parseFloat(utils.unformat(this.quantity)))\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  recalculateAmount() {\n    try {\n      var price = utils.unformat(this.price) || \"0\";\n      var total = utils.unformat(this.total) || \"0\";\n      if (price == \"0\" || total == \"0\") {\n        this.quantity = \"0\";\n      }\n      else {\n        this.quantity = String(parseFloat(utils.unformat(this.total)) / parseFloat(utils.unformat(this.price)))\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","@Component({\n  selector: 'ardorTraderBalances',\n  inputs: ['currencyInfo','assetInfo'],\n  template: `\n    <div layout=\"row\" class=\"trader-component-title\">Account&nbsp;\n      <span flex></span>\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n    </div>\n    <md-list>\n      <md-list-item class=\"header\">\n        <div class=\"truncate-col symbol-col\">Asset</div>\n        <div class=\"truncate-col balance-col right-align\" flex>Balance</div>\n      </md-list-item>\n      <md-virtual-repeat-container  flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\n        <md-list-item md-virtual-repeat=\"item in vm.assetBalances\">\n          <div class=\"truncate-col symbol-col\" >{{item.symbol}}</div>\n          <div class=\"truncate-col balance-col right-align\" flex>{{item.balance}}</div>\n        </md-list-item>\n      </md-virtual-repeat-container>\n    </md-list>\n  `\n})\n@Inject('$scope','user','ardorAssetInfo','$q', 'ardorBlockExplorerService')\nclass ArdorTraderBalancesComponent {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n\n  assetBalances: Array<any> = [];\n\n  constructor(private $scope: angular.IScope,\n              private user: UserService,\n              private assetInfoService: ArdorAssetInfoService,\n              private $q: angular.IQService,\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\n    let ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        var refresh = utils.debounce((angular.bind(this, this.loadBalances)), 1*1000, false);\n        this.loadBalances();\n        unregister.forEach(fn=>{fn()});\n      }\n    }\n    let unregister = [$scope.$watch('vm.currencyInfo',ready),$scope.$watch('vm.assetInfo',ready)];\n  }\n\n  loadBalances() {\n\n    this.ardorBlockExplorerService.getBalance(this.user.account, 2).then(balance => {\n      this.assetBalances.push({symbol: 'IGNIS', balance: new Big(utils.convertToQNTf(balance)).toFixed(8), name:'IGNIS'})\n      this.assetInfo.userBalance = balance\n    })\n\n    this.ardorBlockExplorerService.getAccountAssets(this.user.account).then((assets) => {\n      this.$scope.$evalAsync(() => {\n        var promises = [];\n        assets.forEach((balance: IHeatAccountBalance|any) => {\n          promises.push(\n            this.assetInfoService.getInfo(balance.asset).then((info)=>{\n              this.$scope.$evalAsync(() => {\n                balance.symbol = info.symbol;\n                balance.name = info.name;\n                balance.balance = utils.formatQNT(balance.quantityQNT, info.decimals).replace(/.00000000$/,'');;\n                this.assetBalances.push(balance)\n              });\n            })\n          );\n          balance.symbol = '*';\n          balance.name = '*';\n          balance.balance = '*';\n\n          if (this.currencyInfo.id == balance.asset)\n            this.currencyInfo.userBalance = balance.quantityQNT;\n          if (this.assetInfo.id == balance.asset)\n            this.assetInfo.userBalance = balance.quantityQNT;\n        });\n        Promise.all(promises).then(()=>{\n          this.$scope.$evalAsync(() => {\n            this.assetBalances.sort((a:any,b:any)=> {\n              if (a.symbol < b.symbol) return 1;\n              if (a.symbol > b.symbol) return -1;\n              return 0;\n            });\n          });\n        });\n      })\n    });\n  }\n}\n","@Component({\n  selector: 'ardorTraderInfoAssetDescription',\n  inputs: ['currencyInfo','assetInfo'],\n  template: `\n    <div class=\"asset-container\">\n      <div class=\"asset-description\">\n        <div class=\"col\">\n          <div class=\"col-item\">\n            <div class=\"title\">\n              Asset name:\n            </div>\n            <div class=\"value\">\n              <a ng-click=\"vm.showDescription($event, vm.currencyInfo)\">{{vm.currencyInfo.name}}</a>\n            </div>\n          </div>\n          <div class=\"col-item issued-by\">\n            <div class=\"title\">\n              Issuer:\n            </div>\n            <div class=\"value\">\n              {{vm.currencyIssuerPublicName||vm.currencyIssuer}}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"asset-description\">\n        <div class=\"col\">\n          <div class=\"col-item header\">\n            <div class=\"title\">\n              Asset name:\n            </div>\n            <div class=\"value\">\n              <a ng-click=\"vm.showDescription($event, vm.assetInfo)\">{{vm.assetInfo.name}}</a>\n            </div>\n          </div>\n          <div class=\"col-item issued-by\">\n            <div class=\"title\">\n              Issuer:\n            </div>\n            <div class=\"value\">\n              {{vm.assetIssuerPublicName||vm.assetIssuer}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','assetInfo','$q','heat','user')\nclass ArdorTraderInfoAssetDescriptionComponent {\n\n  // inputs\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n\n  currencyIssuer: string;\n  currencyIssuerPublicName: string;\n  assetIssuer: string;\n  assetIssuerPublicName: string;\n  currencyLaunched: string;\n  assetLaunched: string;\n\n  constructor(private $scope: angular.IScope,\n              private assetInfoService: AssetInfoService,\n              private $q: angular.IQService,\n              private heat: HeatService,\n              public user: UserService) {\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        this.$scope.$evalAsync(()=> {\n          this.currencyIssuer = this.currencyInfo.issuer;\n          this.currencyIssuerPublicName = this.currencyInfo.issuerPublicName;\n          this.assetIssuer = this.assetInfo.issuer;\n          this.assetIssuerPublicName = this.assetInfo.issuerPublicName;\n        });\n        unregister.forEach(fn => fn());\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n  }\n\n  showDescription($event, info: AssetInfo) {\n    dialogs.assetInfo($event, info);\n  }\n}\n","@Component({\n  selector: 'ardorTraderInfo',\n  inputs: ['currencyInfo','assetInfo','toggleMarkets','marketsSidenavOpen'],\n  template: `\n    <div>\n      <div class=\"top-row\">\n        <div class=\"market-title\">\n          <span>\n            <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\n              <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\n              <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\n            </md-button>\n          </span>\n          <span class=\"market-title-text\">\n            <span ng-class=\"{certified:vm.currencyInfo.certified}\">{{vm.currencyInfo.symbol}}</span>/<span ng-class=\"{certified:vm.assetInfo.certified}\">{{vm.assetInfo.symbol}}</span>\n          </span>\n        </div>\n      </div>\n      <ardor-trader-info-asset-description currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-info-asset-description>\n    </div>\n  `\n})\nclass ArdorTraderInfoComponent {\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  toggleMarkets: Function; // @input (controls the parent component markets sidenav)\n  marketsSidenavOpen: boolean; // @input (bound to parent component markets sidenav md-is-open)\n}\n","@Component({\n  selector: 'ardorTraderMarkets',\n  template: `\n    <div class=\"trader-component-title\" layout=\"row\">Markets&nbsp;\n      <span flex></span>\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n    </div>\n    <input type=\"text\" placeholder=\"Search markets\" ng-model=\"vm.filter\" ng-change=\"vm.onFilterChange()\"></input>\n    <md-list flex layout-fill layout=\"column\">\n      <md-list-item>\n        <div class=\"truncate-col market-col\">Market</div>\n        <div class=\"truncate-col change-col\">Change</div>\n        <div class=\"truncate-col price-col\">Price</div>\n        <div class=\"truncate-col vol-col\" flex>Vol</div>\n      </md-list-item>\n      <md-virtual-repeat-container flex layout-fill layout=\"column\"\n          virtual-repeat-flex-helper ng-if=\"vm.markets.length>0\">\n        <md-list-item md-virtual-repeat=\"item in vm.markets | filter: vm.filterFunc\">\n          <div class=\"truncate-col market-col\">\n            <a href=\"#/ardor-trader/{{item.asset}}/ardor\">\n              <span ng-class=\"{certified:item.currencyInfo.certified}\">{{item.currencyInfo.symbol}}</span>/<span ng-class=\"{certified:item.assetInfo.certified}\">{{item.assetInfo.symbol}}</span>\n            </a>\n          </div>\n          <div class=\"truncate-col change-col\">{{item.change}}</div>\n          <div class=\"truncate-col price-col\">{{item.price}}</div>\n          <div class=\"truncate-col vol-col right-align\" flex>{{ item.vol }}</div>\n        </md-list-item>\n      </md-virtual-repeat-container>\n    </md-list>\n  `\n})\n\n@Inject('$scope','heat','ardorAssetInfo','storage','$q','$mdToast','$interval', 'ardorBlockExplorerService')\nclass ArdorTraderMarketsComponent {\n\n  // change, volume, price, none\n  sort: string = 'change';\n  asc: boolean = true;\n  filter: string = '';\n  filterFunc: Function;\n\n  preMarkets: Array<IHeatMarket> = [null, null]; //initialized to be not equals this.markets\n  markets: Array<any> = [];\n  showFakeMarketsWarning = true;\n\n  constructor(private $scope: angular.IScope,\n              private heat: HeatService,\n              private assetInfo: ArdorAssetInfoService,\n              private storage: StorageService,\n              private $q: angular.IQService,\n              private $mdToast: angular.material.IToastService,\n              private $interval: angular.IIntervalService,\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\n    this.filterFunc = (item) => this.filterFuncImpl(item);\n    var refresh = utils.debounce(angular.bind(this, this.loadMarkets), 5*1000, false);\n    heat.subscriber.trade({}, (trade)=> refresh, $scope);\n    this.loadMarkets();\n\n    let interval = $interval(()=>{\n      this.loadMarkets();\n    }, 20*1000, 0, false);\n    $scope.$on('$destroy',()=>{$interval.cancel(interval)});\n  }\n\n  loadMarkets() {\n    this.ardorBlockExplorerService.getAllAssets().then(assets => {\n      this.markets = assets\n      this.markets.forEach(market => {\n        market.currencyInfo = {symbol: market.name, name: market.name, description: market.description}\n        market.assetInfo = {symbol: 'IGNIS'}\n      })\n    })\n  }\n\n  isSpecialMarket(market: IHeatMarket) {\n    return market.currency == '5592059897546023466' && market.asset == '0';\n  }\n\n  compareMarketAlphabetical(a: IHeatMarket, b: IHeatMarket): number {\n    let currencyA = <AssetInfo>a['currencyInfo'];\n    let assetA = <AssetInfo>a['assetInfo'];\n    let currencyB = <AssetInfo>b['currencyInfo'];\n    let assetB = <AssetInfo>b['assetInfo'];\n\n    if (currencyA.symbol < currencyB.symbol)\n      return -1;\n    if (currencyA.symbol > currencyB.symbol)\n      return 1;\n    if (assetA.symbol < assetB.symbol)\n      return -1;\n    if (assetA.symbol > assetB.symbol)\n      return 1;\n    return 0;\n  }\n\n  public onFilterChange() {\n    this.$scope.$evalAsync(() => {\n      this.markets = [].concat(this.markets);\n    });\n  }\n\n  // filter function used in ng-repeat\n  private filterFuncImpl(market: IHeatMarket|any) {\n    if (this.filter) {\n      let mask = this.filter.toUpperCase();\n      if (!\n            (market.currencyInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\n             market.assetInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\n             market.currencyInfo.name.toUpperCase().indexOf(mask) >= 0 ||\n            (market.currencyInfo.description !== null && market.currencyInfo.description.toUpperCase().indexOf(mask) >= 0))\n         )\n      {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\n@Component({\n  selector: 'ardorTraderOrdersBuy',\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\n  template: `\n    <script type=\"text/ng-template\" id=\"popover.html\">\n      <div class=\"account-popover\">\n        {{item.account||item.accountName}}\n      </div>\n    </script>\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Buyers&nbsp;\n        <span flex></span>\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.currencyBalance}}&nbsp;{{vm.currencyInfo.symbol}}</span>\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col info-col\"></div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col quantity-col\">Quantity</div>\n          <div class=\"truncate-col total-col\">Total</div>\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\n            <div class=\"truncate-col info-col\">\n              <div\n                class=\"info\"\n                angular-popover\n                direction=\"right\"\n                template-url=\"popover.html\"\n                mode=\"mouseover\"\n                style=\"position: absolute;\",\n              >\n              </div>\n              <img src=\"assets/info.png\">\n            </div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope', '$rootScope', 'ardorOrdersProviderFactory', '$q', 'user', 'ardorBlockExplorerService')\nclass ArdorTraderOrdersBuyComponent extends VirtualRepeatComponent {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  selectedOrder: IHeatOrder; // @input\n\n  currencyBalance: string = \"*\"; // formatted currency balance\n\n  PAGE_SIZE = 100; /* VirtualRepeatComponent @override */\n\n  private orders: Array<IHeatOrder> = [];\n\n  refreshGrid: () => void;\n  refreshBalance: () => void;\n\n  constructor(protected $scope: angular.IScope,\n    private $rootScope: angular.IScope,\n    private ordersProviderFactory: ArdorOrdersProviderFactory,\n    $q: angular.IQService,\n    private user: UserService,\n    private ardorBlockExplorerService: ArdorBlockExplorerService) {\n    super($scope, $q);\n\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        let sum = 0;\n        /* initialize virtual repeat component */\n        this.initializeVirtualRepeat(\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, false),\n\n          /* decorator */\n          (order: IHeatOrder | any, context: any) => {\n            order.price = order.priceNQTPerShare\n            order.quantity = order.quantityQNT\n            order.unconfirmedQuantity = order.quantity\n            order.priceDisplay = utils.formatQNT(order.price, this.assetInfo.decimals);\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.currencyInfo.decimals);\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\n            sum +=  parseFloat(totalQNT)\n            order.sum = utils.formatQNT(sum.toString(), this.currencyInfo.decimals);\n            this.orders.push(order)\n          });\n        unregister.forEach(fn => fn());\n        if (this.user.unlocked) {\n          this.updateCurrencyBalance();\n        }\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\n\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateCurrencyBalance), 2000, false);\n\n    $scope.$on('balance', (event, opts) => {\n      let price = parseInt(this.orders[0].price);\n      let totalQuantity = 0;\n      let balance = parseFloat(opts.balance);\n      for (let i = 0; i < this.orders.length; i++) {\n        totalQuantity += parseInt(this.orders[i].quantity);\n        if (totalQuantity >= balance) {\n          price = parseInt(this.orders[i].price);\n          break;\n        }\n      }\n      price = price / 100000000;\n      let total = balance * (price);\n      this.$rootScope.$broadcast('price', { price, balance, total })\n    });\n  }\n\n  private broadcast() {\n    this.$rootScope.$broadcast('total', { total: this.currencyBalance })\n  }\n\n  onSelect(selectedOrder) {\n    this.selectedOrder = selectedOrder;\n  }\n\n  updateCurrencyBalance() {\n    this.ardorBlockExplorerService.getAccountAssets(this.user.account).then(assetBalances => {\n      assetBalances.forEach(assetBalance => {\n        if (assetBalance.asset === this.currencyInfo.id)\n          this.currencyBalance = utils.formatQNT(assetBalance.quantityQNT, this.currencyInfo.decimals);\n      });\n    }), () => {\n      this.currencyBalance = \"0\";\n    }\n  }\n}\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\n@Component({\n  selector: 'ardorTraderOrdersMy',\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\n  template: `\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.user.unlocked?'My':'All'}} pending orders&nbsp;\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col type-col\">Type</div>\n          <div class=\"truncate-col market-col\">Market</div>\n          <div class=\"truncate-col quantity-col\">Quantity</div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col total-col\">Total ({{vm.currencyInfo.symbol}})</div>\n          <div class=\"truncate-col expires-col\" flex>Expires</div>\n          <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\"></div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\"\n              ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\n            <div class=\"truncate-col type-col\">{{item.typeDisplay}}</div>\n            <div class=\"truncate-col market-col\">{{item.market}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\n            <div class=\"truncate-col expires-col\" flex tooltip=\"{{item.expires}}\">{{item.expires}}</div>\n            <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\">\n              <a ng-if=\"!item.cancelled && !item.unconfirmed\" ng-click=\"vm.cancelOrder(item)\">Cancel</a>\n            </div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope','ardorOrdersProviderFactory','$q','user','settings','cancelBidOrder','cancelAskOrder')\nclass ArdorTraderOrdersMyComponent extends VirtualRepeatComponent  {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  oneClickOrders: boolean; // @input\n\n  refreshGrid: ()=>void;\n\n  constructor(protected $scope: angular.IScope,\n              private ordersProviderFactory: ArdorOrdersProviderFactory,\n              $q: angular.IQService,\n              public user: UserService,\n              settings: SettingsService,\n              private cancelBidOrder: CancelBidOrderService,\n              private cancelAskOrder: CancelAskOrderService,)\n  {\n    super($scope, $q);\n\n    var format = settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n\n        /* initialize virtual repeat component */\n        this.initializeVirtualRepeat(\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, user.account),\n\n          /* decorator function */\n          (order: any|IHeatOrder) => {\n            order.price = order.priceNQTPerShare\n            order.quantity = order.quantityQNT\n            order.typeDisplay = order.type == 'ask' ? 'Sell' : 'Buy';\n            order.market = this.currencyInfo.symbol + '/' + this.assetInfo.symbol;\n            order.quantityDisplay = utils.formatQNT(order.quantity, this.assetInfo.decimals);\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.quantity, order.price);\n            order.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\n            var date = utils.timestampToDate(order.expiration);\n            order.expires = dateFormat(date, format);\n          }\n        );\n\n        /* stop watching the currenyInfo and assetInfo */\n        unregister.forEach(fn => fn());\n\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 1000, false);\n  }\n\n  onSelect(item) {}\n\n  cancelOrder(order: IHeatOrder) {\n    var dialog = order.type == 'ask' ?\n      this.cancelAskOrder.dialog(order.order):\n      this.cancelBidOrder.dialog(order.order);\n    if (this.oneClickOrders)\n      dialog.send()\n    else\n      dialog.show()\n  }\n}\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\n@Component({\n  selector: 'ardorTraderOrdersSell',\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\n  template: `\n    <script type=\"text/ng-template\" id=\"templateId.tml\">\n      <div class=\"account-popover\">\n        {{item.account||item.accountName}}\n      </div>\n    </script>\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Sellers&nbsp;\n        <span flex></span>\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.assetBalance}}&nbsp;{{vm.assetInfo.symbol}}</span>\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item  class=\"header\">\n          <div class=\"truncate-col info-col\"></div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col quantity-col\">Quantity</div>\n          <div class=\"truncate-col total-col\">Total</div>\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper class=\"content\">\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\n           <div class=\"truncate-col info-col\">\n             <div\n              class=\"info\"\n              angular-popover\n              direction=\"right\"\n              template-url=\"templateId.tml\"\n              mode=\"mouseover\"\n              style=\"position: absolute;\">\n             </div>\n             <img src=\"assets/info.png\">\n           </div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope', '$rootScope', 'ardorOrdersProviderFactory', '$q', 'user', 'ardorBlockExplorerService')\nclass ArdorTraderOrdersSellComponent extends VirtualRepeatComponent {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  selectedOrder: IHeatOrder; // @input\n\n  assetBalance: string = \"*\"; // formatted asset balance\n\n  PAGE_SIZE = 100; /* VirtualRepeatComponent */\n\n  private orders: Array<IHeatOrder> = [];\n\n  refreshGrid: () => void;\n  refreshBalance: () => void;\n\n  constructor(protected $scope: angular.IScope,\n    private $rootScope: angular.IScope,\n    private ordersProviderFactory: ArdorOrdersProviderFactory,\n    $q: angular.IQService,\n    private user: UserService,\n    private ardorBlockExplorerService: ArdorBlockExplorerService) {\n    super($scope, $q);\n\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        let sum = 0;\n        /* initialize virtual repeat component */\n        this.initializeVirtualRepeat(\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, true),\n\n          /* decorator */\n          (order: IHeatOrder | any, context: any) => {\n            order.price = order.priceNQTPerShare\n            order.quantity = order.quantityQNT\n            order.unconfirmedQuantity = order.quantity\n            order.priceDisplay = utils.formatQNT(order.price, this.assetInfo.decimals);\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.currencyInfo.decimals);\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\n            sum +=  parseFloat(totalQNT)\n            order.sum = utils.formatQNT(sum.toString(), this.currencyInfo.decimals);\n            this.orders.push(order);\n          });\n        unregister.forEach(fn => fn());\n        if (this.user.unlocked) {\n          this.updateAssetBalance();\n        }\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\n\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateAssetBalance), 2000, false);\n\n    $scope.$on('total', (event, opts) => {\n      let price = parseInt(this.orders[0].price);\n      let totalQuantity = 0;\n      let total = parseFloat(opts.total);\n      for (let i = 0; i < this.orders.length; i++) {\n        totalQuantity += (parseFloat(this.orders[i].quantity) / 100000000);\n        if (totalQuantity >= total) {\n          price = parseInt(this.orders[i].price);\n          break;\n        }\n      }\n      price = price / 100000000;\n      let balance = total / price;\n      this.$rootScope.$broadcast('price', { price, balance, total })\n    });\n  }\n\n  private broadcast() {\n    this.$rootScope.$broadcast('balance', { balance: this.assetBalance })\n  }\n\n  onSelect(selectedOrder) {\n    this.selectedOrder = selectedOrder;\n  }\n\n  updateAssetBalance() {\n    this.ardorBlockExplorerService.getBalance(this.user.account, 2).then(balance => {\n      this.assetBalance = utils.formatQNT(balance, this.assetInfo.decimals);\n    }), () => {\n      this.assetBalance = \"0\";\n    }\n  }\n}\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\n@Component({\n  selector: 'ardorTraderTradeHistory',\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\n  template: `\n  <script type=\"text/ng-template\" id=\"popoverHistory.html\">\n    <div class=\"account-popover\">\n      <div>Buyer: {{item.buyerName||item.buyer}}</div>\n      <div>Seller: {{item.sellerName||item.seller}}</div>\n    </div>\n  </script>\n    <div layout=\"column\" flex layout-fill>\n      <div layout=\"row\" class=\"trader-component-title\">Past trades&nbsp;\n        <span flex></span>\n        <span layout=\"row\" ng-if=\"vm.user.unlocked\" class=\"selector\">\n          <label>\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"all\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\n            <i>Show all trades</i>\n          </label>\n          <label>\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"my\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\n            <i>Show my trades</i>\n          </label>\n        </span>\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\n      </div>\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\n        <md-list-item class=\"header\">\n          <div class=\"truncate-col info-col\"></div>\n          <div class=\"truncate-col type-col\">Type</div>\n          <div class=\"truncate-col time-col\" flex>Time</div>\n          <div class=\"truncate-col price-col\">Price</div>\n          <div class=\"truncate-col quantity-col\">{{vm.assetInfo.symbol}}</div>\n          <div class=\"truncate-col total-col\" flex>Total ({{vm.currencyInfo.symbol}})</div>\n        </md-list-item>\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" ng-class=\"{'virtual': item.virtual}\">\n            <div class=\"truncate-col info-col\">\n              <div\n                class=\"info\"\n                angular-popover\n                direction=\"right\"\n                template-url=\"popoverHistory.html\"\n                mode=\"mouseover\"\n                style=\"position: absolute;\">\n              </div>\n              <img src=\"assets/info.png\">\n            </div>\n            <div class=\"truncate-col type-col\">{{item.type}}</div>\n            <div class=\"truncate-col time-col\" flex>{{item.time}}</div>\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\n            <div class=\"truncate-col total-col\" flex>{{item.total}}</div>\n          </md-list-item>\n        </md-virtual-repeat-container>\n      </md-list>\n    </div>\n  `\n})\n@Inject('$scope', '$window', 'ardorTradesProviderFactory','$q','user','settings')\nclass ArdorTraderTradeHistoryComponent extends VirtualRepeatComponent  {\n\n  /* @inputs */\n  currencyInfo: AssetInfo; // @input\n  assetInfo: AssetInfo; // @input\n  oneClickOrders: boolean; // @input\n\n  showTheseTrades: string = \"all\";\n\n  constructor(protected $scope: angular.IScope,\n              private $window: ng.IWindowService,\n              private tradesProviderFactory: ArdorTradesProviderFactory,\n              $q: angular.IQService,\n              private user: UserService,\n              private settings: SettingsService)\n  {\n    super($scope, $q);\n\n    var ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        this.createProvider();\n        unregister.forEach(fn => fn());\n        angular.element($window).bind('resize', () => this.onResize());\n      }\n    };\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n  }\n\n  createProvider() {\n    let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\n    if (this.$window.innerWidth < 870) {\n      format = this.settings.get(SettingsService.TIMEFORMAT_DEFAULT);\n    }\n    var account = this.showTheseTrades == 'all' ? null : this.user.account;\n    this.initializeVirtualRepeat(\n      this.tradesProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, account),\n\n      /* decorator function */\n      (trade: IHeatTrade|any) => {\n        var date = utils.ardorTimestampToDate(trade.timestamp);\n        trade.time = dateFormat(date, format);\n        if (account) {\n          trade.type = trade.seller == account ? 'Sell' : 'Buy'\n        }\n        else {\n          trade.type = trade.isBuy ? 'Buy' : 'Sell';\n        }\n        trade.price = trade.priceNQTPerShare\n        trade.quantity = trade.quantityQNT\n        trade.priceDisplay = utils.formatQNT(trade.price, this.assetInfo.decimals);\n        trade.quantityDisplay = utils.formatQNT(trade.quantity, this.currencyInfo.decimals);\n        var totalQNT = utils.calculateTotalOrderPriceQNT(trade.quantity, trade.price);\n        trade.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\n        trade.virtual = trade.block == \"0\";\n      }\n    );\n  }\n\n  onSelect(item) {}\n\n  updateView() {\n    if (this.currencyInfo && this.assetInfo) {\n      this.createProvider();\n    }\n  }\n  onResize() {\n    this.updateView()\n  }\n}\n","declare var Big: any;\n@RouteConfig('/ardor-trader/:currency/:asset')\n@Component({\n  selector: 'ardorTrader',\n  inputs: ['currency','asset'],\n  template: `\n    <div layout=\"row\">\n      <!--\n      <div>\n        <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\n          <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\n          <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\n        </md-button>\n      </div>\n      -->\n      <span flex></span>\n      <trader-volume class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" layout=\"column\"></trader-volume>\n    </div>\n    <div layout=\"row\" flex layout-fill>\n      <md-sidenav class=\"md-sidenav-left\" md-component-id=\"trader-markets-sidenav\"\n          md-is-locked-open=\"vm.marketsSidenavLockedOpen\" md-is-open=\"vm.marketsSidenavOpen\"\n          md-disable-backdrop flex layout-fill>\n        <div class=\"sidenav-container\">\n          <ardor-trader-balances currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" ng-if=\"vm.user.unlocked\"></ardor-trader-balances>\n          <ardor-trader-markets></ardor-trader-markets>\n        </div>\n      </md-sidenav>\n      <div layout=\"column\" flex layout-fill class=\"main-display\">\n        <div>\n          <div class=\"trader-row top\">\n              <ardor-trader-info class=\"trader-component\" toggle-markets=\"vm.toggleMarkets\" markets-sidenav-open=\"vm.marketsSidenavOpen\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-info>\n              <trader-chart class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-chart>\n          </div>\n          <div class=\"trader-row middle\">\n            <ardor-trader-orders-buy class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-orders-buy>\n            <ardor-trader-quick-buy-sell class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-quick-buy-sell>\n            <ardor-trader-orders-sell class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"l></ardor-trader-orders-sell>\n          </div>\n          <div class=\"trader-row bottom\">\n            <ardor-trader-trade-history class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-trade-history>\n            <ardor-trader-orders-my ng-if=\"vm.user.unlocked\" class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-orders-my>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\n@Inject('$scope','user','$timeout','ardorAssetInfo','$mdSidenav')\nclass ArdorTraderComponent {\n\n  currency: string; // @input\n  asset: string; // @input\n\n  currencyInfo: AssetInfo;\n  assetInfo: AssetInfo;\n\n  oneClickOrders: boolean;\n\n  marketCurrency: string = \"0\";\n  marketSort: string = \"change\";\n  marketAsc: string = \"false\";\n\n  toggleMarkets: Function;\n  marketsSidenavOpen: boolean = true;\n  marketsSidenavLockedOpen: boolean = true;\n\n  selectedOrder: IHeatOrder; // the order currently selected in either buy-orders or sell-orders lists.\n\n  constructor(private $scope: angular.IScope,\n              public user: UserService,\n              private $timeout: angular.ITimeoutService,\n              private assetInfoService: ArdorAssetInfoService,\n              private $mdSidenav: angular.material.ISidenavService) {\n\n    /* @input this is passed as method to trader-info component which has the button to call this action */\n    this.toggleMarkets = () => {\n      var sidenav = this.$mdSidenav(\"trader-markets-sidenav\");\n      if (sidenav.isOpen()) {\n        this.marketsSidenavLockedOpen = false;\n        sidenav.close();\n      }\n      else {\n        this.marketsSidenavLockedOpen = true;\n        sidenav.open();\n      }\n    };\n    // lookup currency and asset info and pass as parameters to child components\n    assetInfoService.getInfo(this.currency).then((info) => {\n      $scope.$evalAsync(() => {\n        this.currencyInfo = info;\n      });\n    });\n    assetInfoService.getInfo(this.asset).then((info) => {\n      $scope.$evalAsync(() => {\n        this.assetInfo = info;\n      });\n    });\n\n    this.user.account = user.account || \"\";\n    let ready = () => {\n      if (this.currencyInfo && this.assetInfo) {\n        unregister.forEach((fn)=>{fn()});\n      }\n    }\n    let unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\n  }\n}\n","@Service('ardorOrdersProviderFactory')\n@Inject('ardorBlockExplorerService', '$q')\nclass ArdorOrdersProviderFactory {\n  constructor(private ardorBlockExplorerService: ArdorBlockExplorerService, private $q: angular.IQService) { }\n\n  public createProvider(currency: string, asset: string, account?: string, isAsk?: boolean): IPaginatedDataProvider {\n    return new ArdorOrdersProvider(currency, asset, account, isAsk, this.ardorBlockExplorerService, this.$q);\n  }\n}\n\nclass ArdorOrdersProvider implements IPaginatedDataProvider {\n  constructor(private currency: string,\n    private asset: string,\n    private account: string,\n    private isAsk: boolean,\n    private ardorBlockExplorerService: ArdorBlockExplorerService,\n    private $q: angular.IQService) { }\n\n  /* The number of items available */\n  public getPaginatedLength(): angular.IPromise<number> {\n    if (this.account) {\n      return this.ardorBlockExplorerService.getMyPendingOrdersCount(this.account, this.currency)\n    } else if (this.isAsk) {\n      return this.ardorBlockExplorerService.getAskOrdersCount(this.currency)\n    }\n    return this.ardorBlockExplorerService.getBidOrdersCount(this.currency)\n  }\n\n  /* Returns results starting at firstIndex and up to and including lastIndex */\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatOrder>> {\n    if (this.account) {\n      return this.ardorBlockExplorerService.getMyPendingOrders(this.account, this.currency, firstIndex, lastIndex)\n    } else if (this.isAsk) {\n      return this.ardorBlockExplorerService.getAskOrders(this.currency, firstIndex, lastIndex)\n    }\n    return this.ardorBlockExplorerService.getBidOrders(this.currency, firstIndex, lastIndex)\n  }\n}\n\n\n\n"],"sourceRoot":"/source/"}